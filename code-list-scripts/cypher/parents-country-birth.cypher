CREATE CONSTRAINT ON (n:`_code_parents-country-birth`) ASSERT n.value IS UNIQUE;
CREATE CONSTRAINT ON (n:`_code_list_parents-country-birth`) ASSERT n.value IS UNIQUE;
CREATE (node:`_code_list`:`_code_list_parents-country-birth` { label:'parentscountryofbirth', edition:'one-off' });
MERGE (node:`_code`:`_code_parents-country-birth` { value:"total-number-of-live-births" });
MATCH (parent:`_code_list`:`_code_list_parents-country-birth`),(node:`_code`:`_code_parents-country-birth` { value:"total-number-of-live-births" }) MERGE (node)-[:usedBy { label:"Total number of live births"}]->(parent);
MERGE (node:`_code`:`_code_parents-country-birth` { value:"live-births-to-uk-born-mothers" });
MATCH (parent:`_code_list`:`_code_list_parents-country-birth`),(node:`_code`:`_code_parents-country-birth` { value:"live-births-to-uk-born-mothers" }) MERGE (node)-[:usedBy { label:"Live births to UK-born mothers"}]->(parent);
MERGE (node:`_code`:`_code_parents-country-birth` { value:"live-births-to-non-uk-born-mothers" });
MATCH (parent:`_code_list`:`_code_list_parents-country-birth`),(node:`_code`:`_code_parents-country-birth` { value:"live-births-to-non-uk-born-mothers" }) MERGE (node)-[:usedBy { label:"Live births to non-UK-born mothers"}]->(parent);
MERGE (node:`_code`:`_code_parents-country-birth` { value:'mothers-country-of-birth-eu' });
MATCH (parent:`_code_list`:`_code_list_parents-country-birth`),(node:`_code`:`_code_parents-country-birth` { value:'mothers-country-of-birth-eu' }) MERGE (node)-[:usedBy { label:'Mothers country of birth - EU'}]->(parent);
MERGE (node:`_code`:`_code_parents-country-birth` { value:'mothers-country-of-birth-new-eu' });
MATCH (parent:`_code_list`:`_code_list_parents-country-birth`),(node:`_code`:`_code_parents-country-birth` { value:'mothers-country-of-birth-new-eu' }) MERGE (node)-[:usedBy { label:'Mothers country of birth - New EU'}]->(parent);
MERGE (node:`_code`:`_code_parents-country-birth` { value:'mothers-country-of-birth-rest-of-europe' });
MATCH (parent:`_code_list`:`_code_list_parents-country-birth`),(node:`_code`:`_code_parents-country-birth` { value:'mothers-country-of-birth-rest-of-europe' }) MERGE (node)-[:usedBy { label:'Mothers country of birth - Rest of Europe (non EU)'}]->(parent);
MERGE (node:`_code`:`_code_parents-country-birth` { value:'mothers-country-of-birth-middle-east-and-asia' });
MATCH (parent:`_code_list`:`_code_list_parents-country-birth`),(node:`_code`:`_code_parents-country-birth` { value:'mothers-country-of-birth-middle-east-and-asia' }) MERGE (node)-[:usedBy { label:'Mothers country of birth - Middle East and Asia'}]->(parent);
MERGE (node:`_code`:`_code_parents-country-birth` { value:'mothers-country-of-birth-africa' });
MATCH (parent:`_code_list`:`_code_list_parents-country-birth`),(node:`_code`:`_code_parents-country-birth` { value:'mothers-country-of-birth-africa' }) MERGE (node)-[:usedBy { label:'Mothers country of birth - Africa'}]->(parent);
MERGE (node:`_code`:`_code_parents-country-birth` { value:'mothers-country-of-birth-rest-of-world' });
MATCH (parent:`_code_list`:`_code_list_parents-country-birth`),(node:`_code`:`_code_parents-country-birth` { value:'mothers-country-of-birth-rest-of-world' }) MERGE (node)-[:usedBy { label:'Mothers country of birth - Rest of World'}]->(parent);
MERGE (node:`_code`:`_code_parents-country-birth` { value:"one-parent-born-outside-uk" });
MATCH (parent:`_code_list`:`_code_list_parents-country-birth`),(node:`_code`:`_code_parents-country-birth` { value:"one-parent-born-outside-uk" }) MERGE (node)-[:usedBy { label:"Live births where one parent is born outside of the UK"}]->(parent);
MERGE (node:`_code`:`_code_parents-country-birth` { value:"both-parents-born-outside-uk" });
MATCH (parent:`_code_list`:`_code_list_parents-country-birth`),(node:`_code`:`_code_parents-country-birth` { value:"both-parents-born-outside-uk" }) MERGE (node)-[:usedBy { label:"Live births where both parents are born outside of the UK"}]->(parent);
MERGE (node:`_code`:`_code_parents-country-birth` { value:"one-or-both-parents-born-outside-uk" });
MATCH (parent:`_code_list`:`_code_list_parents-country-birth`),(node:`_code`:`_code_parents-country-birth` { value:"one-or-both-parents-born-outside-uk" }) MERGE (node)-[:usedBy { label:"Live births where either one or both parents are born outside of the UK"}]->(parent);
