CREATE CONSTRAINT ON (n:`_code_shipping-port`) ASSERT n.code IS UNIQUE;
CREATE CONSTRAINT ON (n:`_code_list_shipping-port`) ASSERT n.code IS UNIQUE;
CREATE (node:`_code_list`:`_code_list_shipping-port` { label:"port", edition:"one-off" });
MERGE (node:`_code`:`_code_shipping-port` { value:"all-of-uk" });
MATCH (parent:`_code_list`:`_code_list_shipping-port`),(node:`_code`:`_code_shipping-port` { value:"all-of-uk" }) MERGE (node)-[:usedBy { label:"All of UK"}]->(parent);
MERGE (node:`_code`:`_code_shipping-port` { value:"grimsby-immingham" });
MATCH (parent:`_code_list`:`_code_list_shipping-port`),(node:`_code`:`_code_shipping-port` { value:"grimsby-immingham" }) MERGE (node)-[:usedBy { label:"Grimsby & Immingham"}]->(parent);
MERGE (node:`_code`:`_code_shipping-port` { value:"london" });
MATCH (parent:`_code_list`:`_code_list_shipping-port`),(node:`_code`:`_code_shipping-port` { value:"london" }) MERGE (node)-[:usedBy { label:"London"}]->(parent);
MERGE (node:`_code`:`_code_shipping-port` { value:"southampton" });
MATCH (parent:`_code_list`:`_code_list_shipping-port`),(node:`_code`:`_code_shipping-port` { value:"southampton" }) MERGE (node)-[:usedBy { label:"Southampton"}]->(parent);
MERGE (node:`_code`:`_code_shipping-port` { value:"liverpool" });
MATCH (parent:`_code_list`:`_code_list_shipping-port`),(node:`_code`:`_code_shipping-port` { value:"liverpool" }) MERGE (node)-[:usedBy { label:"Liverpool"}]->(parent);
MERGE (node:`_code`:`_code_shipping-port` { value:"milford-haven" });
MATCH (parent:`_code_list`:`_code_list_shipping-port`),(node:`_code`:`_code_shipping-port` { value:"milford-haven" }) MERGE (node)-[:usedBy { label:"Milford Haven"}]->(parent);
MERGE (node:`_code`:`_code_shipping-port` { value:"felixstowe" });
MATCH (parent:`_code_list`:`_code_list_shipping-port`),(node:`_code`:`_code_shipping-port` { value:"felixstowe" }) MERGE (node)-[:usedBy { label:"Felixstowe"}]->(parent);
MERGE (node:`_code`:`_code_shipping-port` { value:"tees-hartlepool" });
MATCH (parent:`_code_list`:`_code_list_shipping-port`),(node:`_code`:`_code_shipping-port` { value:"tees-hartlepool" }) MERGE (node)-[:usedBy { label:"Tees & Hartlepool"}]->(parent);
MERGE (node:`_code`:`_code_shipping-port` { value:"forth" });
MATCH (parent:`_code_list`:`_code_list_shipping-port`),(node:`_code`:`_code_shipping-port` { value:"forth" }) MERGE (node)-[:usedBy { label:"Forth"}]->(parent);
MERGE (node:`_code`:`_code_shipping-port` { value:"dover" });
MATCH (parent:`_code_list`:`_code_list_shipping-port`),(node:`_code`:`_code_shipping-port` { value:"dover" }) MERGE (node)-[:usedBy { label:"Dover"}]->(parent);
MERGE (node:`_code`:`_code_shipping-port` { value:"belfast" });
MATCH (parent:`_code_list`:`_code_list_shipping-port`),(node:`_code`:`_code_shipping-port` { value:"belfast" }) MERGE (node)-[:usedBy { label:"Belfast"}]->(parent);
MERGE (node:`_code`:`_code_shipping-port` { value:"holyhead" });
MATCH (parent:`_code_list`:`_code_list_shipping-port`),(node:`_code`:`_code_shipping-port` { value:"holyhead" }) MERGE (node)-[:usedBy { label:"Holyhead"}]->(parent);
MERGE (node:`_code`:`_code_shipping-port` { value:"larne" });
MATCH (parent:`_code_list`:`_code_list_shipping-port`),(node:`_code`:`_code_shipping-port` { value:"larne" }) MERGE (node)-[:usedBy { label:"Larne"}]->(parent);
MERGE (node:`_code`:`_code_shipping-port` { value:"warrenpoint" });
MATCH (parent:`_code_list`:`_code_list_shipping-port`),(node:`_code`:`_code_shipping-port` { value:"warrenpoint" }) MERGE (node)-[:usedBy { label:"Warrenpoint"}]->(parent);
MERGE (node:`_code`:`_code_shipping-port` { value:"portsmouth" });
MATCH (parent:`_code_list`:`_code_list_shipping-port`),(node:`_code`:`_code_shipping-port` { value:"portsmouth" }) MERGE (node)-[:usedBy { label:"Portsmouth"}]->(parent);
MERGE (node:`_code`:`_code_shipping-port` { value:"tyne" });
MATCH (parent:`_code_list`:`_code_list_shipping-port`),(node:`_code`:`_code_shipping-port` { value:"tyne" }) MERGE (node)-[:usedBy { label:"Tyne"}]->(parent);
MERGE (node:`_code`:`_code_shipping-port` { value:"hull" });
MATCH (parent:`_code_list`:`_code_list_shipping-port`),(node:`_code`:`_code_shipping-port` { value:"hull" }) MERGE (node)-[:usedBy { label:"Hull"}]->(parent);

