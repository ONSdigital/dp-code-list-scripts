CREATE CONSTRAINT ON (n:`_code_household-reference-person`) ASSERT n.code IS UNIQUE;
CREATE CONSTRAINT ON (n:`_code_list_household-reference-person`) ASSERT n.code IS UNIQUE;
CREATE (node:`_code_list`:`_code_list_household-reference-person` { label:"householdreferenceperson", edition:"one-off" });
MERGE (node:`_code`:`_code_household-reference-person` { value:"all-categories-ns-sec-of-household-reference-person" });
MATCH (parent:`_code_list`:`_code_list_household-reference-person`),(node:`_code`:`_code_household-reference-person` { value:"all-categories-ns-sec-of-household-reference-person" }) MERGE (node)-[:usedBy { label:"All categories: NS-SeC of Household Reference Person"}]->(parent);
MERGE (node:`_code`:`_code_household-reference-person` { value:"higher-managerial,-administrative-and-professional-occupations" });
MATCH (parent:`_code_list`:`_code_list_household-reference-person`),(node:`_code`:`_code_household-reference-person` { value:"higher-managerial,-administrative-and-professional-occupations" }) MERGE (node)-[:usedBy { label:"1. Higher managerial, administrative and professional occupations"}]->(parent);
MERGE (node:`_code`:`_code_household-reference-person` { value:"large-employers-and-higher-managerial-and-administrative-occupations" });
MATCH (parent:`_code_list`:`_code_list_household-reference-person`),(node:`_code`:`_code_household-reference-person` { value:"large-employers-and-higher-managerial-and-administrative-occupations" }) MERGE (node)-[:usedBy { label:"1.1 Large employers and higher managerial and administrative occupations"}]->(parent);
MERGE (node:`_code`:`_code_household-reference-person` { value:"higher-professional-occupations" });
MATCH (parent:`_code_list`:`_code_list_household-reference-person`),(node:`_code`:`_code_household-reference-person` { value:"higher-professional-occupations" }) MERGE (node)-[:usedBy { label:"1.2 Higher professional occupations"}]->(parent);
MERGE (node:`_code`:`_code_household-reference-person` { value:"lower-managerial,-administrative-and-professional-occupations" });
MATCH (parent:`_code_list`:`_code_list_household-reference-person`),(node:`_code`:`_code_household-reference-person` { value:"lower-managerial,-administrative-and-professional-occupations" }) MERGE (node)-[:usedBy { label:"2. Lower managerial, administrative and professional occupations"}]->(parent);
MERGE (node:`_code`:`_code_household-reference-person` { value:"intermediate-occupations" });
MATCH (parent:`_code_list`:`_code_list_household-reference-person`),(node:`_code`:`_code_household-reference-person` { value:"intermediate-occupations" }) MERGE (node)-[:usedBy { label:"3. Intermediate occupations"}]->(parent);
MERGE (node:`_code`:`_code_household-reference-person` { value:"small-employers-and-own-account-workers" });
MATCH (parent:`_code_list`:`_code_list_household-reference-person`),(node:`_code`:`_code_household-reference-person` { value:"small-employers-and-own-account-workers" }) MERGE (node)-[:usedBy { label:"4. Small employers and own account workers"}]->(parent);
MERGE (node:`_code`:`_code_household-reference-person` { value:"lower-supervisory-and-technical-occupations" });
MATCH (parent:`_code_list`:`_code_list_household-reference-person`),(node:`_code`:`_code_household-reference-person` { value:"lower-supervisory-and-technical-occupations" }) MERGE (node)-[:usedBy { label:"5. Lower supervisory and technical occupations"}]->(parent);
MERGE (node:`_code`:`_code_household-reference-person` { value:"semi-routine-occupations" });
MATCH (parent:`_code_list`:`_code_list_household-reference-person`),(node:`_code`:`_code_household-reference-person` { value:"semi-routine-occupations" }) MERGE (node)-[:usedBy { label:"6. Semi-routine occupations"}]->(parent);
MERGE (node:`_code`:`_code_household-reference-person` { value:"routine-occupations" });
MATCH (parent:`_code_list`:`_code_list_household-reference-person`),(node:`_code`:`_code_household-reference-person` { value:"routine-occupations" }) MERGE (node)-[:usedBy { label:"7. Routine occupations"}]->(parent);
MERGE (node:`_code`:`_code_household-reference-person` { value:"never-worked-and-long-term-unemployed" });
MATCH (parent:`_code_list`:`_code_list_household-reference-person`),(node:`_code`:`_code_household-reference-person` { value:"never-worked-and-long-term-unemployed" }) MERGE (node)-[:usedBy { label:"8. Never worked and long-term unemployed"}]->(parent);
MERGE (node:`_code`:`_code_household-reference-person` { value:"never-worked" });
MATCH (parent:`_code_list`:`_code_list_household-reference-person`),(node:`_code`:`_code_household-reference-person` { value:"never-worked" }) MERGE (node)-[:usedBy { label:"L14.1 Never worked"}]->(parent);
MERGE (node:`_code`:`_code_household-reference-person` { value:"long-term-unemployed" });
MATCH (parent:`_code_list`:`_code_list_household-reference-person`),(node:`_code`:`_code_household-reference-person` { value:"long-term-unemployed" }) MERGE (node)-[:usedBy { label:"L14.2 Long-term unemployed"}]->(parent);
MERGE (node:`_code`:`_code_household-reference-person` { value:"not-classified" });
MATCH (parent:`_code_list`:`_code_list_household-reference-person`),(node:`_code`:`_code_household-reference-person` { value:"not-classified" }) MERGE (node)-[:usedBy { label:"Not classified"}]->(parent);
MERGE (node:`_code`:`_code_household-reference-person` { value:"full-time-students" });
MATCH (parent:`_code_list`:`_code_list_household-reference-person`),(node:`_code`:`_code_household-reference-person` { value:"full-time-students" }) MERGE (node)-[:usedBy { label:"L15 Full-time students"}]->(parent);
MERGE (node:`_code`:`_code_household-reference-person` { value:"not-classifiable-for-other-reasons" });
MATCH (parent:`_code_list`:`_code_list_household-reference-person`),(node:`_code`:`_code_household-reference-person` { value:"not-classifiable-for-other-reasons" }) MERGE (node)-[:usedBy { label:"L17 Not classifiable for other reasons"}]->(parent);
