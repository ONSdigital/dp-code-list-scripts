CREATE (node:`_code_list`:`_code_list_crime-type` { label:'crimetype', edition:'one-off' });
CREATE CONSTRAINT ON (n:`_code_list_crime-type`) ASSERT n.value IS UNIQUE;
CREATE CONSTRAINT ON (n:`_code_crime-type`) ASSERT n.value IS UNIQUE;

MERGE (node:`_code`:`_code_crime-type` { value:'common-assault-with-injury' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'common-assault-with-injury' }) MERGE (node)-[:usedBy { label:"Common assault with injury"}]->(parent);
MERGE (node:`_code`:`_code_crime-type` { value:'common-assault' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'common-assault' }) MERGE (node)-[:usedBy { label:"Common assault"}]->(parent);
MERGE (node:`_code`:`_code_crime-type` { value:'acquaintance-violence' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'acquaintance-violence' }) MERGE (node)-[:usedBy { label:"Acquaintance violence"}]->(parent);
MERGE (node:`_code`:`_code_crime-type` { value:'other-personal-theft' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'other-personal-theft' }) MERGE (node)-[:usedBy { label:"Other personal theft"}]->(parent);
MERGE (node:`_code`:`_code_crime-type` { value:'all-personal-crime' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'all-personal-crime' }) MERGE (node)-[:usedBy { label:"All personal crime"}]->(parent);
MERGE (node:`_code`:`_code_crime-type` { value:'total-csew-crime' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'total-csew-crime' }) MERGE (node)-[:usedBy { label:"Total CSEW crime"}]->(parent);
MERGE (node:`_code`:`_code_crime-type` { value:'robbery' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'robbery' }) MERGE (node)-[:usedBy { label:"Robbery"}]->(parent);
MERGE (node:`_code`:`_code_crime-type` { value:'mugging' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'mugging' }) MERGE (node)-[:usedBy { label:"Mugging"}]->(parent);
MERGE (node:`_code`:`_code_crime-type` { value:'domestic-violence' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'domestic-violence' }) MERGE (node)-[:usedBy { label:"Domestic violence"}]->(parent);
MERGE (node:`_code`:`_code_crime-type` { value:'wounding' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'wounding' }) MERGE (node)-[:usedBy { label:"Wounding"}]->(parent);
MERGE (node:`_code`:`_code_crime-type` { value:'snatch-theft' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'snatch-theft' }) MERGE (node)-[:usedBy { label:"Snatch theft"}]->(parent);
MERGE (node:`_code`:`_code_crime-type` { value:'stranger-violence' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'stranger-violence' }) MERGE (node)-[:usedBy { label:"Stranger violence"}]->(parent);
MERGE (node:`_code`:`_code_crime-type` { value:'all-personal-theft' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'all-personal-theft' }) MERGE (node)-[:usedBy { label:"All personal theft"}]->(parent);
MERGE (node:`_code`:`_code_crime-type` { value:'stealth-theft' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'stealth-theft' }) MERGE (node)-[:usedBy { label:"Stealth theft"}]->(parent);
MERGE (node:`_code`:`_code_crime-type` { value:'violence-with-injury' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'violence-with-injury' }) MERGE (node)-[:usedBy { label:"Violence with injury"}]->(parent);
MERGE (node:`_code`:`_code_crime-type` { value:'violence-without-injury' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'violence-without-injury' }) MERGE (node)-[:usedBy { label:"Violence without injury"}]->(parent);
MERGE (node:`_code`:`_code_crime-type` { value:'common-assault-with-no-injury' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'common-assault-with-no-injury' }) MERGE (node)-[:usedBy { label:"Common assault with no injury"}]->(parent);
MERGE (node:`_code`:`_code_crime-type` { value:'all-violence' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'all-violence' }) MERGE (node)-[:usedBy { label:"All violence"}]->(parent);
MERGE (node:`_code`:`_code_crime-type` { value:'all-theft' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'all-theft' }) MERGE (node)-[:usedBy { label:"All theft"}]->(parent);
MERGE (node:`_code`:`_code_crime-type` { value:'attempted-snatch-and-stealth-theft' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'attempted-snatch-and-stealth-theft' }) MERGE (node)-[:usedBy { label:"Attempted snatch and stealth theft"}]->(parent);
MERGE (node:`_code`:`_code_crime-type` { value:'theft-from-the-person' });
MATCH (parent:`_code_list`:`_code_list_crime-type`),(node:`_code`:`_code_crime-type` { value:'theft-from-the-person' }) MERGE (node)-[:usedBy { label:"Theft from the person"}]->(parent);
