

g.V().has('_code_list', 'listID', 'build-status').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "build-status").
    property(single, 'label', "Build Status").
    property(single, 'edition', "one-off")
  ).next()


g.V().has('_code','listID', 'build-status').has('value', "all").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'build-status').property(single, 'value', "all")
  ).next()
g.V().has('_code', 'listID', 'build-status').has('value', "all").as('code').
  V().has('_code_list', 'listID', 'build-status').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "All").next()


g.V().has('_code','listID', 'build-status').has('value', "existing").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'build-status').property(single, 'value', "existing")
  ).next()
g.V().has('_code', 'listID', 'build-status').has('value', "existing").as('code').
  V().has('_code_list', 'listID', 'build-status').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Existing").next()


g.V().has('_code','listID', 'build-status').has('value', "newly-built").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'build-status').property(single, 'value', "newly-built")
  ).next()
g.V().has('_code', 'listID', 'build-status').has('value', "newly-built").as('code').
  V().has('_code_list', 'listID', 'build-status').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Newly built").next()

