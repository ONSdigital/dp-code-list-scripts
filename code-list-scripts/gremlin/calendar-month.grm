

g.V().has('_code_list', 'listID', 'calendar-month').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "calendar-month").
    property(single, 'label', "month").
    property(single, 'edition', "one-off")
  ).next()


g.V().has('_code','listID', 'calendar-month').has('value', "april").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'calendar-month').property(single, 'value', "april")
  ).next()
g.V().has('_code', 'listID', 'calendar-month').has('value', "april").as('code').
  V().has('_code_list', 'listID', 'calendar-month').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "April").next()


g.V().has('_code','listID', 'calendar-month').has('value', "august").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'calendar-month').property(single, 'value', "august")
  ).next()
g.V().has('_code', 'listID', 'calendar-month').has('value', "august").as('code').
  V().has('_code_list', 'listID', 'calendar-month').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "August").next()


g.V().has('_code','listID', 'calendar-month').has('value', "december").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'calendar-month').property(single, 'value', "december")
  ).next()
g.V().has('_code', 'listID', 'calendar-month').has('value', "december").as('code').
  V().has('_code_list', 'listID', 'calendar-month').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "December").next()


g.V().has('_code','listID', 'calendar-month').has('value', "february").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'calendar-month').property(single, 'value', "february")
  ).next()
g.V().has('_code', 'listID', 'calendar-month').has('value', "february").as('code').
  V().has('_code_list', 'listID', 'calendar-month').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "February").next()


g.V().has('_code','listID', 'calendar-month').has('value', "january").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'calendar-month').property(single, 'value', "january")
  ).next()
g.V().has('_code', 'listID', 'calendar-month').has('value', "january").as('code').
  V().has('_code_list', 'listID', 'calendar-month').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "January").next()


g.V().has('_code','listID', 'calendar-month').has('value', "july").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'calendar-month').property(single, 'value', "july")
  ).next()
g.V().has('_code', 'listID', 'calendar-month').has('value', "july").as('code').
  V().has('_code_list', 'listID', 'calendar-month').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "July").next()


g.V().has('_code','listID', 'calendar-month').has('value', "june").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'calendar-month').property(single, 'value', "june")
  ).next()
g.V().has('_code', 'listID', 'calendar-month').has('value', "june").as('code').
  V().has('_code_list', 'listID', 'calendar-month').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "June").next()


g.V().has('_code','listID', 'calendar-month').has('value', "march").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'calendar-month').property(single, 'value', "march")
  ).next()
g.V().has('_code', 'listID', 'calendar-month').has('value', "march").as('code').
  V().has('_code_list', 'listID', 'calendar-month').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "March").next()


g.V().has('_code','listID', 'calendar-month').has('value', "may").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'calendar-month').property(single, 'value', "may")
  ).next()
g.V().has('_code', 'listID', 'calendar-month').has('value', "may").as('code').
  V().has('_code_list', 'listID', 'calendar-month').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "May").next()


g.V().has('_code','listID', 'calendar-month').has('value', "november").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'calendar-month').property(single, 'value', "november")
  ).next()
g.V().has('_code', 'listID', 'calendar-month').has('value', "november").as('code').
  V().has('_code_list', 'listID', 'calendar-month').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "November").next()


g.V().has('_code','listID', 'calendar-month').has('value', "october").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'calendar-month').property(single, 'value', "october")
  ).next()
g.V().has('_code', 'listID', 'calendar-month').has('value', "october").as('code').
  V().has('_code_list', 'listID', 'calendar-month').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "October").next()


g.V().has('_code','listID', 'calendar-month').has('value', "september").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'calendar-month').property(single, 'value', "september")
  ).next()
g.V().has('_code', 'listID', 'calendar-month').has('value', "september").as('code').
  V().has('_code_list', 'listID', 'calendar-month').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "September").next()

