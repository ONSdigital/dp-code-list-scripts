g.V().hasId('_code_list_census_2021_legal_partnership_status_one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(id, '_code_list_census_2021_legal_partnership_status_one-off').
    property(single, 'listID', "census_2021_legal_partnership_status").
    property(single, 'label', "Legal partnership status").
    property(single, 'edition', "one-off")
  ).next()

g.V().hasId('_code_census_2021_legal_partnership_status_1').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_legal_partnership_status_1').property(single, 'listID','census_2021_legal_partnership_status').property(single, 'value', "1")
  ).next()
  g.V().hasId('_code_list_census_2021_legal_partnership_status_one-off').as('codeList').V().hasId('_code_census_2021_legal_partnership_status_1').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Never married and never registered a civil partnership").property('order', 1).next()

g.V().hasId('_code_census_2021_legal_partnership_status_2').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_legal_partnership_status_2').property(single, 'listID','census_2021_legal_partnership_status').property(single, 'value', "2")
  ).next()
  g.V().hasId('_code_list_census_2021_legal_partnership_status_one-off').as('codeList').V().hasId('_code_census_2021_legal_partnership_status_2').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Married: Opposite sex").property('order', 2).next()

g.V().hasId('_code_census_2021_legal_partnership_status_3').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_legal_partnership_status_3').property(single, 'listID','census_2021_legal_partnership_status').property(single, 'value', "3")
  ).next()
  g.V().hasId('_code_list_census_2021_legal_partnership_status_one-off').as('codeList').V().hasId('_code_census_2021_legal_partnership_status_3').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Married: Same sex").property('order', 3).next()

g.V().hasId('_code_census_2021_legal_partnership_status_4').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_legal_partnership_status_4').property(single, 'listID','census_2021_legal_partnership_status').property(single, 'value', "4")
  ).next()
  g.V().hasId('_code_list_census_2021_legal_partnership_status_one-off').as('codeList').V().hasId('_code_census_2021_legal_partnership_status_4').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"In a registered civil partnership: Opposite sex").property('order', 4).next()

g.V().hasId('_code_census_2021_legal_partnership_status_5').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_legal_partnership_status_5').property(single, 'listID','census_2021_legal_partnership_status').property(single, 'value', "5")
  ).next()
  g.V().hasId('_code_list_census_2021_legal_partnership_status_one-off').as('codeList').V().hasId('_code_census_2021_legal_partnership_status_5').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"In a registered civil partnership: Same sex").property('order', 5).next()

g.V().hasId('_code_census_2021_legal_partnership_status_6').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_legal_partnership_status_6').property(single, 'listID','census_2021_legal_partnership_status').property(single, 'value', "6")
  ).next()
  g.V().hasId('_code_list_census_2021_legal_partnership_status_one-off').as('codeList').V().hasId('_code_census_2021_legal_partnership_status_6').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Separated, but still married").property('order', 6).next()

g.V().hasId('_code_census_2021_legal_partnership_status_7').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_legal_partnership_status_7').property(single, 'listID','census_2021_legal_partnership_status').property(single, 'value', "7")
  ).next()
  g.V().hasId('_code_list_census_2021_legal_partnership_status_one-off').as('codeList').V().hasId('_code_census_2021_legal_partnership_status_7').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Separated, but still in a registered civil partnership").property('order', 7).next()

g.V().hasId('_code_census_2021_legal_partnership_status_8').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_legal_partnership_status_8').property(single, 'listID','census_2021_legal_partnership_status').property(single, 'value', "8")
  ).next()
  g.V().hasId('_code_list_census_2021_legal_partnership_status_one-off').as('codeList').V().hasId('_code_census_2021_legal_partnership_status_8').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Divorced").property('order', 8).next()

g.V().hasId('_code_census_2021_legal_partnership_status_9').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_legal_partnership_status_9').property(single, 'listID','census_2021_legal_partnership_status').property(single, 'value', "9")
  ).next()
  g.V().hasId('_code_list_census_2021_legal_partnership_status_one-off').as('codeList').V().hasId('_code_census_2021_legal_partnership_status_9').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Formerly in a civil partnership now legally dissolved").property('order', 9).next()

g.V().hasId('_code_census_2021_legal_partnership_status_10').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_legal_partnership_status_10').property(single, 'listID','census_2021_legal_partnership_status').property(single, 'value', "10")
  ).next()
  g.V().hasId('_code_list_census_2021_legal_partnership_status_one-off').as('codeList').V().hasId('_code_census_2021_legal_partnership_status_10').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Widowed").property('order', 10).next()

g.V().hasId('_code_census_2021_legal_partnership_status_11').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_legal_partnership_status_11').property(single, 'listID','census_2021_legal_partnership_status').property(single, 'value', "11")
  ).next()
  g.V().hasId('_code_list_census_2021_legal_partnership_status_one-off').as('codeList').V().hasId('_code_census_2021_legal_partnership_status_11').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Surviving partner from civil partnership").property('order', 11).next()

g.V().hasId('_code_census_2021_legal_partnership_status_-8').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_legal_partnership_status_-8').property(single, 'listID','census_2021_legal_partnership_status').property(single, 'value', "-8")
  ).next()
  g.V().hasId('_code_list_census_2021_legal_partnership_status_one-off').as('codeList').V().hasId('_code_census_2021_legal_partnership_status_-8').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Does not apply").property('order', 12).next()

