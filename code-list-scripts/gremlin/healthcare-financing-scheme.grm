

g.V().has('_code_list', 'listID', 'healthcare-financing-scheme').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "healthcare-financing-scheme").
    property(single, 'label', "financingscheme").
    property(single, 'edition', "one-off")
  ).next()


g.V().has('_code','listID', 'healthcare-financing-scheme').has('value', "HFTOT").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'healthcare-financing-scheme').property(single, 'value', "HFTOT")
  ).next()
g.V().has('_code', 'listID', 'healthcare-financing-scheme').has('value', "HFTOT").as('code').
  V().has('_code_list', 'listID', 'healthcare-financing-scheme').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "All financing schemes").next()


g.V().has('_code','listID', 'healthcare-financing-scheme').has('value', "HF11").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'healthcare-financing-scheme').property(single, 'value', "HF11")
  ).next()
g.V().has('_code', 'listID', 'healthcare-financing-scheme').has('value', "HF11").as('code').
  V().has('_code_list', 'listID', 'healthcare-financing-scheme').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Government schemes").next()


g.V().has('_code','listID', 'healthcare-financing-scheme').has('value', "HF21").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'healthcare-financing-scheme').property(single, 'value', "HF21")
  ).next()
g.V().has('_code', 'listID', 'healthcare-financing-scheme').has('value', "HF21").as('code').
  V().has('_code_list', 'listID', 'healthcare-financing-scheme').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Voluntary health insurance schemes").next()


g.V().has('_code','listID', 'healthcare-financing-scheme').has('value', "HF22").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'healthcare-financing-scheme').property(single, 'value', "HF22")
  ).next()
g.V().has('_code', 'listID', 'healthcare-financing-scheme').has('value', "HF22").as('code').
  V().has('_code_list', 'listID', 'healthcare-financing-scheme').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "NPISH financing schemes").next()


g.V().has('_code','listID', 'healthcare-financing-scheme').has('value', "HF23").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'healthcare-financing-scheme').property(single, 'value', "HF23")
  ).next()
g.V().has('_code', 'listID', 'healthcare-financing-scheme').has('value', "HF23").as('code').
  V().has('_code_list', 'listID', 'healthcare-financing-scheme').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Enterprise financing schemes").next()


g.V().has('_code','listID', 'healthcare-financing-scheme').has('value', "HF3").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'healthcare-financing-scheme').property(single, 'value', "HF3")
  ).next()
g.V().has('_code', 'listID', 'healthcare-financing-scheme').has('value', "HF3").as('code').
  V().has('_code_list', 'listID', 'healthcare-financing-scheme').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Out-of-pocket payments").next()

