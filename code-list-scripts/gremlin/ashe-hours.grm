g.V().has('_code_list', 'listID', 'ashe-hours').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "ashe-hours").
    property(single, 'label', "hours").
    property(single, 'edition', "one-off")
  ).next()





g.V().has('_code','listID', 'ashe-hours').has('value', "paid-hours-worked-total").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ashe-hours').property(single, 'value', "paid-hours-worked-total")
  ).next()
g.V().has('_code', 'listID', 'ashe-hours').has('value', "paid-hours-worked-total").as('code').
  V().has('_code_list', 'listID', 'ashe-hours').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Paid hours worked - Total").next()


g.V().has('_code','listID', 'ashe-hours').has('value', "paid-hours-worked-basic").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ashe-hours').property(single, 'value', "paid-hours-worked-basic")
  ).next()
g.V().has('_code', 'listID', 'ashe-hours').has('value', "paid-hours-worked-basic").as('code').
  V().has('_code_list', 'listID', 'ashe-hours').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Paid hours worked - Basic").next()


g.V().has('_code','listID', 'ashe-hours').has('value', "paid-hours-worked-overtime").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ashe-hours').property(single, 'value', "paid-hours-worked-overtime")
  ).next()
g.V().has('_code', 'listID', 'ashe-hours').has('value', "paid-hours-worked-overtime").as('code').
  V().has('_code_list', 'listID', 'ashe-hours').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Paid hours worked - Overtime").next()

