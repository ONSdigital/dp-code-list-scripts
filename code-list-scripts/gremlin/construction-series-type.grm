

g.V().has('_code_list', 'listID', 'construction-series-type').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "construction-series-type").
    property(single, 'label', "seriestype").
    property(single, 'edition', "one-off")
  ).next()


g.V().has('_code','listID', 'construction-series-type').has('value', "g11-4dp").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'construction-series-type').property(single, 'value', "g11-4dp")
  ).next()
g.V().has('_code', 'listID', 'construction-series-type').has('value', "g11-4dp").as('code').
  V().has('_code_list', 'listID', 'construction-series-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Period on period").next()


g.V().has('_code','listID', 'construction-series-type').has('value', "g121-4dp").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'construction-series-type').property(single, 'value', "g121-4dp")
  ).next()
g.V().has('_code', 'listID', 'construction-series-type').has('value', "g121-4dp").as('code').
  V().has('_code_list', 'listID', 'construction-series-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Month on month a year ago").next()


g.V().has('_code','listID', 'construction-series-type').has('value', "g33-4dp").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'construction-series-type').property(single, 'value', "g33-4dp")
  ).next()
g.V().has('_code', 'listID', 'construction-series-type').has('value', "g33-4dp").as('code').
  V().has('_code_list', 'listID', 'construction-series-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Three months on previous three months").next()


g.V().has('_code','listID', 'construction-series-type').has('value', "g123-4dp").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'construction-series-type').property(single, 'value', "g123-4dp")
  ).next()
g.V().has('_code', 'listID', 'construction-series-type').has('value', "g123-4dp").as('code').
  V().has('_code_list', 'listID', 'construction-series-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Three months on three months a year ago").next()


g.V().has('_code','listID', 'construction-series-type').has('value', "g41-4dp").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'construction-series-type').property(single, 'value', "g41-4dp")
  ).next()
g.V().has('_code', 'listID', 'construction-series-type').has('value', "g41-4dp").as('code').
  V().has('_code_list', 'listID', 'construction-series-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Quarter on quarter a year ago").next()


g.V().has('_code','listID', 'construction-series-type').has('value', "oc").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'construction-series-type').property(single, 'value', "oc")
  ).next()
g.V().has('_code', 'listID', 'construction-series-type').has('value', "oc").as('code').
  V().has('_code_list', 'listID', 'construction-series-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Output Constrained").next()


g.V().has('_code','listID', 'construction-series-type').has('value', "ic").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'construction-series-type').property(single, 'value', "ic")
  ).next()
g.V().has('_code', 'listID', 'construction-series-type').has('value', "ic").as('code').
  V().has('_code_list', 'listID', 'construction-series-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Index Constrained").next()

