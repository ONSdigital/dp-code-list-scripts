

g.V().has('_code_list', 'listID', 'place-of-death').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "place-of-death").
    property(single, 'label', "Place Of Death").
    property(single, 'edition', "one-off")
  ).next()


g.V().has('_code','listID', 'place-of-death').has('value', "care-home").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'place-of-death').property(single, 'value', "care-home")
  ).next()
g.V().has('_code', 'listID', 'place-of-death').has('value', "care-home").as('code').
  V().has('_code_list', 'listID', 'place-of-death').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Care home").next()


g.V().has('_code','listID', 'place-of-death').has('value', "elsewhere").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'place-of-death').property(single, 'value', "elsewhere")
  ).next()
g.V().has('_code', 'listID', 'place-of-death').has('value', "elsewhere").as('code').
  V().has('_code_list', 'listID', 'place-of-death').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Elsewhere").next()


g.V().has('_code','listID', 'place-of-death').has('value', "home").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'place-of-death').property(single, 'value', "home")
  ).next()
g.V().has('_code', 'listID', 'place-of-death').has('value', "home").as('code').
  V().has('_code_list', 'listID', 'place-of-death').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Home").next()


g.V().has('_code','listID', 'place-of-death').has('value', "hospice").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'place-of-death').property(single, 'value', "hospice")
  ).next()
g.V().has('_code', 'listID', 'place-of-death').has('value', "hospice").as('code').
  V().has('_code_list', 'listID', 'place-of-death').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hospice").next()


g.V().has('_code','listID', 'place-of-death').has('value', "hospital").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'place-of-death').property(single, 'value', "hospital")
  ).next()
g.V().has('_code', 'listID', 'place-of-death').has('value', "hospital").as('code').
  V().has('_code_list', 'listID', 'place-of-death').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hospital").next()


g.V().has('_code','listID', 'place-of-death').has('value', "other-communal-establishment").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'place-of-death').property(single, 'value', "other-communal-establishment")
  ).next()
g.V().has('_code', 'listID', 'place-of-death').has('value', "other-communal-establishment").as('code').
  V().has('_code_list', 'listID', 'place-of-death').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Other communal establishment").next()

