

g.V().has('_code_list', 'listID', 'productivity').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "productivity").
    property(single, 'edition', "one-off").
    property(single, 'label', "productivitytype")
  ).next()


g.V().has('_code','listID', 'productivity').has('value', "gva-per-hour-worked-indices").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'productivity').property(single, 'value', "gva-per-hour-worked-indices")
  ).next()
g.V().has('_code', 'listID', 'productivity').has('value', "gva-per-hour-worked-indices").as('code').
  V().has('_code_list', 'listID', 'productivity').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "GVA per hour worked indices").next()


g.V().has('_code','listID', 'productivity').has('value', "gva-per-hour-worked-pounds").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'productivity').property(single, 'value', "gva-per-hour-worked-pounds")
  ).next()
g.V().has('_code', 'listID', 'productivity').has('value', "gva-per-hour-worked-pounds").as('code').
  V().has('_code_list', 'listID', 'productivity').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "GVA per hour worked (£)").next()


g.V().has('_code','listID', 'productivity').has('value', "gva-per-filled-job-indices").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'productivity').property(single, 'value', "gva-per-filled-job-indices")
  ).next()
g.V().has('_code', 'listID', 'productivity').has('value', "gva-per-filled-job-indices").as('code').
  V().has('_code_list', 'listID', 'productivity').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "GVA per filled job indices").next()


g.V().has('_code','listID', 'productivity').has('value', "gva-per-filled-job-pounds").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'productivity').property(single, 'value', "gva-per-filled-job-pounds")
  ).next()
g.V().has('_code', 'listID', 'productivity').has('value', "gva-per-filled-job-pounds").as('code').
  V().has('_code_list', 'listID', 'productivity').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "GVA per filled job (£)").next()


g.V().has('_code','listID', 'productivity').has('value', "gva-excluding-rental-income-per-hour-worked-indices").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'productivity').property(single, 'value', "gva-excluding-rental-income-per-hour-worked-indices")
  ).next()
g.V().has('_code', 'listID', 'productivity').has('value', "gva-excluding-rental-income-per-hour-worked-indices").as('code').
  V().has('_code_list', 'listID', 'productivity').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "GVA (excluding rental income) per hour worked: indices").next()


g.V().has('_code','listID', 'productivity').has('value', "gva-excluding-rental-income-per-hour-worked-levels-pounds").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'productivity').property(single, 'value', "gva-excluding-rental-income-per-hour-worked-levels-pounds")
  ).next()
g.V().has('_code', 'listID', 'productivity').has('value', "gva-excluding-rental-income-per-hour-worked-levels-pounds").as('code').
  V().has('_code_list', 'listID', 'productivity').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "GVA (excluding rental income) per hour worked: levels (£)").next()

