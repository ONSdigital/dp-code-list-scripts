

g.V().has('_code_list', 'listID', 'ott-residence').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "ott-residence").
    property(single, 'label', "residence").
    property(single, 'edition', "one-off")
  ).next()


g.V().has('_code','listID', 'ott-residence').has('value', "overseas-residents").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ott-residence').property(single, 'value', "overseas-residents")
  ).next()
g.V().has('_code', 'listID', 'ott-residence').has('value', "overseas-residents").as('code').
  V().has('_code_list', 'listID', 'ott-residence').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Overseas Residents").next()


g.V().has('_code','listID', 'ott-residence').has('value', "uk-residents").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ott-residence').property(single, 'value', "uk-residents")
  ).next()
g.V().has('_code', 'listID', 'ott-residence').has('value', "uk-residents").as('code').
  V().has('_code_list', 'listID', 'ott-residence').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "UK Residents").next()

