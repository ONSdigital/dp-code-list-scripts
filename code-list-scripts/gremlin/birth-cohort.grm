

g.V().has('_code_list', 'listID', 'birth-cohort').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "birth-cohort").
    property(single, 'label', "birthcohort").
    property(single, 'edition', "one-off")
  ).next()


g.V().has('_code','listID', 'birth-cohort').has('value', "birth-males").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'birth-cohort').property(single, 'value', "birth-males")
  ).next()
g.V().has('_code', 'listID', 'birth-cohort').has('value', "birth-males").as('code').
  V().has('_code_list', 'listID', 'birth-cohort').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Males at birth").next()


g.V().has('_code','listID', 'birth-cohort').has('value', "birth-females").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'birth-cohort').property(single, 'value', "birth-females")
  ).next()
g.V().has('_code', 'listID', 'birth-cohort').has('value', "birth-females").as('code').
  V().has('_code_list', 'listID', 'birth-cohort').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Females at birth").next()


g.V().has('_code','listID', 'birth-cohort').has('value', "age-65-males").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'birth-cohort').property(single, 'value', "age-65-males")
  ).next()
g.V().has('_code', 'listID', 'birth-cohort').has('value', "age-65-males").as('code').
  V().has('_code_list', 'listID', 'birth-cohort').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Males at age 65").next()


g.V().has('_code','listID', 'birth-cohort').has('value', "age-65-females").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'birth-cohort').property(single, 'value', "age-65-females")
  ).next()
g.V().has('_code', 'listID', 'birth-cohort').has('value', "age-65-females").as('code').
  V().has('_code_list', 'listID', 'birth-cohort').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Females at age 65").next()

