g.V().hasId('_code_list_2011-census-approximated-social-grade_one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(id, '_code_list_2011-census-approximated-social-grade_one-off').
    property(single, 'listID', "2011-census-approximated-social-grade").
    property(single, 'label', "Approximated social grade").
    property(single, 'edition', "one-off")
  ).next()

g.V().hasId('_code_2011-census-approximated-social-grade_ab').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_2011-census-approximated-social-grade_ab').property(single, 'listID', '2011-census-approximated-social-grade').property(single, 'value', "ab")
  ).next()
  g.V().hasId('_code_list_2011-census-approximated-social-grade_one-off').as('codeList').V().hasId('_code_2011-census-approximated-social-grade_ab').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label', "AB").next()

g.V().hasId('_code_2011-census-approximated-social-grade_c1').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_2011-census-approximated-social-grade_c1').property(single, 'listID', '2011-census-approximated-social-grade').property(single, 'value', "c1")
  ).next()
  g.V().hasId('_code_list_2011-census-approximated-social-grade_one-off').as('codeList').V().hasId('_code_2011-census-approximated-social-grade_c1').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label', "C1").next()

g.V().hasId('_code_2011-census-approximated-social-grade_c2').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_2011-census-approximated-social-grade_c2').property(single, 'listID', '2011-census-approximated-social-grade').property(single, 'value', "c2")
  ).next()
  g.V().hasId('_code_list_2011-census-approximated-social-grade_one-off').as('codeList').V().hasId('_code_2011-census-approximated-social-grade_c2').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label', "C2").next()

g.V().hasId('_code_2011-census-approximated-social-grade_de').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_2011-census-approximated-social-grade_de').property(single, 'listID', '2011-census-approximated-social-grade').property(single, 'value', "de")
  ).next()
  g.V().hasId('_code_list_2011-census-approximated-social-grade_one-off').as('codeList').V().hasId('_code_2011-census-approximated-social-grade_de').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label', "DE").next()

g.V().hasId('_code_2011-census-approximated-social-grade_no-code-required-people-aged-under-16-people-resident-in-communal-establishments-and-students-or-schoolchildren-living-away-during-term-time').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_2011-census-approximated-social-grade_no-code-required-people-aged-under-16-people-resident-in-communal-establishments-and-students-or-schoolchildren-living-away-during-term-time').property(single, 'listID', '2011-census-approximated-social-grade').property(single, 'value', "no-code-required-people-aged-under-16-people-resident-in-communal-establishments-and-students-or-schoolchildren-living-away-during-term-time")
  ).next()
  g.V().hasId('_code_list_2011-census-approximated-social-grade_one-off').as('codeList').V().hasId('_code_2011-census-approximated-social-grade_no-code-required-people-aged-under-16-people-resident-in-communal-establishments-and-students-or-schoolchildren-living-away-during-term-time').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label', "No code required (People aged under 16, people resident in communal establishments, and students or schoolchildren living away during term-time)").next()
