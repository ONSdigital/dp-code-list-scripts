

g.V().has('_code_list', 'listID', 'tax-benefit-type').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "tax-benefit-type").
    property(single, 'label', "Type Of Tax Or Benefit").
    property(single, 'edition', "one-off")
  ).next()


g.V().has('_code','listID', 'tax-benefit-type').has('value', "original-income").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'tax-benefit-type').property(single, 'value', "original-income")
  ).next()
g.V().has('_code', 'listID', 'tax-benefit-type').has('value', "original-income").as('code').
  V().has('_code_list', 'listID', 'tax-benefit-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Original income").next()


g.V().has('_code','listID', 'tax-benefit-type').has('value', "cash-benefits").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'tax-benefit-type').property(single, 'value', "cash-benefits")
  ).next()
g.V().has('_code', 'listID', 'tax-benefit-type').has('value', "cash-benefits").as('code').
  V().has('_code_list', 'listID', 'tax-benefit-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Cash benefits").next()


g.V().has('_code','listID', 'tax-benefit-type').has('value', "gross-income").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'tax-benefit-type').property(single, 'value', "gross-income")
  ).next()
g.V().has('_code', 'listID', 'tax-benefit-type').has('value', "gross-income").as('code').
  V().has('_code_list', 'listID', 'tax-benefit-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Gross income").next()


g.V().has('_code','listID', 'tax-benefit-type').has('value', "direct-taxes").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'tax-benefit-type').property(single, 'value', "direct-taxes")
  ).next()
g.V().has('_code', 'listID', 'tax-benefit-type').has('value', "direct-taxes").as('code').
  V().has('_code_list', 'listID', 'tax-benefit-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Direct taxes").next()


g.V().has('_code','listID', 'tax-benefit-type').has('value', "disposable-income").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'tax-benefit-type').property(single, 'value', "disposable-income")
  ).next()
g.V().has('_code', 'listID', 'tax-benefit-type').has('value', "disposable-income").as('code').
  V().has('_code_list', 'listID', 'tax-benefit-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Disposable income").next()


g.V().has('_code','listID', 'tax-benefit-type').has('value', "indirect-taxes").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'tax-benefit-type').property(single, 'value', "indirect-taxes")
  ).next()
g.V().has('_code', 'listID', 'tax-benefit-type').has('value', "indirect-taxes").as('code').
  V().has('_code_list', 'listID', 'tax-benefit-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Indirect taxes").next()


g.V().has('_code','listID', 'tax-benefit-type').has('value', "post-tax-income").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'tax-benefit-type').property(single, 'value', "post-tax-income")
  ).next()
g.V().has('_code', 'listID', 'tax-benefit-type').has('value', "post-tax-income").as('code').
  V().has('_code_list', 'listID', 'tax-benefit-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Post-tax income").next()


g.V().has('_code','listID', 'tax-benefit-type').has('value', "benefits-in-kind").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'tax-benefit-type').property(single, 'value', "benefits-in-kind")
  ).next()
g.V().has('_code', 'listID', 'tax-benefit-type').has('value', "benefits-in-kind").as('code').
  V().has('_code_list', 'listID', 'tax-benefit-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Benefits-in-kind").next()


g.V().has('_code','listID', 'tax-benefit-type').has('value', "final-income").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'tax-benefit-type').property(single, 'value', "final-income")
  ).next()
g.V().has('_code', 'listID', 'tax-benefit-type').has('value', "final-income").as('code').
  V().has('_code_list', 'listID', 'tax-benefit-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Final income").next()

