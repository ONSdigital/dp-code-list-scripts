

g.V().hasId('_code_list_unit-of-measure_one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(id, '_code_list_unit-of-measure_one-off').
    property(single, 'listID', "unit-of-measure").
    property(single, 'edition', "one-off").
    property(single, 'label', "Unit Of Measure")
  ).next()


g.V().hasId('_code_unit-of-measure_levels').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_unit-of-measure_levels').property(single, 'listID', 'unit-of-measure').property(single, 'value', "levels")
  ).next()
  g.V().hasId('_code_list_unit-of-measure_one-off').as('codeList').V().hasId('_code_unit-of-measure_levels').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Levels").next()


g.V().hasId('_code_unit-of-measure_rates').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_unit-of-measure_rates').property(single, 'listID', 'unit-of-measure').property(single, 'value', "rates")
  ).next()
  g.V().hasId('_code_list_unit-of-measure_one-off').as('codeList').V().hasId('_code_unit-of-measure_rates').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Rates").next()


g.V().hasId('_code_unit-of-measure_number').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_unit-of-measure_number').property(single, 'listID', 'unit-of-measure').property(single, 'value', "number")
  ).next()
  g.V().hasId('_code_list_unit-of-measure_one-off').as('codeList').V().hasId('_code_unit-of-measure_number').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Number").next()


g.V().hasId('_code_unit-of-measure_percentage').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_unit-of-measure_percentage').property(single, 'listID', 'unit-of-measure').property(single, 'value', "percentage")
  ).next()
  g.V().hasId('_code_list_unit-of-measure_one-off').as('codeList').V().hasId('_code_unit-of-measure_percentage').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Percentage").next()


