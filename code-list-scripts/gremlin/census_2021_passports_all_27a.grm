g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(id, '_code_list_census_2021_passports_all_27a_one-off').
    property(single, 'listID', "census_2021_passports_all_27a").
    property(single, 'label', "Passports held").
    property(single, 'edition', "one-off")
  ).next()

g.V().hasId('_code_census_2021_passports_all_27a_1').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_1').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "1")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_1').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Europe: United Kingdom").property('order', 1).next()

g.V().hasId('_code_census_2021_passports_all_27a_2').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_2').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "2")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_2').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Europe: Ireland").property('order', 2).next()

g.V().hasId('_code_census_2021_passports_all_27a_3').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_3').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "3")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_3').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Europe: Other Europe: EU Member countries: France").property('order', 3).next()

g.V().hasId('_code_census_2021_passports_all_27a_4').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_4').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "4")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_4').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Europe: Other Europe: EU Member countries: Germany").property('order', 4).next()

g.V().hasId('_code_census_2021_passports_all_27a_5').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_5').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "5")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_5').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Europe: Other Europe: EU Member countries: Italy").property('order', 5).next()

g.V().hasId('_code_census_2021_passports_all_27a_6').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_6').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "6")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_6').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Europe: Other Europe: EU Member countries: Portugal").property('order', 6).next()

g.V().hasId('_code_census_2021_passports_all_27a_7').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_7').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "7")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_7').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Europe: Other Europe: EU Member countries: Spain").property('order', 7).next()

g.V().hasId('_code_census_2021_passports_all_27a_8').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_8').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "8")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_8').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Europe: Other Europe: EU Member countries: Lithuania").property('order', 8).next()

g.V().hasId('_code_census_2021_passports_all_27a_9').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_9').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "9")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_9').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Europe: Other Europe: EU Member countries: Poland").property('order', 9).next()

g.V().hasId('_code_census_2021_passports_all_27a_10').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_10').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "10")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_10').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Europe: Other Europe: EU Member countries: Romania").property('order', 10).next()

g.V().hasId('_code_census_2021_passports_all_27a_11').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_11').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "11")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_11').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Europe: Other Europe: EU Member countries: Other EU countries").property('order', 11).next()

g.V().hasId('_code_census_2021_passports_all_27a_12').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_12').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "12")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_12').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Europe: Other Europe: Rest of Europe: Turkey").property('order', 12).next()

g.V().hasId('_code_census_2021_passports_all_27a_13').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_13').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "13")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_13').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Europe: Other Europe: Rest of Europe: Other Europe").property('order', 13).next()

g.V().hasId('_code_census_2021_passports_all_27a_14').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_14').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "14")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_14').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Africa: North Africa").property('order', 14).next()

g.V().hasId('_code_census_2021_passports_all_27a_15').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_15').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "15")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_15').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Africa: Central and Western Africa").property('order', 15).next()

g.V().hasId('_code_census_2021_passports_all_27a_16').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_16').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "16")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_16').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Africa: South and Eastern Africa").property('order', 16).next()

g.V().hasId('_code_census_2021_passports_all_27a_17').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_17').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "17")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_17').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Middle East and Asia: Middle East").property('order', 17).next()

g.V().hasId('_code_census_2021_passports_all_27a_18').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_18').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "18")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_18').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Middle East and Asia: Eastern Asia").property('order', 18).next()

g.V().hasId('_code_census_2021_passports_all_27a_19').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_19').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "19")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_19').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Middle East and Asia: Southern Asia").property('order', 19).next()

g.V().hasId('_code_census_2021_passports_all_27a_20').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_20').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "20")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_20').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Middle East and Asia: South-East Asia").property('order', 20).next()

g.V().hasId('_code_census_2021_passports_all_27a_21').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_21').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "21")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_21').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Middle East and Asia: Central Asia").property('order', 21).next()

g.V().hasId('_code_census_2021_passports_all_27a_22').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_22').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "22")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_22').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"The Americas and the Caribbean: North America and the Caribbean").property('order', 22).next()

g.V().hasId('_code_census_2021_passports_all_27a_23').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_23').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "23")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_23').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"The Americas and the Caribbean: Central and South America").property('order', 23).next()

g.V().hasId('_code_census_2021_passports_all_27a_24').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_24').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "24")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_24').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Antarctica and Oceania, including Australasia").property('order', 24).next()

g.V().hasId('_code_census_2021_passports_all_27a_25').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_25').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "25")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_25').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"British Overseas Territories").property('order', 25).next()

g.V().hasId('_code_census_2021_passports_all_27a_26').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_26').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "26")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_26').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"No passport held").property('order', 26).next()

g.V().hasId('_code_census_2021_passports_all_27a_-8').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_census_2021_passports_all_27a_-8').property(single, 'listID','census_2021_passports_all_27a').property(single, 'value', "-8")
  ).next()
  g.V().hasId('_code_list_census_2021_passports_all_27a_one-off').as('codeList').V().hasId('_code_census_2021_passports_all_27a_-8').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
      addE('usedBy').to('codeList')).property('label',"Does not apply").property('order', 27).next()

