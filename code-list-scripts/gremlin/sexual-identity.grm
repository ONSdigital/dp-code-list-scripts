

g.V().has('_code_list', 'listID', 'sexual-identity').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "sexual-identity").
    property(single, 'label', "sexualidentity").
    property(single, 'edition', "one-off")
  ).next()


g.V().has('_code','listID', 'sexual-identity').has('value', "heterosexual-or-straight").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'sexual-identity').property(single, 'value', "heterosexual-or-straight")
  ).next()
g.V().has('_code', 'listID', 'sexual-identity').has('value', "heterosexual-or-straight").as('code').
  V().has('_code_list', 'listID', 'sexual-identity').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Heterosexual or straight").next()


g.V().has('_code','listID', 'sexual-identity').has('value', "gay-or-lesbian").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'sexual-identity').property(single, 'value', "gay-or-lesbian")
  ).next()
g.V().has('_code', 'listID', 'sexual-identity').has('value', "gay-or-lesbian").as('code').
  V().has('_code_list', 'listID', 'sexual-identity').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Gay or lesbian").next()


g.V().has('_code','listID', 'sexual-identity').has('value', "bisexual").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'sexual-identity').property(single, 'value', "bisexual")
  ).next()
g.V().has('_code', 'listID', 'sexual-identity').has('value', "bisexual").as('code').
  V().has('_code_list', 'listID', 'sexual-identity').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bisexual").next()


g.V().has('_code','listID', 'sexual-identity').has('value', "other").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'sexual-identity').property(single, 'value', "other")
  ).next()
g.V().has('_code', 'listID', 'sexual-identity').has('value', "other").as('code').
  V().has('_code_list', 'listID', 'sexual-identity').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Other").next()


g.V().has('_code','listID', 'sexual-identity').has('value', "dont-know-or-refuse").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'sexual-identity').property(single, 'value', "dont-know-or-refuse")
  ).next()
g.V().has('_code', 'listID', 'sexual-identity').has('value', "dont-know-or-refuse").as('code').
  V().has('_code_list', 'listID', 'sexual-identity').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Don't know or refuse").next()

