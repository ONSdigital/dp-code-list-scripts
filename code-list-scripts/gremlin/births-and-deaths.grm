

g.V().has('_code_list', 'listID', 'births-and-deaths').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "births-and-deaths").
    property(single, 'label', "birthsanddeaths").
    property(single, 'edition', "one-off")
  ).next()


g.V().has('_code','listID', 'births-and-deaths').has('value', "total-live-births").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'births-and-deaths').property(single, 'value', "total-live-births")
  ).next()
g.V().has('_code', 'listID', 'births-and-deaths').has('value', "total-live-births").as('code').
  V().has('_code_list', 'listID', 'births-and-deaths').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Total live births").next()


g.V().has('_code','listID', 'births-and-deaths').has('value', "stillbirths").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'births-and-deaths').property(single, 'value', "stillbirths")
  ).next()
g.V().has('_code', 'listID', 'births-and-deaths').has('value', "stillbirths").as('code').
  V().has('_code_list', 'listID', 'births-and-deaths').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Stillbirths").next()


g.V().has('_code','listID', 'births-and-deaths').has('value', "perinatal-deaths").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'births-and-deaths').property(single, 'value', "perinatal-deaths")
  ).next()
g.V().has('_code', 'listID', 'births-and-deaths').has('value', "perinatal-deaths").as('code').
  V().has('_code_list', 'listID', 'births-and-deaths').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Perinatal deaths").next()


g.V().has('_code','listID', 'births-and-deaths').has('value', "neonatal-deaths").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'births-and-deaths').property(single, 'value', "neonatal-deaths")
  ).next()
g.V().has('_code', 'listID', 'births-and-deaths').has('value', "neonatal-deaths").as('code').
  V().has('_code_list', 'listID', 'births-and-deaths').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Neonatal deaths").next()


g.V().has('_code','listID', 'births-and-deaths').has('value', "post-neonatal-deaths").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'births-and-deaths').property(single, 'value', "post-neonatal-deaths")
  ).next()
g.V().has('_code', 'listID', 'births-and-deaths').has('value', "post-neonatal-deaths").as('code').
  V().has('_code_list', 'listID', 'births-and-deaths').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Post-neonatal deaths").next()


g.V().has('_code','listID', 'births-and-deaths').has('value', "infant-deaths").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'births-and-deaths').property(single, 'value', "infant-deaths")
  ).next()
g.V().has('_code', 'listID', 'births-and-deaths').has('value', "infant-deaths").as('code').
  V().has('_code_list', 'listID', 'births-and-deaths').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Infant deaths").next()

