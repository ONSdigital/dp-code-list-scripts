

g.V().has('_code_list', 'listID', 'cause-of-death').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "cause-of-death").
    property(single, 'label', "Cause Of Death").
    property(single, 'edition', "one-off")
  ).next()


g.V().has('_code','listID', 'cause-of-death').has('value', "all-causes").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'cause-of-death').property(single, 'value', "all-causes")
  ).next()
g.V().has('_code', 'listID', 'cause-of-death').has('value', "all-causes").as('code').
  V().has('_code_list', 'listID', 'cause-of-death').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "All causes").next()


g.V().has('_code','listID', 'cause-of-death').has('value', "covid-19").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'cause-of-death').property(single, 'value', "covid-19")
  ).next()
g.V().has('_code', 'listID', 'cause-of-death').has('value', "covid-19").as('code').
  V().has('_code_list', 'listID', 'cause-of-death').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "COVID 19").next()

