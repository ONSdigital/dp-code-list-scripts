

g.V().has('_code_list', 'listID', 'income-type').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "income-type").
    property(single, 'label', "Income").
    property(single, 'edition', "one-off")
  ).next()


g.V().has('_code','listID', 'income-type').has('value', "original").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'income-type').property(single, 'value', "original")
  ).next()
g.V().has('_code', 'listID', 'income-type').has('value', "original").as('code').
  V().has('_code_list', 'listID', 'income-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Original").next()


g.V().has('_code','listID', 'income-type').has('value', "gross").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'income-type').property(single, 'value', "gross")
  ).next()
g.V().has('_code', 'listID', 'income-type').has('value', "gross").as('code').
  V().has('_code_list', 'listID', 'income-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Gross").next()


g.V().has('_code','listID', 'income-type').has('value', "disposable").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'income-type').property(single, 'value', "disposable")
  ).next()
g.V().has('_code', 'listID', 'income-type').has('value', "disposable").as('code').
  V().has('_code_list', 'listID', 'income-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Disposable").next()


g.V().has('_code','listID', 'income-type').has('value', "post-tax").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'income-type').property(single, 'value', "post-tax")
  ).next()
g.V().has('_code', 'listID', 'income-type').has('value', "post-tax").as('code').
  V().has('_code_list', 'listID', 'income-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Post-tax").next()


g.V().has('_code','listID', 'income-type').has('value', "final").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'income-type').property(single, 'value', "final")
  ).next()
g.V().has('_code', 'listID', 'income-type').has('value', "final").as('code').
  V().has('_code_list', 'listID', 'income-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Final").next()

