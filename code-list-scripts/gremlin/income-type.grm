

g.V().hasLabel('_code_list').has('listID', 'income-type').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', 'income-type').
    property(single, 'label', 'income').
    property(single, 'edition', 'one-off')
  ).next()


g.V().hasLabel('_code').has('listID', 'income-type').has('value', 'original').
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'income-type').property(single, 'value', 'original')
  ).next()
g.V().hasLabel('_code').has('listID', 'income-type').has('value', 'original').outE().fold().coalesce(unfold(),
  g.V().hasLabel('_code').has('listID', 'income-type').has('value', 'original').
    addE('usedBy').to(
      g.V().hasLabel('_code_list').has('listID', 'income-type').has('edition', 'one-off')
    ).property(single, 'label', 'Original')).next()


g.V().hasLabel('_code').has('listID', 'income-type').has('value', 'gross').
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'income-type').property(single, 'value', 'gross')
  ).next()
g.V().hasLabel('_code').has('listID', 'income-type').has('value', 'gross').outE().fold().coalesce(unfold(),
  g.V().hasLabel('_code').has('listID', 'income-type').has('value', 'gross').
    addE('usedBy').to(
      g.V().hasLabel('_code_list').has('listID', 'income-type').has('edition', 'one-off')
    ).property(single, 'label', 'Gross')).next()


g.V().hasLabel('_code').has('listID', 'income-type').has('value', 'disposable').
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'income-type').property(single, 'value', 'disposable')
  ).next()
g.V().hasLabel('_code').has('listID', 'income-type').has('value', 'disposable').outE().fold().coalesce(unfold(),
  g.V().hasLabel('_code').has('listID', 'income-type').has('value', 'disposable').
    addE('usedBy').to(
      g.V().hasLabel('_code_list').has('listID', 'income-type').has('edition', 'one-off')
    ).property(single, 'label', 'Disposable')).next()


g.V().hasLabel('_code').has('listID', 'income-type').has('value', 'post-tax').
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'income-type').property(single, 'value', 'post-tax')
  ).next()
g.V().hasLabel('_code').has('listID', 'income-type').has('value', 'post-tax').outE().fold().coalesce(unfold(),
  g.V().hasLabel('_code').has('listID', 'income-type').has('value', 'post-tax').
    addE('usedBy').to(
      g.V().hasLabel('_code_list').has('listID', 'income-type').has('edition', 'one-off')
    ).property(single, 'label', 'Post-tax')).next()


g.V().hasLabel('_code').has('listID', 'income-type').has('value', 'final').
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'income-type').property(single, 'value', 'final')
  ).next()
g.V().hasLabel('_code').has('listID', 'income-type').has('value', 'final').outE().fold().coalesce(unfold(),
  g.V().hasLabel('_code').has('listID', 'income-type').has('value', 'final').
    addE('usedBy').to(
      g.V().hasLabel('_code_list').has('listID', 'income-type').has('edition', 'one-off')
    ).property(single, 'label', 'Final')).next()

