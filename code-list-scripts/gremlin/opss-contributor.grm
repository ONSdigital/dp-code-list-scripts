g.V().has('_code_list', 'listID', 'opss-contributor').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "opss-contributor").
    property(single, 'label', "contributor").
    property(single, 'edition', "one-off")
  ).next()





g.V().has('_code','listID', 'opss-contributor').has('value', "employer").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'opss-contributor').property(single, 'value', "employer")
  ).next()
g.V().has('_code', 'listID', 'opss-contributor').has('value', "employer").as('code').
  V().has('_code_list', 'listID', 'opss-contributor').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Employer").next()


g.V().has('_code','listID', 'opss-contributor').has('value', "member").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'opss-contributor').property(single, 'value', "member")
  ).next()
g.V().has('_code', 'listID', 'opss-contributor').has('value', "member").as('code').
  V().has('_code_list', 'listID', 'opss-contributor').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Member").next()


g.V().has('_code','listID', 'opss-contributor').has('value', "all-contributors").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'opss-contributor').property(single, 'value', "all-contributors")
  ).next()
g.V().has('_code', 'listID', 'opss-contributor').has('value', "all-contributors").as('code').
  V().has('_code_list', 'listID', 'opss-contributor').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "All contributors").next()

