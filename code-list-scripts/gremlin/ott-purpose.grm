

g.V().has('_code_list', 'listID', 'ott-purpose').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "ott-purpose").
    property(single, 'label', "purpose").
    property(single, 'edition', "one-off")
  ).next()


g.V().has('_code','listID', 'ott-purpose').has('value', "holiday").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ott-purpose').property(single, 'value', "holiday")
  ).next()
g.V().has('_code', 'listID', 'ott-purpose').has('value', "holiday").as('code').
  V().has('_code_list', 'listID', 'ott-purpose').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Holiday").next()


g.V().has('_code','listID', 'ott-purpose').has('value', "misc").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ott-purpose').property(single, 'value', "misc")
  ).next()
g.V().has('_code', 'listID', 'ott-purpose').has('value', "misc").as('code').
  V().has('_code_list', 'listID', 'ott-purpose').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Misc").next()


g.V().has('_code','listID', 'ott-purpose').has('value', "visit-friends-or-relatives").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ott-purpose').property(single, 'value', "visit-friends-or-relatives")
  ).next()
g.V().has('_code', 'listID', 'ott-purpose').has('value', "visit-friends-or-relatives").as('code').
  V().has('_code_list', 'listID', 'ott-purpose').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Visit Friends or Relatives").next()


g.V().has('_code','listID', 'ott-purpose').has('value', "business").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ott-purpose').property(single, 'value', "business")
  ).next()
g.V().has('_code', 'listID', 'ott-purpose').has('value', "business").as('code').
  V().has('_code_list', 'listID', 'ott-purpose').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Business").next()


g.V().has('_code','listID', 'ott-purpose').has('value', "business-other").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ott-purpose').property(single, 'value', "business-other")
  ).next()
g.V().has('_code', 'listID', 'ott-purpose').has('value', "business-other").as('code').
  V().has('_code_list', 'listID', 'ott-purpose').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Business - Other").next()


g.V().has('_code','listID', 'ott-purpose').has('value', "study").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ott-purpose').property(single, 'value', "study")
  ).next()
g.V().has('_code', 'listID', 'ott-purpose').has('value', "study").as('code').
  V().has('_code_list', 'listID', 'ott-purpose').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Study").next()


g.V().has('_code','listID', 'ott-purpose').has('value', "misc-other-miscellaneous").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ott-purpose').property(single, 'value', "misc-other-miscellaneous")
  ).next()
g.V().has('_code', 'listID', 'ott-purpose').has('value', "misc-other-miscellaneous").as('code').
  V().has('_code_list', 'listID', 'ott-purpose').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Misc - Other Miscellaneous").next()


g.V().has('_code','listID', 'ott-purpose').has('value', "misc-au-pair").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ott-purpose').property(single, 'value', "misc-au-pair")
  ).next()
g.V().has('_code', 'listID', 'ott-purpose').has('value', "misc-au-pair").as('code').
  V().has('_code_list', 'listID', 'ott-purpose').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Misc - Au Pair").next()


g.V().has('_code','listID', 'ott-purpose').has('value', "misc-getting-married").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ott-purpose').property(single, 'value', "misc-getting-married")
  ).next()
g.V().has('_code', 'listID', 'ott-purpose').has('value', "misc-getting-married").as('code').
  V().has('_code_list', 'listID', 'ott-purpose').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Misc - Getting Married").next()


g.V().has('_code','listID', 'ott-purpose').has('value', "misc-overnight-transit").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ott-purpose').property(single, 'value', "misc-overnight-transit")
  ).next()
g.V().has('_code', 'listID', 'ott-purpose').has('value', "misc-overnight-transit").as('code').
  V().has('_code_list', 'listID', 'ott-purpose').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Misc - Overnight Transit").next()


g.V().has('_code','listID', 'ott-purpose').has('value', "misc-join-accompany").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ott-purpose').property(single, 'value', "misc-join-accompany")
  ).next()
g.V().has('_code', 'listID', 'ott-purpose').has('value', "misc-join-accompany").as('code').
  V().has('_code_list', 'listID', 'ott-purpose').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Misc - Join/Accompany").next()


g.V().has('_code','listID', 'ott-purpose').has('value', "misc-looking-for-work").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ott-purpose').property(single, 'value', "misc-looking-for-work")
  ).next()
g.V().has('_code', 'listID', 'ott-purpose').has('value', "misc-looking-for-work").as('code').
  V().has('_code_list', 'listID', 'ott-purpose').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Misc - Looking For Work").next()


g.V().has('_code','listID', 'ott-purpose').has('value', "misc-medical").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ott-purpose').property(single, 'value', "misc-medical")
  ).next()
g.V().has('_code', 'listID', 'ott-purpose').has('value', "misc-medical").as('code').
  V().has('_code_list', 'listID', 'ott-purpose').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Misc - Medical").next()


g.V().has('_code','listID', 'ott-purpose').has('value', "holiday-cruise").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ott-purpose').property(single, 'value', "holiday-cruise")
  ).next()
g.V().has('_code', 'listID', 'ott-purpose').has('value', "holiday-cruise").as('code').
  V().has('_code_list', 'listID', 'ott-purpose').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Holiday - Cruise").next()


g.V().has('_code','listID', 'ott-purpose').has('value', "business-trade-fair-exhibition").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ott-purpose').property(single, 'value', "business-trade-fair-exhibition")
  ).next()
g.V().has('_code', 'listID', 'ott-purpose').has('value', "business-trade-fair-exhibition").as('code').
  V().has('_code_list', 'listID', 'ott-purpose').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Business - Trade Fair / Exhibition").next()


g.V().has('_code','listID', 'ott-purpose').has('value', "business-conference-large-meeting").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ott-purpose').property(single, 'value', "business-conference-large-meeting")
  ).next()
g.V().has('_code', 'listID', 'ott-purpose').has('value', "business-conference-large-meeting").as('code').
  V().has('_code_list', 'listID', 'ott-purpose').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Business - Conference / Large Meeting").next()


g.V().has('_code','listID', 'ott-purpose').has('value', "transit-nil-nights").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ott-purpose').property(single, 'value', "transit-nil-nights")
  ).next()
g.V().has('_code', 'listID', 'ott-purpose').has('value', "transit-nil-nights").as('code').
  V().has('_code_list', 'listID', 'ott-purpose').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Transit - Nil Nights").next()

