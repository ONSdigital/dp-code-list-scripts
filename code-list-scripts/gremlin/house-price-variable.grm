

g.V().has('_code_list', 'listID', 'house-price-variable').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "house-price-variable").
    property(single, 'label', "housepricevariable").
    property(single, 'edition', "one-off")
  ).next()


g.V().has('_code','listID', 'house-price-variable').has('value', "mean").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'house-price-variable').property(single, 'value', "mean")
  ).next()
g.V().has('_code', 'listID', 'house-price-variable').has('value', "mean").as('code').
  V().has('_code_list', 'listID', 'house-price-variable').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Mean price").next()


g.V().has('_code','listID', 'house-price-variable').has('value', "median").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'house-price-variable').property(single, 'value', "median")
  ).next()
g.V().has('_code', 'listID', 'house-price-variable').has('value', "median").as('code').
  V().has('_code_list', 'listID', 'house-price-variable').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Median price").next()


g.V().has('_code','listID', 'house-price-variable').has('value', "lower-quartile").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'house-price-variable').property(single, 'value', "lower-quartile")
  ).next()
g.V().has('_code', 'listID', 'house-price-variable').has('value', "lower-quartile").as('code').
  V().has('_code_list', 'listID', 'house-price-variable').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Lower quartile price").next()


g.V().has('_code','listID', 'house-price-variable').has('value', "tenth-percentile").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'house-price-variable').property(single, 'value', "tenth-percentile")
  ).next()
g.V().has('_code', 'listID', 'house-price-variable').has('value', "tenth-percentile").as('code').
  V().has('_code_list', 'listID', 'house-price-variable').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Tenth percentile price").next()


g.V().has('_code','listID', 'house-price-variable').has('value', "sales").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'house-price-variable').property(single, 'value', "sales")
  ).next()
g.V().has('_code', 'listID', 'house-price-variable').has('value', "sales").as('code').
  V().has('_code_list', 'listID', 'house-price-variable').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Count of sales").next()

