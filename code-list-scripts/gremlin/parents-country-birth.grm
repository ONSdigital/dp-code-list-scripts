

g.V().has('_code_list', 'listID', 'parents-country-birth').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "parents-country-birth").
    property(single, 'label', "parentscountryofbirth").
    property(single, 'edition', "one-off")
  ).next()


g.V().has('_code','listID', 'parents-country-birth').has('value', "total-number-of-live-births").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'parents-country-birth').property(single, 'value', "total-number-of-live-births")
  ).next()
g.V().has('_code', 'listID', 'parents-country-birth').has('value', "total-number-of-live-births").as('code').
  V().has('_code_list', 'listID', 'parents-country-birth').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Total number of live births").next()


g.V().has('_code','listID', 'parents-country-birth').has('value', "live-births-to-uk-born-mothers").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'parents-country-birth').property(single, 'value', "live-births-to-uk-born-mothers")
  ).next()
g.V().has('_code', 'listID', 'parents-country-birth').has('value', "live-births-to-uk-born-mothers").as('code').
  V().has('_code_list', 'listID', 'parents-country-birth').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Live births to UK-born mothers").next()


g.V().has('_code','listID', 'parents-country-birth').has('value', "live-births-to-non-uk-born-mothers").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'parents-country-birth').property(single, 'value', "live-births-to-non-uk-born-mothers")
  ).next()
g.V().has('_code', 'listID', 'parents-country-birth').has('value', "live-births-to-non-uk-born-mothers").as('code').
  V().has('_code_list', 'listID', 'parents-country-birth').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Live births to non-UK-born mothers").next()


g.V().has('_code','listID', 'parents-country-birth').has('value', "mothers-country-of-birth-eu").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'parents-country-birth').property(single, 'value', "mothers-country-of-birth-eu")
  ).next()
g.V().has('_code', 'listID', 'parents-country-birth').has('value', "mothers-country-of-birth-eu").as('code').
  V().has('_code_list', 'listID', 'parents-country-birth').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Mothers country of birth - EU").next()


g.V().has('_code','listID', 'parents-country-birth').has('value', "mothers-country-of-birth-new-eu").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'parents-country-birth').property(single, 'value', "mothers-country-of-birth-new-eu")
  ).next()
g.V().has('_code', 'listID', 'parents-country-birth').has('value', "mothers-country-of-birth-new-eu").as('code').
  V().has('_code_list', 'listID', 'parents-country-birth').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Mothers country of birth - New EU").next()


g.V().has('_code','listID', 'parents-country-birth').has('value', "mothers-country-of-birth-rest-of-europe").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'parents-country-birth').property(single, 'value', "mothers-country-of-birth-rest-of-europe")
  ).next()
g.V().has('_code', 'listID', 'parents-country-birth').has('value', "mothers-country-of-birth-rest-of-europe").as('code').
  V().has('_code_list', 'listID', 'parents-country-birth').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Mothers country of birth - Rest of Europe (non EU)").next()


g.V().has('_code','listID', 'parents-country-birth').has('value', "mothers-country-of-birth-middle-east-and-asia").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'parents-country-birth').property(single, 'value', "mothers-country-of-birth-middle-east-and-asia")
  ).next()
g.V().has('_code', 'listID', 'parents-country-birth').has('value', "mothers-country-of-birth-middle-east-and-asia").as('code').
  V().has('_code_list', 'listID', 'parents-country-birth').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Mothers country of birth - Middle East and Asia").next()


g.V().has('_code','listID', 'parents-country-birth').has('value', "mothers-country-of-birth-africa").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'parents-country-birth').property(single, 'value', "mothers-country-of-birth-africa")
  ).next()
g.V().has('_code', 'listID', 'parents-country-birth').has('value', "mothers-country-of-birth-africa").as('code').
  V().has('_code_list', 'listID', 'parents-country-birth').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Mothers country of birth - Africa").next()


g.V().has('_code','listID', 'parents-country-birth').has('value', "mothers-country-of-birth-rest-of-world").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'parents-country-birth').property(single, 'value', "mothers-country-of-birth-rest-of-world")
  ).next()
g.V().has('_code', 'listID', 'parents-country-birth').has('value', "mothers-country-of-birth-rest-of-world").as('code').
  V().has('_code_list', 'listID', 'parents-country-birth').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Mothers country of birth - Rest of World").next()


g.V().has('_code','listID', 'parents-country-birth').has('value', "one-parent-born-outside-uk").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'parents-country-birth').property(single, 'value', "one-parent-born-outside-uk")
  ).next()
g.V().has('_code', 'listID', 'parents-country-birth').has('value', "one-parent-born-outside-uk").as('code').
  V().has('_code_list', 'listID', 'parents-country-birth').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Live births where one parent is born outside of the UK").next()


g.V().has('_code','listID', 'parents-country-birth').has('value', "both-parents-born-outside-uk").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'parents-country-birth').property(single, 'value', "both-parents-born-outside-uk")
  ).next()
g.V().has('_code', 'listID', 'parents-country-birth').has('value', "both-parents-born-outside-uk").as('code').
  V().has('_code_list', 'listID', 'parents-country-birth').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Live births where both parents are born outside of the UK").next()


g.V().has('_code','listID', 'parents-country-birth').has('value', "one-or-both-parents-born-outside-uk").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'parents-country-birth').property(single, 'value', "one-or-both-parents-born-outside-uk")
  ).next()
g.V().has('_code', 'listID', 'parents-country-birth').has('value', "one-or-both-parents-born-outside-uk").as('code').
  V().has('_code_list', 'listID', 'parents-country-birth').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Live births where either one or both parents are born outside of the UK").next()

