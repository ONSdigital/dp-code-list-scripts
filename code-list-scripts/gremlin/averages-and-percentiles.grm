g.V().has('_code_list', 'listID', 'averages-and-percentiles').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "averages-and-percentiles").
    property(single, 'label', "Average And Percentiles").
    property(single, 'edition', "one-off")
  ).next()




g.V().has('_code','listID', 'averages-and-percentiles').has('value', "80").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'averages-and-percentiles').property(single, 'value', "80")
  ).next()
g.V().has('_code', 'listID', 'averages-and-percentiles').has('value', "80").as('code').
  V().has('_code_list', 'listID', 'averages-and-percentiles').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "80").next()


g.V().has('_code','listID', 'averages-and-percentiles').has('value', "60").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'averages-and-percentiles').property(single, 'value', "60")
  ).next()
g.V().has('_code', 'listID', 'averages-and-percentiles').has('value', "60").as('code').
  V().has('_code_list', 'listID', 'averages-and-percentiles').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "60").next()


g.V().has('_code','listID', 'averages-and-percentiles').has('value', "median").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'averages-and-percentiles').property(single, 'value', "median")
  ).next()
g.V().has('_code', 'listID', 'averages-and-percentiles').has('value', "median").as('code').
  V().has('_code_list', 'listID', 'averages-and-percentiles').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Median").next()


g.V().has('_code','listID', 'averages-and-percentiles').has('value', "25").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'averages-and-percentiles').property(single, 'value', "25")
  ).next()
g.V().has('_code', 'listID', 'averages-and-percentiles').has('value', "25").as('code').
  V().has('_code_list', 'listID', 'averages-and-percentiles').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "25").next()


g.V().has('_code','listID', 'averages-and-percentiles').has('value', "70").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'averages-and-percentiles').property(single, 'value', "70")
  ).next()
g.V().has('_code', 'listID', 'averages-and-percentiles').has('value', "70").as('code').
  V().has('_code_list', 'listID', 'averages-and-percentiles').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "70").next()


g.V().has('_code','listID', 'averages-and-percentiles').has('value', "75").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'averages-and-percentiles').property(single, 'value', "75")
  ).next()
g.V().has('_code', 'listID', 'averages-and-percentiles').has('value', "75").as('code').
  V().has('_code_list', 'listID', 'averages-and-percentiles').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "75").next()


g.V().has('_code','listID', 'averages-and-percentiles').has('value', "90").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'averages-and-percentiles').property(single, 'value', "90")
  ).next()
g.V().has('_code', 'listID', 'averages-and-percentiles').has('value', "90").as('code').
  V().has('_code_list', 'listID', 'averages-and-percentiles').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "90").next()


g.V().has('_code','listID', 'averages-and-percentiles').has('value', "30").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'averages-and-percentiles').property(single, 'value', "30")
  ).next()
g.V().has('_code', 'listID', 'averages-and-percentiles').has('value', "30").as('code').
  V().has('_code_list', 'listID', 'averages-and-percentiles').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "30").next()


g.V().has('_code','listID', 'averages-and-percentiles').has('value', "10").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'averages-and-percentiles').property(single, 'value', "10")
  ).next()
g.V().has('_code', 'listID', 'averages-and-percentiles').has('value', "10").as('code').
  V().has('_code_list', 'listID', 'averages-and-percentiles').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "10").next()


g.V().has('_code','listID', 'averages-and-percentiles').has('value', "40").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'averages-and-percentiles').property(single, 'value', "40")
  ).next()
g.V().has('_code', 'listID', 'averages-and-percentiles').has('value', "40").as('code').
  V().has('_code_list', 'listID', 'averages-and-percentiles').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "40").next()


g.V().has('_code','listID', 'averages-and-percentiles').has('value', "mean").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'averages-and-percentiles').property(single, 'value', "mean")
  ).next()
g.V().has('_code', 'listID', 'averages-and-percentiles').has('value', "mean").as('code').
  V().has('_code_list', 'listID', 'averages-and-percentiles').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Mean").next()


g.V().has('_code','listID', 'averages-and-percentiles').has('value', "20").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'averages-and-percentiles').property(single, 'value', "20")
  ).next()
g.V().has('_code', 'listID', 'averages-and-percentiles').has('value', "20").as('code').
  V().has('_code_list', 'listID', 'averages-and-percentiles').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "20").next()

