

g.V().has('_code_list', 'listID', 'welsh-household-composition').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "welsh-household-composition").
    property(single, 'label', "welshhouseholdcomposition").
    property(single, 'edition', "one-off")
  ).next()


g.V().has('_code','listID', 'welsh-household-composition').has('value', "all-categories-welsh-household-composition").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'welsh-household-composition').property(single, 'value', "all-categories-welsh-household-composition")
  ).next()
g.V().has('_code', 'listID', 'welsh-household-composition').has('value', "all-categories-welsh-household-composition").as('code').
  V().has('_code_list', 'listID', 'welsh-household-composition').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "All categories: Welsh household composition").next()


g.V().has('_code','listID', 'welsh-household-composition').has('value', "couple-household-total").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'welsh-household-composition').property(single, 'value', "couple-household-total")
  ).next()
g.V().has('_code', 'listID', 'welsh-household-composition').has('value', "couple-household-total").as('code').
  V().has('_code_list', 'listID', 'welsh-household-composition').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Couple household: Total").next()


g.V().has('_code','listID', 'welsh-household-composition').has('value', "couple-household-no-adults-can-speak-welsh").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'welsh-household-composition').property(single, 'value', "couple-household-no-adults-can-speak-welsh")
  ).next()
g.V().has('_code', 'listID', 'welsh-household-composition').has('value', "couple-household-no-adults-can-speak-welsh").as('code').
  V().has('_code_list', 'listID', 'welsh-household-composition').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Couple household: No adults can speak Welsh").next()


g.V().has('_code','listID', 'welsh-household-composition').has('value', "couple-household-one-adult-can-speak-welsh").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'welsh-household-composition').property(single, 'value', "couple-household-one-adult-can-speak-welsh")
  ).next()
g.V().has('_code', 'listID', 'welsh-household-composition').has('value', "couple-household-one-adult-can-speak-welsh").as('code').
  V().has('_code_list', 'listID', 'welsh-household-composition').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Couple household: One adult can speak Welsh").next()


g.V().has('_code','listID', 'welsh-household-composition').has('value', "couple-household-two-or-more-adults-can-speak-welsh").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'welsh-household-composition').property(single, 'value', "couple-household-two-or-more-adults-can-speak-welsh")
  ).next()
g.V().has('_code', 'listID', 'welsh-household-composition').has('value', "couple-household-two-or-more-adults-can-speak-welsh").as('code').
  V().has('_code_list', 'listID', 'welsh-household-composition').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Couple household: Two or more adults can speak Welsh").next()


g.V().has('_code','listID', 'welsh-household-composition').has('value', "lone-parent-household-total").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'welsh-household-composition').property(single, 'value', "lone-parent-household-total")
  ).next()
g.V().has('_code', 'listID', 'welsh-household-composition').has('value', "lone-parent-household-total").as('code').
  V().has('_code_list', 'listID', 'welsh-household-composition').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Lone parent household: Total").next()


g.V().has('_code','listID', 'welsh-household-composition').has('value', "lone-parent-household-no-adults-can-speak-welsh").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'welsh-household-composition').property(single, 'value', "lone-parent-household-no-adults-can-speak-welsh")
  ).next()
g.V().has('_code', 'listID', 'welsh-household-composition').has('value', "lone-parent-household-no-adults-can-speak-welsh").as('code').
  V().has('_code_list', 'listID', 'welsh-household-composition').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Lone parent household: No adults can speak Welsh").next()


g.V().has('_code','listID', 'welsh-household-composition').has('value', "lone-parent-household-one-adult-can-speak-welsh").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'welsh-household-composition').property(single, 'value', "lone-parent-household-one-adult-can-speak-welsh")
  ).next()
g.V().has('_code', 'listID', 'welsh-household-composition').has('value', "lone-parent-household-one-adult-can-speak-welsh").as('code').
  V().has('_code_list', 'listID', 'welsh-household-composition').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Lone parent household: One adult can speak Welsh").next()


g.V().has('_code','listID', 'welsh-household-composition').has('value', "lone-parent-household-two-or-more-adults-can-speak-welsh").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'welsh-household-composition').property(single, 'value', "lone-parent-household-two-or-more-adults-can-speak-welsh")
  ).next()
g.V().has('_code', 'listID', 'welsh-household-composition').has('value', "lone-parent-household-two-or-more-adults-can-speak-welsh").as('code').
  V().has('_code_list', 'listID', 'welsh-household-composition').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Lone parent household: Two or more adults can speak Welsh").next()

