

g.V().has('_code_list', 'listID', 'lms-sic').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "lms-sic").
    property(single, 'label', "standardindustrialclassification").
    property(single, 'edition', "one-off")
  ).next()


g.V().has('_code','listID', 'lms-sic').has('value', "A-T").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "A-T")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "A-T").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "A-T : All jobs ").next()


g.V().has('_code','listID', 'lms-sic').has('value', "A").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "A")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "A").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "A : Agriculture, forestry & fishing").next()


g.V().has('_code','listID', 'lms-sic').has('value', "B").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "B")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "B").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "B : Mining & quarrying").next()


g.V().has('_code','listID', 'lms-sic').has('value', "C").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "C")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "C").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "C : Manufacturing").next()


g.V().has('_code','listID', 'lms-sic').has('value', "D").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "D")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "D").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "D : Electricity, gas, steam & air conditioning supply ").next()


g.V().has('_code','listID', 'lms-sic').has('value', "E").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "E")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "E").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "E : Water supply, sewerage, waste & remediation activities").next()


g.V().has('_code','listID', 'lms-sic').has('value', "F").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "F")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "F").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "F : Construction").next()


g.V().has('_code','listID', 'lms-sic').has('value', "G").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "G")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "G").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "G : Wholesale & retail trade; repair of motor vehicles and motor cycles").next()


g.V().has('_code','listID', 'lms-sic').has('value', "H").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "H")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "H").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "H : Transport & storage").next()


g.V().has('_code','listID', 'lms-sic').has('value', "I").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "I")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "I").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "I : Accommodation & food service activities").next()


g.V().has('_code','listID', 'lms-sic').has('value', "J").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "J")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "J").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "J : Information & communication").next()


g.V().has('_code','listID', 'lms-sic').has('value', "K").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "K")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "K").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "K : Financial & insurance activities").next()


g.V().has('_code','listID', 'lms-sic').has('value', "L").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "L")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "L").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "L : Real estate activities").next()


g.V().has('_code','listID', 'lms-sic').has('value', "M").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "M")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "M").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "M : Professional scientific & technical activities").next()


g.V().has('_code','listID', 'lms-sic').has('value', "N").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "N")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "N").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "N : Administrative & support service activities").next()


g.V().has('_code','listID', 'lms-sic').has('value', "O").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "O")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "O").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "O : Public admin & defence; compulsory social security").next()


g.V().has('_code','listID', 'lms-sic').has('value', "P").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "P")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "P").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "P : Education").next()


g.V().has('_code','listID', 'lms-sic').has('value', "Q").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "Q")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "Q").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Q : Human health & social work activities").next()


g.V().has('_code','listID', 'lms-sic').has('value', "R").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "R")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "R").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "R : Arts, entertainment & recreation").next()


g.V().has('_code','listID', 'lms-sic').has('value', "S").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "S")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "S").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "S : Other service activities").next()


g.V().has('_code','listID', 'lms-sic').has('value', "T").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "T")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "T").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "T : People employed by households, etc.").next()


g.V().has('_code','listID', 'lms-sic').has('value', "G-T").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'lms-sic').property(single, 'value', "G-T")
  ).next()
g.V().has('_code', 'listID', 'lms-sic').has('value', "G-T").as('code').
  V().has('_code_list', 'listID', 'lms-sic').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "G-T : Total services ").next()

