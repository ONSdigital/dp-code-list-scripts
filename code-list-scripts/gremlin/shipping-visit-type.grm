

g.V().has('_code_list', 'listID', 'shipping-visit-type').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "shipping-visit-type").
    property(single, 'label', "visittype").
    property(single, 'edition', "one-off")
  ).next()


g.V().has('_code','listID', 'shipping-visit-type').has('value', "all-visits").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'shipping-visit-type').property(single, 'value', "all-visits")
  ).next()
g.V().has('_code', 'listID', 'shipping-visit-type').has('value', "all-visits").as('code').
  V().has('_code_list', 'listID', 'shipping-visit-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "All visits").next()


g.V().has('_code','listID', 'shipping-visit-type').has('value', "all-unique-ships").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'shipping-visit-type').property(single, 'value', "all-unique-ships")
  ).next()
g.V().has('_code', 'listID', 'shipping-visit-type').has('value', "all-unique-ships").as('code').
  V().has('_code_list', 'listID', 'shipping-visit-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "All unique ships").next()


g.V().has('_code','listID', 'shipping-visit-type').has('value', "ct-visits").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'shipping-visit-type').property(single, 'value', "ct-visits")
  ).next()
g.V().has('_code', 'listID', 'shipping-visit-type').has('value', "ct-visits").as('code').
  V().has('_code_list', 'listID', 'shipping-visit-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "C&T visits").next()


g.V().has('_code','listID', 'shipping-visit-type').has('value', "ct-unique-ships").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'shipping-visit-type').property(single, 'value', "ct-unique-ships")
  ).next()
g.V().has('_code', 'listID', 'shipping-visit-type').has('value', "ct-unique-ships").as('code').
  V().has('_code_list', 'listID', 'shipping-visit-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "C&T unique ships").next()

