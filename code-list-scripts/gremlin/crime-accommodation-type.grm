g.V().has('_code_list', 'listID', 'crime-accommodation-type').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "crime-accommodation-type").
    property(single, 'label', "accommodationtype").
    property(single, 'edition', "one-off")
  ).next()





g.V().has('_code','listID', 'crime-accommodation-type').has('value', "other-accommodation").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'crime-accommodation-type').property(single, 'value', "other-accommodation")
  ).next()
g.V().has('_code', 'listID', 'crime-accommodation-type').has('value', "other-accommodation").as('code').
  V().has('_code_list', 'listID', 'crime-accommodation-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Other accommodation").next()


g.V().has('_code','listID', 'crime-accommodation-type').has('value', "semi-detached-house").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'crime-accommodation-type').property(single, 'value', "semi-detached-house")
  ).next()
g.V().has('_code', 'listID', 'crime-accommodation-type').has('value', "semi-detached-house").as('code').
  V().has('_code_list', 'listID', 'crime-accommodation-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Semi-detached house").next()


g.V().has('_code','listID', 'crime-accommodation-type').has('value', "flats-maisonettes").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'crime-accommodation-type').property(single, 'value', "flats-maisonettes")
  ).next()
g.V().has('_code', 'listID', 'crime-accommodation-type').has('value', "flats-maisonettes").as('code').
  V().has('_code_list', 'listID', 'crime-accommodation-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Flats/maisonettes").next()


g.V().has('_code','listID', 'crime-accommodation-type').has('value', "house").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'crime-accommodation-type').property(single, 'value', "house")
  ).next()
g.V().has('_code', 'listID', 'crime-accommodation-type').has('value', "house").as('code').
  V().has('_code_list', 'listID', 'crime-accommodation-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "House").next()


g.V().has('_code','listID', 'crime-accommodation-type').has('value', "detached-house").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'crime-accommodation-type').property(single, 'value', "detached-house")
  ).next()
g.V().has('_code', 'listID', 'crime-accommodation-type').has('value', "detached-house").as('code').
  V().has('_code_list', 'listID', 'crime-accommodation-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Detached house").next()


g.V().has('_code','listID', 'crime-accommodation-type').has('value', "terraced-house").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'crime-accommodation-type').property(single, 'value', "terraced-house")
  ).next()
g.V().has('_code', 'listID', 'crime-accommodation-type').has('value', "terraced-house").as('code').
  V().has('_code_list', 'listID', 'crime-accommodation-type').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Terraced house").next()

