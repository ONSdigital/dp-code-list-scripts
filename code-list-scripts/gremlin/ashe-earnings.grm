g.V().hasLabel('_code_list').has('listID', 'ashe-earnings').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "ashe-earnings").
    property(single, 'label', "earnings").
    property(single, 'edition', "one-off")
  ).next()





g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "weekly-pay-excluding-overtime").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ashe-earnings').property(single, 'value', "weekly-pay-excluding-overtime")
  ).next()
g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "weekly-pay-excluding-overtime").outE().fold().coalesce(unfold(),
  g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "weekly-pay-excluding-overtime").
    addE('usedBy').to(
      g.V().hasLabel('_code_list').has('listID', 'ashe-earnings').has('edition', 'one-off')
    ).property(single, 'label', "Weekly pay - Excluding overtime")).next()


g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "overtime-pay").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ashe-earnings').property(single, 'value', "overtime-pay")
  ).next()
g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "overtime-pay").outE().fold().coalesce(unfold(),
  g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "overtime-pay").
    addE('usedBy').to(
      g.V().hasLabel('_code_list').has('listID', 'ashe-earnings').has('edition', 'one-off')
    ).property(single, 'label', "Overtime pay")).next()


g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "hourly-pay-gross").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ashe-earnings').property(single, 'value', "hourly-pay-gross")
  ).next()
g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "hourly-pay-gross").outE().fold().coalesce(unfold(),
  g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "hourly-pay-gross").
    addE('usedBy').to(
      g.V().hasLabel('_code_list').has('listID', 'ashe-earnings').has('edition', 'one-off')
    ).property(single, 'label', "Hourly pay - Gross")).next()


g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "weekly-pay-gross").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ashe-earnings').property(single, 'value', "weekly-pay-gross")
  ).next()
g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "weekly-pay-gross").outE().fold().coalesce(unfold(),
  g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "weekly-pay-gross").
    addE('usedBy').to(
      g.V().hasLabel('_code_list').has('listID', 'ashe-earnings').has('edition', 'one-off')
    ).property(single, 'label', "Weekly pay - Gross")).next()


g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "basic-pay-including-other-pay").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ashe-earnings').property(single, 'value', "basic-pay-including-other-pay")
  ).next()
g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "basic-pay-including-other-pay").outE().fold().coalesce(unfold(),
  g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "basic-pay-including-other-pay").
    addE('usedBy').to(
      g.V().hasLabel('_code_list').has('listID', 'ashe-earnings').has('edition', 'one-off')
    ).property(single, 'label', "Basic Pay - Including other pay")).next()


g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "hourly-pay-excluding-overtime").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ashe-earnings').property(single, 'value', "hourly-pay-excluding-overtime")
  ).next()
g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "hourly-pay-excluding-overtime").outE().fold().coalesce(unfold(),
  g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "hourly-pay-excluding-overtime").
    addE('usedBy').to(
      g.V().hasLabel('_code_list').has('listID', 'ashe-earnings').has('edition', 'one-off')
    ).property(single, 'label', "Hourly pay - Excluding overtime")).next()


g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "annual-pay-gross").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ashe-earnings').property(single, 'value', "annual-pay-gross")
  ).next()
g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "annual-pay-gross").outE().fold().coalesce(unfold(),
  g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "annual-pay-gross").
    addE('usedBy').to(
      g.V().hasLabel('_code_list').has('listID', 'ashe-earnings').has('edition', 'one-off')
    ).property(single, 'label', "Annual pay - Gross")).next()


g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "annual-pay-incentive").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'ashe-earnings').property(single, 'value', "annual-pay-incentive")
  ).next()
g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "annual-pay-incentive").outE().fold().coalesce(unfold(),
  g.V().hasLabel('_code').has('listID', 'ashe-earnings').has('value', "annual-pay-incentive").
    addE('usedBy').to(
      g.V().hasLabel('_code_list').has('listID', 'ashe-earnings').has('edition', 'one-off')
    ).property(single, 'label', "Annual pay - Incentive")).next()

