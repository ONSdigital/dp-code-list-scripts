

g.V().has('_code_list', 'listID', 'life-expectancy-cohort').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "life-expectancy-cohort").
    property(single, 'label', "Life Expectancy Cohort").
    property(single, 'edition', "one-off")
  ).next()


g.V().has('_code','listID', 'life-expectancy-cohort').has('value', "males-at-birth").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'life-expectancy-cohort').property(single, 'value', "males-at-birth")
  ).next()
g.V().has('_code', 'listID', 'life-expectancy-cohort').has('value', "males-at-birth").as('code').
  V().has('_code_list', 'listID', 'life-expectancy-cohort').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Males at birth").next()


g.V().has('_code','listID', 'life-expectancy-cohort').has('value', "females-at-birth").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'life-expectancy-cohort').property(single, 'value', "females-at-birth")
  ).next()
g.V().has('_code', 'listID', 'life-expectancy-cohort').has('value', "females-at-birth").as('code').
  V().has('_code_list', 'listID', 'life-expectancy-cohort').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Females at birth").next()


g.V().has('_code','listID', 'life-expectancy-cohort').has('value', "males-at-age-65").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'life-expectancy-cohort').property(single, 'value', "males-at-age-65")
  ).next()
g.V().has('_code', 'listID', 'life-expectancy-cohort').has('value', "males-at-age-65").as('code').
  V().has('_code_list', 'listID', 'life-expectancy-cohort').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Males at age 65").next()


g.V().has('_code','listID', 'life-expectancy-cohort').has('value', "females-at-age-65").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'life-expectancy-cohort').property(single, 'value', "females-at-age-65")
  ).next()
g.V().has('_code', 'listID', 'life-expectancy-cohort').has('value', "females-at-age-65").as('code').
  V().has('_code_list', 'listID', 'life-expectancy-cohort').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Females at age 65").next()

