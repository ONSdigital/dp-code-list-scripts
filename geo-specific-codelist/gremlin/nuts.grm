

g.V().hasId('_code_list_nuts_one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(id, '_code_list_nuts_one-off').
    property(single, 'listID', "nuts").
    property(single, 'geography', true).
    property(single, 'label', "Geography").
    property(single, 'edition', "one-off")
  ).next()


g.V().hasId('_code_geography_UKC11').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKC11').property(single, 'listID', 'geography').property(single, 'value', "UKC11")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKC11').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Hartlepool and Stockton-on-Tees").next()


g.V().hasId('_code_geography_UKC12').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKC12').property(single, 'listID', 'geography').property(single, 'value', "UKC12")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKC12').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "South Teesside").next()


g.V().hasId('_code_geography_UKC13').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKC13').property(single, 'listID', 'geography').property(single, 'value', "UKC13")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKC13').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Darlington").next()


g.V().hasId('_code_geography_UKC14').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKC14').property(single, 'listID', 'geography').property(single, 'value', "UKC14")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKC14').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Durham CC").next()


g.V().hasId('_code_geography_UKC21').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKC21').property(single, 'listID', 'geography').property(single, 'value', "UKC21")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKC21').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Northumberland").next()


g.V().hasId('_code_geography_UKC22').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKC22').property(single, 'listID', 'geography').property(single, 'value', "UKC22")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKC22').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Tyneside").next()


g.V().hasId('_code_geography_UKC23').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKC23').property(single, 'listID', 'geography').property(single, 'value', "UKC23")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKC23').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Sunderland").next()


g.V().hasId('_code_geography_UKD11').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD11').property(single, 'listID', 'geography').property(single, 'value', "UKD11")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD11').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "West Cumbria").next()


g.V().hasId('_code_geography_UKD12').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD12').property(single, 'listID', 'geography').property(single, 'value', "UKD12")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD12').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "East Cumbria").next()


g.V().hasId('_code_geography_UKD33').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD33').property(single, 'listID', 'geography').property(single, 'value', "UKD33")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD33').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Manchester").next()


g.V().hasId('_code_geography_UKD34').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD34').property(single, 'listID', 'geography').property(single, 'value', "UKD34")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD34').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Greater Manchester South West").next()


g.V().hasId('_code_geography_UKD35').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD35').property(single, 'listID', 'geography').property(single, 'value', "UKD35")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD35').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Greater Manchester South East").next()


g.V().hasId('_code_geography_UKD36').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD36').property(single, 'listID', 'geography').property(single, 'value', "UKD36")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD36').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Greater Manchester North West").next()


g.V().hasId('_code_geography_UKD37').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD37').property(single, 'listID', 'geography').property(single, 'value', "UKD37")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD37').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Greater Manchester North East").next()


g.V().hasId('_code_geography_UKD41').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD41').property(single, 'listID', 'geography').property(single, 'value', "UKD41")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD41').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Blackburn with Darwen").next()


g.V().hasId('_code_geography_UKD42').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD42').property(single, 'listID', 'geography').property(single, 'value', "UKD42")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD42').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Blackpool").next()


g.V().hasId('_code_geography_UKD44').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD44').property(single, 'listID', 'geography').property(single, 'value', "UKD44")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD44').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Lancaster and Wyre").next()


g.V().hasId('_code_geography_UKD45').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD45').property(single, 'listID', 'geography').property(single, 'value', "UKD45")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD45').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Mid Lancashire").next()


g.V().hasId('_code_geography_UKD46').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD46').property(single, 'listID', 'geography').property(single, 'value', "UKD46")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD46').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "East Lancashire").next()


g.V().hasId('_code_geography_UKD47').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD47').property(single, 'listID', 'geography').property(single, 'value', "UKD47")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD47').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Chorley and West Lancashire").next()


g.V().hasId('_code_geography_UKD61').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD61').property(single, 'listID', 'geography').property(single, 'value', "UKD61")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD61').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Warrington").next()


g.V().hasId('_code_geography_UKD62').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD62').property(single, 'listID', 'geography').property(single, 'value', "UKD62")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD62').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Cheshire East").next()


g.V().hasId('_code_geography_UKD63').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD63').property(single, 'listID', 'geography').property(single, 'value', "UKD63")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD63').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Cheshire West and Chester").next()


g.V().hasId('_code_geography_UKD71').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD71').property(single, 'listID', 'geography').property(single, 'value', "UKD71")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD71').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "East Merseyside").next()


g.V().hasId('_code_geography_UKD72').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD72').property(single, 'listID', 'geography').property(single, 'value', "UKD72")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD72').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Liverpool").next()


g.V().hasId('_code_geography_UKD73').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD73').property(single, 'listID', 'geography').property(single, 'value', "UKD73")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD73').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Sefton").next()


g.V().hasId('_code_geography_UKD74').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD74').property(single, 'listID', 'geography').property(single, 'value', "UKD74")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD74').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Wirral").next()


g.V().hasId('_code_geography_UKE11').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKE11').property(single, 'listID', 'geography').property(single, 'value', "UKE11")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKE11').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Kingston upon Hull, City of").next()


g.V().hasId('_code_geography_UKE12').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKE12').property(single, 'listID', 'geography').property(single, 'value', "UKE12")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKE12').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "East Riding of Yorkshire").next()


g.V().hasId('_code_geography_UKE13').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKE13').property(single, 'listID', 'geography').property(single, 'value', "UKE13")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKE13').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "North and North East Lincolnshire").next()


g.V().hasId('_code_geography_UKE21').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKE21').property(single, 'listID', 'geography').property(single, 'value', "UKE21")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKE21').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "York").next()


g.V().hasId('_code_geography_UKE22').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKE22').property(single, 'listID', 'geography').property(single, 'value', "UKE22")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKE22').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "North Yorkshire CC").next()


g.V().hasId('_code_geography_UKE31').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKE31').property(single, 'listID', 'geography').property(single, 'value', "UKE31")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKE31').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Barnsley, Doncaster and Rotherham").next()


g.V().hasId('_code_geography_UKE32').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKE32').property(single, 'listID', 'geography').property(single, 'value', "UKE32")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKE32').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Sheffield").next()


g.V().hasId('_code_geography_UKE41').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKE41').property(single, 'listID', 'geography').property(single, 'value', "UKE41")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKE41').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Bradford").next()


g.V().hasId('_code_geography_UKE42').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKE42').property(single, 'listID', 'geography').property(single, 'value', "UKE42")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKE42').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Leeds").next()


g.V().hasId('_code_geography_UKE44').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKE44').property(single, 'listID', 'geography').property(single, 'value', "UKE44")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKE44').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Calderdale and Kirklees").next()


g.V().hasId('_code_geography_UKE45').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKE45').property(single, 'listID', 'geography').property(single, 'value', "UKE45")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKE45').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Wakefield").next()


g.V().hasId('_code_geography_UKF11').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKF11').property(single, 'listID', 'geography').property(single, 'value', "UKF11")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKF11').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Derby").next()


g.V().hasId('_code_geography_UKF12').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKF12').property(single, 'listID', 'geography').property(single, 'value', "UKF12")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKF12').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "East Derbyshire").next()


g.V().hasId('_code_geography_UKF13').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKF13').property(single, 'listID', 'geography').property(single, 'value', "UKF13")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKF13').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "South and West Derbyshire").next()


g.V().hasId('_code_geography_UKF14').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKF14').property(single, 'listID', 'geography').property(single, 'value', "UKF14")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKF14').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Nottingham").next()


g.V().hasId('_code_geography_UKF15').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKF15').property(single, 'listID', 'geography').property(single, 'value', "UKF15")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKF15').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "North Nottinghamshire").next()


g.V().hasId('_code_geography_UKF16').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKF16').property(single, 'listID', 'geography').property(single, 'value', "UKF16")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKF16').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "South Nottinghamshire").next()


g.V().hasId('_code_geography_UKF21').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKF21').property(single, 'listID', 'geography').property(single, 'value', "UKF21")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKF21').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Leicester").next()


g.V().hasId('_code_geography_UKF22').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKF22').property(single, 'listID', 'geography').property(single, 'value', "UKF22")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKF22').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Leicestershire CC and Rutland").next()


g.V().hasId('_code_geography_UKF24').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKF24').property(single, 'listID', 'geography').property(single, 'value', "UKF24")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKF24').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "West Northamptonshire").next()


g.V().hasId('_code_geography_UKF25').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKF25').property(single, 'listID', 'geography').property(single, 'value', "UKF25")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKF25').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "North Northamptonshire").next()


g.V().hasId('_code_geography_UKF30').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKF30').property(single, 'listID', 'geography').property(single, 'value', "UKF30")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKF30').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Lincolnshire").next()


g.V().hasId('_code_geography_UKG11').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKG11').property(single, 'listID', 'geography').property(single, 'value', "UKG11")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKG11').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Herefordshire, County of").next()


g.V().hasId('_code_geography_UKG12').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKG12').property(single, 'listID', 'geography').property(single, 'value', "UKG12")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKG12').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Worcestershire").next()


g.V().hasId('_code_geography_UKG13').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKG13').property(single, 'listID', 'geography').property(single, 'value', "UKG13")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKG13').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Warwickshire").next()


g.V().hasId('_code_geography_UKG21').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKG21').property(single, 'listID', 'geography').property(single, 'value', "UKG21")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKG21').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Telford and Wrekin").next()


g.V().hasId('_code_geography_UKG22').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKG22').property(single, 'listID', 'geography').property(single, 'value', "UKG22")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKG22').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Shropshire CC").next()


g.V().hasId('_code_geography_UKG23').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKG23').property(single, 'listID', 'geography').property(single, 'value', "UKG23")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKG23').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Stoke-on-Trent").next()


g.V().hasId('_code_geography_UKG24').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKG24').property(single, 'listID', 'geography').property(single, 'value', "UKG24")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKG24').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Staffordshire CC").next()


g.V().hasId('_code_geography_UKG31').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKG31').property(single, 'listID', 'geography').property(single, 'value', "UKG31")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKG31').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Birmingham").next()


g.V().hasId('_code_geography_UKG32').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKG32').property(single, 'listID', 'geography').property(single, 'value', "UKG32")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKG32').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Solihull").next()


g.V().hasId('_code_geography_UKG33').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKG33').property(single, 'listID', 'geography').property(single, 'value', "UKG33")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKG33').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Coventry").next()


g.V().hasId('_code_geography_UKG36').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKG36').property(single, 'listID', 'geography').property(single, 'value', "UKG36")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKG36').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Dudley").next()


g.V().hasId('_code_geography_UKG37').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKG37').property(single, 'listID', 'geography').property(single, 'value', "UKG37")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKG37').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Sandwell").next()


g.V().hasId('_code_geography_UKG38').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKG38').property(single, 'listID', 'geography').property(single, 'value', "UKG38")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKG38').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Walsall").next()


g.V().hasId('_code_geography_UKG39').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKG39').property(single, 'listID', 'geography').property(single, 'value', "UKG39")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKG39').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Wolverhampton").next()


g.V().hasId('_code_geography_UKH11').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKH11').property(single, 'listID', 'geography').property(single, 'value', "UKH11")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKH11').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Peterborough").next()


g.V().hasId('_code_geography_UKH12').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKH12').property(single, 'listID', 'geography').property(single, 'value', "UKH12")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKH12').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Cambridgeshire CC").next()


g.V().hasId('_code_geography_UKH14').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKH14').property(single, 'listID', 'geography').property(single, 'value', "UKH14")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKH14').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Suffolk").next()


g.V().hasId('_code_geography_UKH15').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKH15').property(single, 'listID', 'geography').property(single, 'value', "UKH15")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKH15').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Norwich and East Norfolk").next()


g.V().hasId('_code_geography_UKH16').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKH16').property(single, 'listID', 'geography').property(single, 'value', "UKH16")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKH16').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "North and West Norfolk").next()


g.V().hasId('_code_geography_UKH17').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKH17').property(single, 'listID', 'geography').property(single, 'value', "UKH17")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKH17').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Breckland and South Norfolk").next()


g.V().hasId('_code_geography_UKH21').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKH21').property(single, 'listID', 'geography').property(single, 'value', "UKH21")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKH21').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Luton").next()


g.V().hasId('_code_geography_UKH23').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKH23').property(single, 'listID', 'geography').property(single, 'value', "UKH23")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKH23').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Hertfordshire").next()


g.V().hasId('_code_geography_UKH24').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKH24').property(single, 'listID', 'geography').property(single, 'value', "UKH24")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKH24').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Bedford").next()


g.V().hasId('_code_geography_UKH25').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKH25').property(single, 'listID', 'geography').property(single, 'value', "UKH25")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKH25').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Central Bedfordshire").next()


g.V().hasId('_code_geography_UKH31').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKH31').property(single, 'listID', 'geography').property(single, 'value', "UKH31")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKH31').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Southend-on-Sea").next()


g.V().hasId('_code_geography_UKH32').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKH32').property(single, 'listID', 'geography').property(single, 'value', "UKH32")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKH32').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Thurrock").next()


g.V().hasId('_code_geography_UKH34').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKH34').property(single, 'listID', 'geography').property(single, 'value', "UKH34")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKH34').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Essex Haven Gateway").next()


g.V().hasId('_code_geography_UKH35').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKH35').property(single, 'listID', 'geography').property(single, 'value', "UKH35")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKH35').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "West Essex").next()


g.V().hasId('_code_geography_UKH36').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKH36').property(single, 'listID', 'geography').property(single, 'value', "UKH36")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKH36').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Heart of Essex").next()


g.V().hasId('_code_geography_UKH37').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKH37').property(single, 'listID', 'geography').property(single, 'value', "UKH37")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKH37').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Essex Thames Gateway").next()


g.V().hasId('_code_geography_UKI31').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI31').property(single, 'listID', 'geography').property(single, 'value', "UKI31")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI31').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Camden and City of London").next()


g.V().hasId('_code_geography_UKI32').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI32').property(single, 'listID', 'geography').property(single, 'value', "UKI32")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI32').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Westminster").next()


g.V().hasId('_code_geography_UKI33').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI33').property(single, 'listID', 'geography').property(single, 'value', "UKI33")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI33').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Kensington & Chelsea and Hammersmith & Fulham").next()


g.V().hasId('_code_geography_UKI34').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI34').property(single, 'listID', 'geography').property(single, 'value', "UKI34")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI34').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Wandsworth").next()


g.V().hasId('_code_geography_UKI41').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI41').property(single, 'listID', 'geography').property(single, 'value', "UKI41")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI41').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Hackney and Newham").next()


g.V().hasId('_code_geography_UKI42').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI42').property(single, 'listID', 'geography').property(single, 'value', "UKI42")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI42').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Tower Hamlets").next()


g.V().hasId('_code_geography_UKI43').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI43').property(single, 'listID', 'geography').property(single, 'value', "UKI43")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI43').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Haringey and Islington").next()


g.V().hasId('_code_geography_UKI44').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI44').property(single, 'listID', 'geography').property(single, 'value', "UKI44")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI44').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Lewisham and Southwark").next()


g.V().hasId('_code_geography_UKI45').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI45').property(single, 'listID', 'geography').property(single, 'value', "UKI45")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI45').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Lambeth").next()


g.V().hasId('_code_geography_UKI51').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI51').property(single, 'listID', 'geography').property(single, 'value', "UKI51")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI51').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Bexley and Greenwich").next()


g.V().hasId('_code_geography_UKI52').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI52').property(single, 'listID', 'geography').property(single, 'value', "UKI52")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI52').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Barking & Dagenham and Havering").next()


g.V().hasId('_code_geography_UKI53').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI53').property(single, 'listID', 'geography').property(single, 'value', "UKI53")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI53').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Redbridge and Waltham Forest").next()


g.V().hasId('_code_geography_UKI54').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI54').property(single, 'listID', 'geography').property(single, 'value', "UKI54")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI54').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Enfield").next()


g.V().hasId('_code_geography_UKI61').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI61').property(single, 'listID', 'geography').property(single, 'value', "UKI61")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI61').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Bromley").next()


g.V().hasId('_code_geography_UKI62').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI62').property(single, 'listID', 'geography').property(single, 'value', "UKI62")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI62').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Croydon").next()


g.V().hasId('_code_geography_UKI63').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI63').property(single, 'listID', 'geography').property(single, 'value', "UKI63")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI63').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Merton, Kingston upon Thames and Sutton").next()


g.V().hasId('_code_geography_UKI71').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI71').property(single, 'listID', 'geography').property(single, 'value', "UKI71")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI71').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Barnet").next()


g.V().hasId('_code_geography_UKI72').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI72').property(single, 'listID', 'geography').property(single, 'value', "UKI72")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI72').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Brent").next()


g.V().hasId('_code_geography_UKI73').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI73').property(single, 'listID', 'geography').property(single, 'value', "UKI73")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI73').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Ealing").next()


g.V().hasId('_code_geography_UKI74').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI74').property(single, 'listID', 'geography').property(single, 'value', "UKI74")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI74').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Harrow and Hillingdon").next()


g.V().hasId('_code_geography_UKI75').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI75').property(single, 'listID', 'geography').property(single, 'value', "UKI75")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI75').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Hounslow and Richmond upon Thames").next()


g.V().hasId('_code_geography_UKJ11').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ11').property(single, 'listID', 'geography').property(single, 'value', "UKJ11")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ11').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Berkshire").next()


g.V().hasId('_code_geography_UKJ12').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ12').property(single, 'listID', 'geography').property(single, 'value', "UKJ12")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ12').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Milton Keynes").next()


g.V().hasId('_code_geography_UKJ13').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ13').property(single, 'listID', 'geography').property(single, 'value', "UKJ13")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ13').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Buckinghamshire CC").next()


g.V().hasId('_code_geography_UKJ14').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ14').property(single, 'listID', 'geography').property(single, 'value', "UKJ14")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ14').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Oxfordshire").next()


g.V().hasId('_code_geography_UKJ21').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ21').property(single, 'listID', 'geography').property(single, 'value', "UKJ21")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ21').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Brighton and Hove").next()


g.V().hasId('_code_geography_UKJ22').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ22').property(single, 'listID', 'geography').property(single, 'value', "UKJ22")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ22').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "East Sussex CC").next()


g.V().hasId('_code_geography_UKJ25').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ25').property(single, 'listID', 'geography').property(single, 'value', "UKJ25")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ25').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "West Surrey").next()


g.V().hasId('_code_geography_UKJ26').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ26').property(single, 'listID', 'geography').property(single, 'value', "UKJ26")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ26').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "East Surrey").next()


g.V().hasId('_code_geography_UKJ27').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ27').property(single, 'listID', 'geography').property(single, 'value', "UKJ27")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ27').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "West Sussex (South West)").next()


g.V().hasId('_code_geography_UKJ28').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ28').property(single, 'listID', 'geography').property(single, 'value', "UKJ28")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ28').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "West Sussex (North East)").next()


g.V().hasId('_code_geography_UKJ31').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ31').property(single, 'listID', 'geography').property(single, 'value', "UKJ31")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ31').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Portsmouth").next()


g.V().hasId('_code_geography_UKJ32').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ32').property(single, 'listID', 'geography').property(single, 'value', "UKJ32")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ32').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Southampton").next()


g.V().hasId('_code_geography_UKJ34').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ34').property(single, 'listID', 'geography').property(single, 'value', "UKJ34")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ34').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Isle of Wight").next()


g.V().hasId('_code_geography_UKJ35').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ35').property(single, 'listID', 'geography').property(single, 'value', "UKJ35")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ35').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "South Hampshire").next()


g.V().hasId('_code_geography_UKJ36').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ36').property(single, 'listID', 'geography').property(single, 'value', "UKJ36")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ36').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Central Hampshire").next()


g.V().hasId('_code_geography_UKJ37').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ37').property(single, 'listID', 'geography').property(single, 'value', "UKJ37")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ37').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "North Hampshire").next()


g.V().hasId('_code_geography_UKJ41').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ41').property(single, 'listID', 'geography').property(single, 'value', "UKJ41")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ41').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Medway").next()


g.V().hasId('_code_geography_UKJ43').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ43').property(single, 'listID', 'geography').property(single, 'value', "UKJ43")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ43').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Kent Thames Gateway").next()


g.V().hasId('_code_geography_UKJ44').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ44').property(single, 'listID', 'geography').property(single, 'value', "UKJ44")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ44').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "East Kent").next()


g.V().hasId('_code_geography_UKJ45').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ45').property(single, 'listID', 'geography').property(single, 'value', "UKJ45")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ45').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Mid Kent").next()


g.V().hasId('_code_geography_UKJ46').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ46').property(single, 'listID', 'geography').property(single, 'value', "UKJ46")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ46').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "West Kent").next()


g.V().hasId('_code_geography_UKK11').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKK11').property(single, 'listID', 'geography').property(single, 'value', "UKK11")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKK11').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Bristol, City of").next()


g.V().hasId('_code_geography_UKK12').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKK12').property(single, 'listID', 'geography').property(single, 'value', "UKK12")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKK12').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Bath and North East Somerset, North Somerset and South Gloucestershire").next()


g.V().hasId('_code_geography_UKK13').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKK13').property(single, 'listID', 'geography').property(single, 'value', "UKK13")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKK13').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Gloucestershire").next()


g.V().hasId('_code_geography_UKK14').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKK14').property(single, 'listID', 'geography').property(single, 'value', "UKK14")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKK14').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Swindon").next()


g.V().hasId('_code_geography_UKK15').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKK15').property(single, 'listID', 'geography').property(single, 'value', "UKK15")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKK15').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Wiltshire").next()


g.V().hasId('_code_geography_UKK21').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKK21').property(single, 'listID', 'geography').property(single, 'value', "UKK21")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKK21').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Bournemouth and Poole").next()


g.V().hasId('_code_geography_UKK22').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKK22').property(single, 'listID', 'geography').property(single, 'value', "UKK22")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKK22').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Dorset CC").next()


g.V().hasId('_code_geography_UKK23').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKK23').property(single, 'listID', 'geography').property(single, 'value', "UKK23")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKK23').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Somerset").next()


g.V().hasId('_code_geography_UKK30').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKK30').property(single, 'listID', 'geography').property(single, 'value', "UKK30")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKK30').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Cornwall and Isles of Scilly").next()


g.V().hasId('_code_geography_UKK41').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKK41').property(single, 'listID', 'geography').property(single, 'value', "UKK41")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKK41').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Plymouth").next()


g.V().hasId('_code_geography_UKK42').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKK42').property(single, 'listID', 'geography').property(single, 'value', "UKK42")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKK42').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Torbay").next()


g.V().hasId('_code_geography_UKK43').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKK43').property(single, 'listID', 'geography').property(single, 'value', "UKK43")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKK43').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Devon CC").next()


g.V().hasId('_code_geography_UKL11').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKL11').property(single, 'listID', 'geography').property(single, 'value', "UKL11")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKL11').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Isle of Anglesey").next()


g.V().hasId('_code_geography_UKL12').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKL12').property(single, 'listID', 'geography').property(single, 'value', "UKL12")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKL12').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Gwynedd").next()


g.V().hasId('_code_geography_UKL13').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKL13').property(single, 'listID', 'geography').property(single, 'value', "UKL13")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKL13').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Conwy and Denbighshire").next()


g.V().hasId('_code_geography_UKL14').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKL14').property(single, 'listID', 'geography').property(single, 'value', "UKL14")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKL14').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "South West Wales").next()


g.V().hasId('_code_geography_UKL15').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKL15').property(single, 'listID', 'geography').property(single, 'value', "UKL15")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKL15').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Central Valleys").next()


g.V().hasId('_code_geography_UKL16').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKL16').property(single, 'listID', 'geography').property(single, 'value', "UKL16")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKL16').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Gwent Valleys").next()


g.V().hasId('_code_geography_UKL17').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKL17').property(single, 'listID', 'geography').property(single, 'value', "UKL17")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKL17').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Bridgend and Neath Port Talbot").next()


g.V().hasId('_code_geography_UKL18').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKL18').property(single, 'listID', 'geography').property(single, 'value', "UKL18")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKL18').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Swansea").next()


g.V().hasId('_code_geography_UKL21').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKL21').property(single, 'listID', 'geography').property(single, 'value', "UKL21")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKL21').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Monmouthshire and Newport").next()


g.V().hasId('_code_geography_UKL22').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKL22').property(single, 'listID', 'geography').property(single, 'value', "UKL22")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKL22').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Cardiff and Vale of Glamorgan").next()


g.V().hasId('_code_geography_UKL23').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKL23').property(single, 'listID', 'geography').property(single, 'value', "UKL23")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKL23').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Flintshire and Wrexham").next()


g.V().hasId('_code_geography_UKL24').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKL24').property(single, 'listID', 'geography').property(single, 'value', "UKL24")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKL24').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Powys").next()


g.V().hasId('_code_geography_UKM50').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM50').property(single, 'listID', 'geography').property(single, 'value', "UKM50")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM50').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Aberdeen City and Aberdeenshire").next()


g.V().hasId('_code_geography_UKM61').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM61').property(single, 'listID', 'geography').property(single, 'value', "UKM61")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM61').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Caithness and Sutherland and Ross and Cromarty").next()


g.V().hasId('_code_geography_UKM62').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM62').property(single, 'listID', 'geography').property(single, 'value', "UKM62")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM62').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Inverness and Nairn and Moray, Badenoch and Strathspey").next()


g.V().hasId('_code_geography_UKM63').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM63').property(single, 'listID', 'geography').property(single, 'value', "UKM63")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM63').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Lochaber, Skye and Lochalsh, Arran and Cumbrae and Argyll and Bute").next()


g.V().hasId('_code_geography_UKM64').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM64').property(single, 'listID', 'geography').property(single, 'value', "UKM64")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM64').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Na h-Eileanan Siar").next()


g.V().hasId('_code_geography_UKM65').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM65').property(single, 'listID', 'geography').property(single, 'value', "UKM65")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM65').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Orkney Islands").next()


g.V().hasId('_code_geography_UKM66').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM66').property(single, 'listID', 'geography').property(single, 'value', "UKM66")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM66').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Shetland Islands").next()


g.V().hasId('_code_geography_UKM71').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM71').property(single, 'listID', 'geography').property(single, 'value', "UKM71")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM71').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Angus and Dundee City").next()


g.V().hasId('_code_geography_UKM72').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM72').property(single, 'listID', 'geography').property(single, 'value', "UKM72")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM72').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Clackmannanshire and Fife").next()


g.V().hasId('_code_geography_UKM73').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM73').property(single, 'listID', 'geography').property(single, 'value', "UKM73")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM73').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "East Lothian and Midlothian").next()


g.V().hasId('_code_geography_UKM75').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM75').property(single, 'listID', 'geography').property(single, 'value', "UKM75")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM75').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "City of Edinburgh").next()


g.V().hasId('_code_geography_UKM76').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM76').property(single, 'listID', 'geography').property(single, 'value', "UKM76")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM76').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Falkirk").next()


g.V().hasId('_code_geography_UKM77').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM77').property(single, 'listID', 'geography').property(single, 'value', "UKM77")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM77').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Perth and Kinross and Stirling").next()


g.V().hasId('_code_geography_UKM78').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM78').property(single, 'listID', 'geography').property(single, 'value', "UKM78")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM78').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "West Lothian").next()


g.V().hasId('_code_geography_UKM81').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM81').property(single, 'listID', 'geography').property(single, 'value', "UKM81")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM81').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "East Dunbartonshire, West Dunbartonshire and Helensburgh and Lomond").next()


g.V().hasId('_code_geography_UKM82').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM82').property(single, 'listID', 'geography').property(single, 'value', "UKM82")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM82').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Glasgow City").next()


g.V().hasId('_code_geography_UKM83').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM83').property(single, 'listID', 'geography').property(single, 'value', "UKM83")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM83').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Inverclyde, East Renfrewshire and Renfrewshire").next()


g.V().hasId('_code_geography_UKM84').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM84').property(single, 'listID', 'geography').property(single, 'value', "UKM84")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM84').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "North Lanarkshire").next()


g.V().hasId('_code_geography_UKM91').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM91').property(single, 'listID', 'geography').property(single, 'value', "UKM91")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM91').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Scottish Borders").next()


g.V().hasId('_code_geography_UKM92').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM92').property(single, 'listID', 'geography').property(single, 'value', "UKM92")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM92').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Dumfries and Galloway").next()


g.V().hasId('_code_geography_UKM93').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM93').property(single, 'listID', 'geography').property(single, 'value', "UKM93")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM93').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "East Ayrshire and North Ayrshire mainland").next()


g.V().hasId('_code_geography_UKM94').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM94').property(single, 'listID', 'geography').property(single, 'value', "UKM94")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM94').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "South Ayrshire").next()


g.V().hasId('_code_geography_UKM95').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM95').property(single, 'listID', 'geography').property(single, 'value', "UKM95")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM95').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "South Lanarkshire").next()


g.V().hasId('_code_geography_UKN06').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKN06').property(single, 'listID', 'geography').property(single, 'value', "UKN06")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKN06').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Belfast").next()


g.V().hasId('_code_geography_UKN07').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKN07').property(single, 'listID', 'geography').property(single, 'value', "UKN07")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKN07').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Armagh City, Banbridge and Craigavon").next()


g.V().hasId('_code_geography_UKN08').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKN08').property(single, 'listID', 'geography').property(single, 'value', "UKN08")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKN08').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Newry, Mourne and Down").next()


g.V().hasId('_code_geography_UKN09').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKN09').property(single, 'listID', 'geography').property(single, 'value', "UKN09")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKN09').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Ards and North Down").next()


g.V().hasId('_code_geography_UKN10').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKN10').property(single, 'listID', 'geography').property(single, 'value', "UKN10")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKN10').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Derry City and Strabane").next()


g.V().hasId('_code_geography_UKN11').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKN11').property(single, 'listID', 'geography').property(single, 'value', "UKN11")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKN11').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Mid Ulster").next()


g.V().hasId('_code_geography_UKN12').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKN12').property(single, 'listID', 'geography').property(single, 'value', "UKN12")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKN12').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Causeway Coast and Glens").next()


g.V().hasId('_code_geography_UKN13').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKN13').property(single, 'listID', 'geography').property(single, 'value', "UKN13")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKN13').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Antrim and Newtownabbey").next()


g.V().hasId('_code_geography_UKN14').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKN14').property(single, 'listID', 'geography').property(single, 'value', "UKN14")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKN14').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Lisburn and Castlereagh").next()


g.V().hasId('_code_geography_UKN15').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKN15').property(single, 'listID', 'geography').property(single, 'value', "UKN15")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKN15').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Mid and East Antrim").next()


g.V().hasId('_code_geography_UKN16').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKN16').property(single, 'listID', 'geography').property(single, 'value', "UKN16")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKN16').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Fermanagh and Omagh").next()


g.V().hasId('_code_geography_UKC1').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKC1').property(single, 'listID', 'geography').property(single, 'value', "UKC1")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKC1').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Tees Valley and Durham").next()


g.V().hasId('_code_geography_UKC2').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKC2').property(single, 'listID', 'geography').property(single, 'value', "UKC2")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKC2').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Northumberland and Tyne and Wear").next()


g.V().hasId('_code_geography_UKD1').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD1').property(single, 'listID', 'geography').property(single, 'value', "UKD1")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD1').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Cumbria").next()


g.V().hasId('_code_geography_UKD3').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD3').property(single, 'listID', 'geography').property(single, 'value', "UKD3")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD3').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Greater Manchester").next()


g.V().hasId('_code_geography_UKD4').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD4').property(single, 'listID', 'geography').property(single, 'value', "UKD4")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD4').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Lancashire").next()


g.V().hasId('_code_geography_UKD6').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD6').property(single, 'listID', 'geography').property(single, 'value', "UKD6")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD6').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Cheshire").next()


g.V().hasId('_code_geography_UKD7').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD7').property(single, 'listID', 'geography').property(single, 'value', "UKD7")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD7').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Merseyside").next()


g.V().hasId('_code_geography_UKE1').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKE1').property(single, 'listID', 'geography').property(single, 'value', "UKE1")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKE1').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "East Yorkshire and Northern Lincolnshire").next()


g.V().hasId('_code_geography_UKE2').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKE2').property(single, 'listID', 'geography').property(single, 'value', "UKE2")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKE2').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "North Yorkshire").next()


g.V().hasId('_code_geography_UKE3').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKE3').property(single, 'listID', 'geography').property(single, 'value', "UKE3")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKE3').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "South Yorkshire").next()


g.V().hasId('_code_geography_UKE4').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKE4').property(single, 'listID', 'geography').property(single, 'value', "UKE4")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKE4').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "West Yorkshire").next()


g.V().hasId('_code_geography_UKF1').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKF1').property(single, 'listID', 'geography').property(single, 'value', "UKF1")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKF1').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Derbyshire and Nottinghamshire").next()


g.V().hasId('_code_geography_UKF2').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKF2').property(single, 'listID', 'geography').property(single, 'value', "UKF2")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKF2').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Leicestershire, Rutland and Northamptonshire").next()


g.V().hasId('_code_geography_UKF3').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKF3').property(single, 'listID', 'geography').property(single, 'value', "UKF3")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKF3').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Lincolnshire").next()


g.V().hasId('_code_geography_UKG1').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKG1').property(single, 'listID', 'geography').property(single, 'value', "UKG1")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKG1').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Herefordshire, Worcestershire and Warwickshire").next()


g.V().hasId('_code_geography_UKG2').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKG2').property(single, 'listID', 'geography').property(single, 'value', "UKG2")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKG2').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Shropshire and Staffordshire").next()


g.V().hasId('_code_geography_UKG3').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKG3').property(single, 'listID', 'geography').property(single, 'value', "UKG3")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKG3').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "West Midlands").next()


g.V().hasId('_code_geography_UKH1').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKH1').property(single, 'listID', 'geography').property(single, 'value', "UKH1")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKH1').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "East Anglia").next()


g.V().hasId('_code_geography_UKH2').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKH2').property(single, 'listID', 'geography').property(single, 'value', "UKH2")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKH2').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Bedfordshire and Hertfordshire").next()


g.V().hasId('_code_geography_UKH3').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKH3').property(single, 'listID', 'geography').property(single, 'value', "UKH3")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKH3').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Essex").next()


g.V().hasId('_code_geography_UKI3').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI3').property(single, 'listID', 'geography').property(single, 'value', "UKI3")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI3').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Inner London - West").next()


g.V().hasId('_code_geography_UKI4').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI4').property(single, 'listID', 'geography').property(single, 'value', "UKI4")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI4').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Inner London - East").next()


g.V().hasId('_code_geography_UKI5').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI5').property(single, 'listID', 'geography').property(single, 'value', "UKI5")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI5').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Outer London - East and North East").next()


g.V().hasId('_code_geography_UKI6').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI6').property(single, 'listID', 'geography').property(single, 'value', "UKI6")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI6').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Outer London - South").next()


g.V().hasId('_code_geography_UKI7').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI7').property(single, 'listID', 'geography').property(single, 'value', "UKI7")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI7').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Outer London - West and North West").next()


g.V().hasId('_code_geography_UKJ1').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ1').property(single, 'listID', 'geography').property(single, 'value', "UKJ1")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ1').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Berkshire, Buckinghamshire and Oxfordshire").next()


g.V().hasId('_code_geography_UKJ2').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ2').property(single, 'listID', 'geography').property(single, 'value', "UKJ2")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ2').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Surrey, East and West Sussex").next()


g.V().hasId('_code_geography_UKJ3').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ3').property(single, 'listID', 'geography').property(single, 'value', "UKJ3")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ3').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Hampshire and Isle of Wight").next()


g.V().hasId('_code_geography_UKJ4').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ4').property(single, 'listID', 'geography').property(single, 'value', "UKJ4")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ4').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Kent").next()


g.V().hasId('_code_geography_UKK1').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKK1').property(single, 'listID', 'geography').property(single, 'value', "UKK1")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKK1').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Gloucestershire, Wiltshire and Bath/Bristol area").next()


g.V().hasId('_code_geography_UKK2').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKK2').property(single, 'listID', 'geography').property(single, 'value', "UKK2")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKK2').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Dorset and Somerset").next()


g.V().hasId('_code_geography_UKK3').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKK3').property(single, 'listID', 'geography').property(single, 'value', "UKK3")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKK3').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Cornwall and Isles of Scilly").next()


g.V().hasId('_code_geography_UKK4').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKK4').property(single, 'listID', 'geography').property(single, 'value', "UKK4")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKK4').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Devon").next()


g.V().hasId('_code_geography_UKL1').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKL1').property(single, 'listID', 'geography').property(single, 'value', "UKL1")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKL1').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "West Wales and The Valleys").next()


g.V().hasId('_code_geography_UKL2').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKL2').property(single, 'listID', 'geography').property(single, 'value', "UKL2")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKL2').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "East Wales").next()


g.V().hasId('_code_geography_UKM5').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM5').property(single, 'listID', 'geography').property(single, 'value', "UKM5")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM5').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "North Eastern Scotland").next()


g.V().hasId('_code_geography_UKM6').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM6').property(single, 'listID', 'geography').property(single, 'value', "UKM6")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM6').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Highlands and Islands").next()


g.V().hasId('_code_geography_UKM7').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM7').property(single, 'listID', 'geography').property(single, 'value', "UKM7")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM7').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Eastern Scotland").next()


g.V().hasId('_code_geography_UKM8').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM8').property(single, 'listID', 'geography').property(single, 'value', "UKM8")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM8').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "West Central Scotland").next()


g.V().hasId('_code_geography_UKM9').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM9').property(single, 'listID', 'geography').property(single, 'value', "UKM9")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM9').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Southern Scotland").next()


g.V().hasId('_code_geography_UKN0').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKN0').property(single, 'listID', 'geography').property(single, 'value', "UKN0")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKN0').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Northern Ireland").next()


g.V().hasId('_code_geography_UKC').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKC').property(single, 'listID', 'geography').property(single, 'value', "UKC")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKC').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "North East").next()


g.V().hasId('_code_geography_UKD').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKD').property(single, 'listID', 'geography').property(single, 'value', "UKD")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKD').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "North West").next()


g.V().hasId('_code_geography_UKE').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKE').property(single, 'listID', 'geography').property(single, 'value', "UKE")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKE').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Yorkshire and The Humber").next()


g.V().hasId('_code_geography_UKF').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKF').property(single, 'listID', 'geography').property(single, 'value', "UKF")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKF').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "East Midlands").next()


g.V().hasId('_code_geography_UKG').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKG').property(single, 'listID', 'geography').property(single, 'value', "UKG")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKG').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "West Midlands").next()


g.V().hasId('_code_geography_UKH').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKH').property(single, 'listID', 'geography').property(single, 'value', "UKH")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKH').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "East of England").next()


g.V().hasId('_code_geography_UKI').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKI').property(single, 'listID', 'geography').property(single, 'value', "UKI")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKI').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "London").next()


g.V().hasId('_code_geography_UKJ').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKJ').property(single, 'listID', 'geography').property(single, 'value', "UKJ")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKJ').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "South East").next()


g.V().hasId('_code_geography_UKK').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKK').property(single, 'listID', 'geography').property(single, 'value', "UKK")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKK').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "South West").next()


g.V().hasId('_code_geography_UKL').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKL').property(single, 'listID', 'geography').property(single, 'value', "UKL")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKL').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Wales").next()


g.V().hasId('_code_geography_UKM').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKM').property(single, 'listID', 'geography').property(single, 'value', "UKM")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKM').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Scotland").next()


g.V().hasId('_code_geography_UKN').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKN').property(single, 'listID', 'geography').property(single, 'value', "UKN")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKN').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Northern Ireland").next()


g.V().hasId('_code_geography_UK').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UK').property(single, 'listID', 'geography').property(single, 'value', "UK")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UK').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "United Kingdom").next()


g.V().hasId('_code_geography_UKZ').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKZ').property(single, 'listID', 'geography').property(single, 'value', "UKZ")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKZ').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "Extra-regio").next()


g.V().hasId('_code_geography_UK0').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UK0').property(single, 'listID', 'geography').property(single, 'value', "UK0")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UK0').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "England").next()


g.V().hasId('_code_geography_UKX').
  fold().coalesce(unfold(), addV('_code').
    property(id, '_code_geography_UKX').property(single, 'listID', 'geography').property(single, 'value', "UKX")
  ).next()
  g.V().hasId('_code_list_nuts_one-off').as('codeList').V().hasId('_code_geography_UKX').as('code').
    coalesce(__.outE('usedBy').where(inV().as('codeList')),
       addE('usedBy').to('codeList')).property('label', "UK less extra-regio").next()

