

g.V().has('_code_list', 'listID', 'regions').has('edition', '2017').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "regions").
    property(single, 'geography', true).
    property(single, 'geography_list_ID', "rgn17").
    property(single, 'label', "Regions").
    property(single, 'edition', "2017")
  ).next()




g.V().has('_code','listID', 'geography').has('value', "E12000001").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E12000001")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E12000001").as('code').
  V().has('_code_list', 'listID', 'regions').has('edition', "2017").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North East").next()




g.V().has('_code','listID', 'geography').has('value', "E12000002").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E12000002")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E12000002").as('code').
  V().has('_code_list', 'listID', 'regions').has('edition', "2017").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North West").next()




g.V().has('_code','listID', 'geography').has('value', "E12000003").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E12000003")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E12000003").as('code').
  V().has('_code_list', 'listID', 'regions').has('edition', "2017").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Yorkshire and The Humber").next()




g.V().has('_code','listID', 'geography').has('value', "E12000004").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E12000004")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E12000004").as('code').
  V().has('_code_list', 'listID', 'regions').has('edition', "2017").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "East Midlands").next()




g.V().has('_code','listID', 'geography').has('value', "E12000005").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E12000005")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E12000005").as('code').
  V().has('_code_list', 'listID', 'regions').has('edition', "2017").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "West Midlands").next()




g.V().has('_code','listID', 'geography').has('value', "E12000006").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E12000006")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E12000006").as('code').
  V().has('_code_list', 'listID', 'regions').has('edition', "2017").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "East of England").next()




g.V().has('_code','listID', 'geography').has('value', "E12000007").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E12000007")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E12000007").as('code').
  V().has('_code_list', 'listID', 'regions').has('edition', "2017").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "London").next()




g.V().has('_code','listID', 'geography').has('value', "E12000008").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E12000008")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E12000008").as('code').
  V().has('_code_list', 'listID', 'regions').has('edition', "2017").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South East").next()




g.V().has('_code','listID', 'geography').has('value', "E12000009").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E12000009")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E12000009").as('code').
  V().has('_code_list', 'listID', 'regions').has('edition', "2017").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South West").next()

