

g.V().has('_code_list', 'listID', 'countries').has('edition', '2017').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "countries").
    property(single, 'geography', true).
    property(single, 'label', "Countries").
    property(single, 'edition', "2017").
    property(single, 'geography_list_ID', "ctry17")
  ).next()




g.V().has('_code','listID', 'geography').has('value', "E92000001").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E92000001")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E92000001").as('code').
  V().has('_code_list', 'listID', 'countries').has('edition', "2017").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "England").next()




g.V().has('_code','listID', 'geography').has('value', "K02000001").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "K02000001")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "K02000001").as('code').
  V().has('_code_list', 'listID', 'countries').has('edition', "2017").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "United Kingdom").next()




g.V().has('_code','listID', 'geography').has('value', "K03000001").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "K03000001")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "K03000001").as('code').
  V().has('_code_list', 'listID', 'countries').has('edition', "2017").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Great Britain").next()




g.V().has('_code','listID', 'geography').has('value', "K04000001").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "K04000001")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "K04000001").as('code').
  V().has('_code_list', 'listID', 'countries').has('edition', "2017").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "England and Wales").next()




g.V().has('_code','listID', 'geography').has('value', "N92000002").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "N92000002")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "N92000002").as('code').
  V().has('_code_list', 'listID', 'countries').has('edition', "2017").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Northern Ireland").next()




g.V().has('_code','listID', 'geography').has('value', "S92000003").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S92000003")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S92000003").as('code').
  V().has('_code_list', 'listID', 'countries').has('edition', "2017").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Scotland").next()




g.V().has('_code','listID', 'geography').has('value', "W92000004").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W92000004")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W92000004").as('code').
  V().has('_code_list', 'listID', 'countries').has('edition', "2017").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wales").next()

