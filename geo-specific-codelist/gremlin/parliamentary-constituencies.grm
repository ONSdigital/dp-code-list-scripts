

g.V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', 'one-off').
  fold().coalesce(unfold(), addV('_code_list').
    property(single, 'listID', "parliamentary-constituencies").
    property(single, 'geography', true).
    property(single, 'label', "Geography").
    property(single, 'edition', "one-off")
  ).next()


g.V().has('_code','listID', 'geography').has('value', "E14000530").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000530")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000530").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Aldershot").next()


g.V().has('_code','listID', 'geography').has('value', "E14000531").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000531")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000531").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Aldridge-Brownhills").next()


g.V().has('_code','listID', 'geography').has('value', "E14000532").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000532")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000532").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Altrincham and Sale West").next()


g.V().has('_code','listID', 'geography').has('value', "E14000533").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000533")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000533").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Amber Valley").next()


g.V().has('_code','listID', 'geography').has('value', "E14000534").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000534")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000534").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Arundel and South Downs").next()


g.V().has('_code','listID', 'geography').has('value', "E14000535").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000535")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000535").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Ashfield").next()


g.V().has('_code','listID', 'geography').has('value', "E14000536").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000536")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000536").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Ashford").next()


g.V().has('_code','listID', 'geography').has('value', "E14000537").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000537")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000537").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Ashton-under-Lyne").next()


g.V().has('_code','listID', 'geography').has('value', "E14000538").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000538")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000538").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Aylesbury").next()


g.V().has('_code','listID', 'geography').has('value', "E14000539").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000539")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000539").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Banbury").next()


g.V().has('_code','listID', 'geography').has('value', "E14000540").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000540")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000540").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Barking").next()


g.V().has('_code','listID', 'geography').has('value', "E14000541").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000541")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000541").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Barnsley Central").next()


g.V().has('_code','listID', 'geography').has('value', "E14000542").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000542")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000542").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Barnsley East").next()


g.V().has('_code','listID', 'geography').has('value', "E14000543").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000543")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000543").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Barrow and Furness").next()


g.V().has('_code','listID', 'geography').has('value', "E14000544").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000544")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000544").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Basildon and Billericay").next()


g.V().has('_code','listID', 'geography').has('value', "E14000545").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000545")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000545").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Basingstoke").next()


g.V().has('_code','listID', 'geography').has('value', "E14000546").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000546")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000546").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bassetlaw").next()


g.V().has('_code','listID', 'geography').has('value', "E14000547").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000547")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000547").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bath").next()


g.V().has('_code','listID', 'geography').has('value', "E14000548").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000548")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000548").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Batley and Spen").next()


g.V().has('_code','listID', 'geography').has('value', "E14000549").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000549")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000549").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Battersea").next()


g.V().has('_code','listID', 'geography').has('value', "E14000550").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000550")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000550").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Beaconsfield").next()


g.V().has('_code','listID', 'geography').has('value', "E14000551").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000551")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000551").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Beckenham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000552").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000552")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000552").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bedford").next()


g.V().has('_code','listID', 'geography').has('value', "E14000553").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000553")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000553").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bermondsey and Old Southwark").next()


g.V().has('_code','listID', 'geography').has('value', "E14000554").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000554")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000554").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Berwick-upon-Tweed").next()


g.V().has('_code','listID', 'geography').has('value', "E14000555").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000555")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000555").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bethnal Green and Bow").next()


g.V().has('_code','listID', 'geography').has('value', "E14000556").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000556")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000556").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Beverley and Holderness").next()


g.V().has('_code','listID', 'geography').has('value', "E14000557").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000557")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000557").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bexhill and Battle").next()


g.V().has('_code','listID', 'geography').has('value', "E14000558").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000558")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000558").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bexleyheath and Crayford").next()


g.V().has('_code','listID', 'geography').has('value', "E14000559").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000559")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000559").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Birkenhead").next()


g.V().has('_code','listID', 'geography').has('value', "E14000560").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000560")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000560").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Birmingham, Edgbaston").next()


g.V().has('_code','listID', 'geography').has('value', "E14000561").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000561")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000561").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Birmingham, Erdington").next()


g.V().has('_code','listID', 'geography').has('value', "E14000562").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000562")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000562").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Birmingham, Hall Green").next()


g.V().has('_code','listID', 'geography').has('value', "E14000563").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000563")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000563").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Birmingham, Hodge Hill").next()


g.V().has('_code','listID', 'geography').has('value', "E14000564").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000564")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000564").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Birmingham, Ladywood").next()


g.V().has('_code','listID', 'geography').has('value', "E14000565").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000565")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000565").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Birmingham, Northfield").next()


g.V().has('_code','listID', 'geography').has('value', "E14000566").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000566")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000566").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Birmingham, Perry Barr").next()


g.V().has('_code','listID', 'geography').has('value', "E14000567").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000567")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000567").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Birmingham, Selly Oak").next()


g.V().has('_code','listID', 'geography').has('value', "E14000568").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000568")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000568").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Birmingham, Yardley").next()


g.V().has('_code','listID', 'geography').has('value', "E14000569").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000569")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000569").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bishop Auckland").next()


g.V().has('_code','listID', 'geography').has('value', "E14000570").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000570")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000570").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Blackburn").next()


g.V().has('_code','listID', 'geography').has('value', "E14000571").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000571")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000571").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Blackley and Broughton").next()


g.V().has('_code','listID', 'geography').has('value', "E14000572").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000572")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000572").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Blackpool North and Cleveleys").next()


g.V().has('_code','listID', 'geography').has('value', "E14000573").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000573")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000573").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Blackpool South").next()


g.V().has('_code','listID', 'geography').has('value', "E14000574").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000574")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000574").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Blaydon").next()


g.V().has('_code','listID', 'geography').has('value', "E14000575").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000575")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000575").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Blyth Valley").next()


g.V().has('_code','listID', 'geography').has('value', "E14000576").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000576")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000576").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bognor Regis and Littlehampton").next()


g.V().has('_code','listID', 'geography').has('value', "E14000577").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000577")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000577").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bolsover").next()


g.V().has('_code','listID', 'geography').has('value', "E14000578").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000578")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000578").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bolton North East").next()


g.V().has('_code','listID', 'geography').has('value', "E14000579").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000579")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000579").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bolton South East").next()


g.V().has('_code','listID', 'geography').has('value', "E14000580").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000580")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000580").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bolton West").next()


g.V().has('_code','listID', 'geography').has('value', "E14000581").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000581")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000581").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bootle").next()


g.V().has('_code','listID', 'geography').has('value', "E14000582").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000582")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000582").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Boston and Skegness").next()


g.V().has('_code','listID', 'geography').has('value', "E14000583").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000583")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000583").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bosworth").next()


g.V().has('_code','listID', 'geography').has('value', "E14000584").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000584")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000584").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bournemouth East").next()


g.V().has('_code','listID', 'geography').has('value', "E14000585").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000585")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000585").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bournemouth West").next()


g.V().has('_code','listID', 'geography').has('value', "E14000586").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000586")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000586").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bracknell").next()


g.V().has('_code','listID', 'geography').has('value', "E14000587").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000587")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000587").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bradford East").next()


g.V().has('_code','listID', 'geography').has('value', "E14000588").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000588")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000588").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bradford South").next()


g.V().has('_code','listID', 'geography').has('value', "E14000589").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000589")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000589").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bradford West").next()


g.V().has('_code','listID', 'geography').has('value', "E14000590").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000590")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000590").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Braintree").next()


g.V().has('_code','listID', 'geography').has('value', "E14000591").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000591")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000591").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Brent Central").next()


g.V().has('_code','listID', 'geography').has('value', "E14000592").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000592")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000592").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Brent North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000593").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000593")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000593").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Brentford and Isleworth").next()


g.V().has('_code','listID', 'geography').has('value', "E14000594").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000594")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000594").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Brentwood and Ongar").next()


g.V().has('_code','listID', 'geography').has('value', "E14000595").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000595")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000595").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bridgwater and West Somerset").next()


g.V().has('_code','listID', 'geography').has('value', "E14000596").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000596")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000596").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Brigg and Goole").next()


g.V().has('_code','listID', 'geography').has('value', "E14000597").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000597")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000597").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Brighton, Kemptown").next()


g.V().has('_code','listID', 'geography').has('value', "E14000598").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000598")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000598").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Brighton, Pavilion").next()


g.V().has('_code','listID', 'geography').has('value', "E14000599").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000599")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000599").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bristol East").next()


g.V().has('_code','listID', 'geography').has('value', "E14000600").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000600")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000600").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bristol North West").next()


g.V().has('_code','listID', 'geography').has('value', "E14000601").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000601")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000601").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bristol South").next()


g.V().has('_code','listID', 'geography').has('value', "E14000602").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000602")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000602").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bristol West").next()


g.V().has('_code','listID', 'geography').has('value', "E14000603").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000603")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000603").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Broadland").next()


g.V().has('_code','listID', 'geography').has('value', "E14000604").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000604")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000604").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bromley and Chislehurst").next()


g.V().has('_code','listID', 'geography').has('value', "E14000605").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000605")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000605").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bromsgrove").next()


g.V().has('_code','listID', 'geography').has('value', "E14000606").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000606")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000606").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Broxbourne").next()


g.V().has('_code','listID', 'geography').has('value', "E14000607").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000607")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000607").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Broxtowe").next()


g.V().has('_code','listID', 'geography').has('value', "E14000608").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000608")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000608").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Buckingham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000609").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000609")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000609").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Burnley").next()


g.V().has('_code','listID', 'geography').has('value', "E14000610").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000610")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000610").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Burton").next()


g.V().has('_code','listID', 'geography').has('value', "E14000611").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000611")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000611").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bury North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000612").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000612")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000612").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bury South").next()


g.V().has('_code','listID', 'geography').has('value', "E14000613").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000613")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000613").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bury St Edmunds").next()


g.V().has('_code','listID', 'geography').has('value', "E14000614").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000614")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000614").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Calder Valley").next()


g.V().has('_code','listID', 'geography').has('value', "E14000615").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000615")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000615").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Camberwell and Peckham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000616").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000616")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000616").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Camborne and Redruth").next()


g.V().has('_code','listID', 'geography').has('value', "E14000617").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000617")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000617").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Cambridge").next()


g.V().has('_code','listID', 'geography').has('value', "E14000618").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000618")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000618").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Cannock Chase").next()


g.V().has('_code','listID', 'geography').has('value', "E14000619").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000619")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000619").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Canterbury").next()


g.V().has('_code','listID', 'geography').has('value', "E14000620").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000620")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000620").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Carlisle").next()


g.V().has('_code','listID', 'geography').has('value', "E14000621").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000621")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000621").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Carshalton and Wallington").next()


g.V().has('_code','listID', 'geography').has('value', "E14000622").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000622")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000622").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Castle Point").next()


g.V().has('_code','listID', 'geography').has('value', "E14000623").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000623")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000623").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Central Devon").next()


g.V().has('_code','listID', 'geography').has('value', "E14000624").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000624")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000624").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Central Suffolk and North Ipswich").next()


g.V().has('_code','listID', 'geography').has('value', "E14000625").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000625")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000625").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Charnwood").next()


g.V().has('_code','listID', 'geography').has('value', "E14000626").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000626")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000626").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Chatham and Aylesford").next()


g.V().has('_code','listID', 'geography').has('value', "E14000627").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000627")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000627").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Cheadle").next()


g.V().has('_code','listID', 'geography').has('value', "E14000628").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000628")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000628").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Chelmsford").next()


g.V().has('_code','listID', 'geography').has('value', "E14000629").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000629")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000629").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Chelsea and Fulham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000630").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000630")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000630").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Cheltenham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000631").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000631")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000631").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Chesham and Amersham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000632").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000632")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000632").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Chesterfield").next()


g.V().has('_code','listID', 'geography').has('value', "E14000633").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000633")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000633").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Chichester").next()


g.V().has('_code','listID', 'geography').has('value', "E14000634").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000634")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000634").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Chingford and Woodford Green").next()


g.V().has('_code','listID', 'geography').has('value', "E14000635").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000635")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000635").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Chippenham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000636").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000636")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000636").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Chipping Barnet").next()


g.V().has('_code','listID', 'geography').has('value', "E14000637").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000637")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000637").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Chorley").next()


g.V().has('_code','listID', 'geography').has('value', "E14000638").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000638")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000638").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Christchurch").next()


g.V().has('_code','listID', 'geography').has('value', "E14000639").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000639")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000639").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Cities of London and Westminster").next()


g.V().has('_code','listID', 'geography').has('value', "E14000640").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000640")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000640").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "City of Chester").next()


g.V().has('_code','listID', 'geography').has('value', "E14000641").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000641")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000641").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "City of Durham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000642").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000642")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000642").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Clacton").next()


g.V().has('_code','listID', 'geography').has('value', "E14000643").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000643")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000643").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Cleethorpes").next()


g.V().has('_code','listID', 'geography').has('value', "E14000644").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000644")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000644").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Colchester").next()


g.V().has('_code','listID', 'geography').has('value', "E14000645").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000645")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000645").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Colne Valley").next()


g.V().has('_code','listID', 'geography').has('value', "E14000646").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000646")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000646").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Congleton").next()


g.V().has('_code','listID', 'geography').has('value', "E14000647").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000647")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000647").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Copeland").next()


g.V().has('_code','listID', 'geography').has('value', "E14000648").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000648")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000648").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Corby").next()


g.V().has('_code','listID', 'geography').has('value', "E14000649").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000649")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000649").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Coventry North East").next()


g.V().has('_code','listID', 'geography').has('value', "E14000650").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000650")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000650").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Coventry North West").next()


g.V().has('_code','listID', 'geography').has('value', "E14000651").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000651")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000651").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Coventry South").next()


g.V().has('_code','listID', 'geography').has('value', "E14000652").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000652")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000652").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Crawley").next()


g.V().has('_code','listID', 'geography').has('value', "E14000653").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000653")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000653").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Crewe and Nantwich").next()


g.V().has('_code','listID', 'geography').has('value', "E14000654").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000654")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000654").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Croydon Central").next()


g.V().has('_code','listID', 'geography').has('value', "E14000655").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000655")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000655").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Croydon North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000656").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000656")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000656").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Croydon South").next()


g.V().has('_code','listID', 'geography').has('value', "E14000657").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000657")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000657").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Dagenham and Rainham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000658").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000658")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000658").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Darlington").next()


g.V().has('_code','listID', 'geography').has('value', "E14000659").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000659")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000659").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Dartford").next()


g.V().has('_code','listID', 'geography').has('value', "E14000660").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000660")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000660").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Daventry").next()


g.V().has('_code','listID', 'geography').has('value', "E14000661").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000661")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000661").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Denton and Reddish").next()


g.V().has('_code','listID', 'geography').has('value', "E14000662").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000662")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000662").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Derby North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000663").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000663")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000663").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Derby South").next()


g.V().has('_code','listID', 'geography').has('value', "E14000664").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000664")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000664").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Derbyshire Dales").next()


g.V().has('_code','listID', 'geography').has('value', "E14000665").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000665")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000665").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Devizes").next()


g.V().has('_code','listID', 'geography').has('value', "E14000666").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000666")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000666").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Dewsbury").next()


g.V().has('_code','listID', 'geography').has('value', "E14000667").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000667")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000667").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Don Valley").next()


g.V().has('_code','listID', 'geography').has('value', "E14000668").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000668")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000668").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Doncaster Central").next()


g.V().has('_code','listID', 'geography').has('value', "E14000669").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000669")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000669").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Doncaster North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000670").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000670")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000670").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Dover").next()


g.V().has('_code','listID', 'geography').has('value', "E14000671").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000671")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000671").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Dudley North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000672").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000672")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000672").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Dudley South").next()


g.V().has('_code','listID', 'geography').has('value', "E14000673").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000673")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000673").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Dulwich and West Norwood").next()


g.V().has('_code','listID', 'geography').has('value', "E14000674").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000674")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000674").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Ealing Central and Acton").next()


g.V().has('_code','listID', 'geography').has('value', "E14000675").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000675")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000675").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Ealing North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000676").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000676")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000676").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Ealing, Southall").next()


g.V().has('_code','listID', 'geography').has('value', "E14000677").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000677")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000677").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Easington").next()


g.V().has('_code','listID', 'geography').has('value', "E14000678").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000678")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000678").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "East Devon").next()


g.V().has('_code','listID', 'geography').has('value', "E14000679").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000679")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000679").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "East Ham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000680").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000680")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000680").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "East Hampshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000681").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000681")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000681").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "East Surrey").next()


g.V().has('_code','listID', 'geography').has('value', "E14000682").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000682")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000682").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "East Worthing and Shoreham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000683").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000683")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000683").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "East Yorkshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000684").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000684")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000684").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Eastbourne").next()


g.V().has('_code','listID', 'geography').has('value', "E14000685").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000685")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000685").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Eastleigh").next()


g.V().has('_code','listID', 'geography').has('value', "E14000686").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000686")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000686").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Eddisbury").next()


g.V().has('_code','listID', 'geography').has('value', "E14000687").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000687")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000687").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Edmonton").next()


g.V().has('_code','listID', 'geography').has('value', "E14000688").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000688")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000688").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Ellesmere Port and Neston").next()


g.V().has('_code','listID', 'geography').has('value', "E14000689").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000689")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000689").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Elmet and Rothwell").next()


g.V().has('_code','listID', 'geography').has('value', "E14000690").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000690")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000690").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Eltham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000691").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000691")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000691").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Enfield North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000692").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000692")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000692").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Enfield, Southgate").next()


g.V().has('_code','listID', 'geography').has('value', "E14000693").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000693")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000693").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Epping Forest").next()


g.V().has('_code','listID', 'geography').has('value', "E14000694").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000694")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000694").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Epsom and Ewell").next()


g.V().has('_code','listID', 'geography').has('value', "E14000695").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000695")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000695").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Erewash").next()


g.V().has('_code','listID', 'geography').has('value', "E14000696").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000696")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000696").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Erith and Thamesmead").next()


g.V().has('_code','listID', 'geography').has('value', "E14000697").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000697")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000697").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Esher and Walton").next()


g.V().has('_code','listID', 'geography').has('value', "E14000698").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000698")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000698").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Exeter").next()


g.V().has('_code','listID', 'geography').has('value', "E14000699").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000699")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000699").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Fareham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000700").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000700")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000700").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Faversham and Mid Kent").next()


g.V().has('_code','listID', 'geography').has('value', "E14000701").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000701")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000701").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Feltham and Heston").next()


g.V().has('_code','listID', 'geography').has('value', "E14000702").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000702")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000702").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Filton and Bradley Stoke").next()


g.V().has('_code','listID', 'geography').has('value', "E14000703").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000703")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000703").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Finchley and Golders Green").next()


g.V().has('_code','listID', 'geography').has('value', "E14000704").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000704")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000704").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Folkestone and Hythe").next()


g.V().has('_code','listID', 'geography').has('value', "E14000705").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000705")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000705").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Forest of Dean").next()


g.V().has('_code','listID', 'geography').has('value', "E14000706").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000706")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000706").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Fylde").next()


g.V().has('_code','listID', 'geography').has('value', "E14000707").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000707")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000707").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Gainsborough").next()


g.V().has('_code','listID', 'geography').has('value', "E14000708").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000708")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000708").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Garston and Halewood").next()


g.V().has('_code','listID', 'geography').has('value', "E14000709").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000709")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000709").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Gateshead").next()


g.V().has('_code','listID', 'geography').has('value', "E14000710").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000710")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000710").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Gedling").next()


g.V().has('_code','listID', 'geography').has('value', "E14000711").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000711")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000711").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Gillingham and Rainham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000712").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000712")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000712").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Gloucester").next()


g.V().has('_code','listID', 'geography').has('value', "E14000713").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000713")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000713").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Gosport").next()


g.V().has('_code','listID', 'geography').has('value', "E14000714").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000714")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000714").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Grantham and Stamford").next()


g.V().has('_code','listID', 'geography').has('value', "E14000715").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000715")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000715").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Gravesham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000716").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000716")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000716").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Great Grimsby").next()


g.V().has('_code','listID', 'geography').has('value', "E14000717").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000717")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000717").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Great Yarmouth").next()


g.V().has('_code','listID', 'geography').has('value', "E14000718").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000718")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000718").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Greenwich and Woolwich").next()


g.V().has('_code','listID', 'geography').has('value', "E14000719").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000719")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000719").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Guildford").next()


g.V().has('_code','listID', 'geography').has('value', "E14000720").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000720")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000720").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hackney North and Stoke Newington").next()


g.V().has('_code','listID', 'geography').has('value', "E14000721").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000721")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000721").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hackney South and Shoreditch").next()


g.V().has('_code','listID', 'geography').has('value', "E14000722").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000722")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000722").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Halesowen and Rowley Regis").next()


g.V().has('_code','listID', 'geography').has('value', "E14000723").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000723")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000723").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Halifax").next()


g.V().has('_code','listID', 'geography').has('value', "E14000724").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000724")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000724").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Haltemprice and Howden").next()


g.V().has('_code','listID', 'geography').has('value', "E14000725").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000725")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000725").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Halton").next()


g.V().has('_code','listID', 'geography').has('value', "E14000726").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000726")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000726").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hammersmith").next()


g.V().has('_code','listID', 'geography').has('value', "E14000727").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000727")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000727").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hampstead and Kilburn").next()


g.V().has('_code','listID', 'geography').has('value', "E14000728").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000728")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000728").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Harborough").next()


g.V().has('_code','listID', 'geography').has('value', "E14000729").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000729")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000729").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Harlow").next()


g.V().has('_code','listID', 'geography').has('value', "E14000730").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000730")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000730").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Harrogate and Knaresborough").next()


g.V().has('_code','listID', 'geography').has('value', "E14000731").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000731")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000731").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Harrow East").next()


g.V().has('_code','listID', 'geography').has('value', "E14000732").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000732")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000732").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Harrow West").next()


g.V().has('_code','listID', 'geography').has('value', "E14000733").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000733")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000733").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hartlepool").next()


g.V().has('_code','listID', 'geography').has('value', "E14000734").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000734")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000734").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Harwich and North Essex").next()


g.V().has('_code','listID', 'geography').has('value', "E14000735").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000735")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000735").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hastings and Rye").next()


g.V().has('_code','listID', 'geography').has('value', "E14000736").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000736")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000736").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Havant").next()


g.V().has('_code','listID', 'geography').has('value', "E14000737").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000737")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000737").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hayes and Harlington").next()


g.V().has('_code','listID', 'geography').has('value', "E14000738").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000738")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000738").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hazel Grove").next()


g.V().has('_code','listID', 'geography').has('value', "E14000739").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000739")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000739").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hemel Hempstead").next()


g.V().has('_code','listID', 'geography').has('value', "E14000740").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000740")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000740").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hemsworth").next()


g.V().has('_code','listID', 'geography').has('value', "E14000741").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000741")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000741").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hendon").next()


g.V().has('_code','listID', 'geography').has('value', "E14000742").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000742")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000742").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Henley").next()


g.V().has('_code','listID', 'geography').has('value', "E14000743").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000743")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000743").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hereford and South Herefordshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000744").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000744")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000744").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hertford and Stortford").next()


g.V().has('_code','listID', 'geography').has('value', "E14000745").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000745")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000745").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hertsmere").next()


g.V().has('_code','listID', 'geography').has('value', "E14000746").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000746")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000746").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hexham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000747").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000747")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000747").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Heywood and Middleton").next()


g.V().has('_code','listID', 'geography').has('value', "E14000748").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000748")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000748").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "High Peak").next()


g.V().has('_code','listID', 'geography').has('value', "E14000749").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000749")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000749").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hitchin and Harpenden").next()


g.V().has('_code','listID', 'geography').has('value', "E14000750").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000750")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000750").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Holborn and St Pancras").next()


g.V().has('_code','listID', 'geography').has('value', "E14000751").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000751")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000751").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hornchurch and Upminster").next()


g.V().has('_code','listID', 'geography').has('value', "E14000752").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000752")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000752").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hornsey and Wood Green").next()


g.V().has('_code','listID', 'geography').has('value', "E14000753").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000753")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000753").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Horsham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000754").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000754")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000754").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Houghton and Sunderland South").next()


g.V().has('_code','listID', 'geography').has('value', "E14000755").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000755")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000755").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hove").next()


g.V().has('_code','listID', 'geography').has('value', "E14000756").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000756")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000756").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Huddersfield").next()


g.V().has('_code','listID', 'geography').has('value', "E14000757").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000757")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000757").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Huntingdon").next()


g.V().has('_code','listID', 'geography').has('value', "E14000758").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000758")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000758").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Hyndburn").next()


g.V().has('_code','listID', 'geography').has('value', "E14000759").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000759")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000759").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Ilford North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000760").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000760")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000760").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Ilford South").next()


g.V().has('_code','listID', 'geography').has('value', "E14000761").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000761")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000761").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Ipswich").next()


g.V().has('_code','listID', 'geography').has('value', "E14000762").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000762")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000762").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Isle of Wight").next()


g.V().has('_code','listID', 'geography').has('value', "E14000763").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000763")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000763").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Islington North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000764").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000764")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000764").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Islington South and Finsbury").next()


g.V().has('_code','listID', 'geography').has('value', "E14000765").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000765")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000765").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Jarrow").next()


g.V().has('_code','listID', 'geography').has('value', "E14000766").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000766")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000766").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Keighley").next()


g.V().has('_code','listID', 'geography').has('value', "E14000767").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000767")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000767").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Kenilworth and Southam").next()


g.V().has('_code','listID', 'geography').has('value', "E14000768").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000768")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000768").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Kensington").next()


g.V().has('_code','listID', 'geography').has('value', "E14000769").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000769")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000769").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Kettering").next()


g.V().has('_code','listID', 'geography').has('value', "E14000770").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000770")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000770").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Kingston and Surbiton").next()


g.V().has('_code','listID', 'geography').has('value', "E14000771").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000771")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000771").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Kingston upon Hull East").next()


g.V().has('_code','listID', 'geography').has('value', "E14000772").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000772")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000772").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Kingston upon Hull North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000773").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000773")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000773").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Kingston upon Hull West and Hessle").next()


g.V().has('_code','listID', 'geography').has('value', "E14000774").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000774")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000774").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Kingswood").next()


g.V().has('_code','listID', 'geography').has('value', "E14000775").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000775")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000775").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Knowsley").next()


g.V().has('_code','listID', 'geography').has('value', "E14000776").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000776")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000776").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Lancaster and Fleetwood").next()


g.V().has('_code','listID', 'geography').has('value', "E14000777").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000777")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000777").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Leeds Central").next()


g.V().has('_code','listID', 'geography').has('value', "E14000778").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000778")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000778").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Leeds East").next()


g.V().has('_code','listID', 'geography').has('value', "E14000779").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000779")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000779").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Leeds North East").next()


g.V().has('_code','listID', 'geography').has('value', "E14000780").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000780")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000780").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Leeds North West").next()


g.V().has('_code','listID', 'geography').has('value', "E14000781").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000781")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000781").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Leeds West").next()


g.V().has('_code','listID', 'geography').has('value', "E14000782").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000782")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000782").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Leicester East").next()


g.V().has('_code','listID', 'geography').has('value', "E14000783").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000783")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000783").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Leicester South").next()


g.V().has('_code','listID', 'geography').has('value', "E14000784").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000784")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000784").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Leicester West").next()


g.V().has('_code','listID', 'geography').has('value', "E14000785").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000785")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000785").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Leigh").next()


g.V().has('_code','listID', 'geography').has('value', "E14000786").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000786")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000786").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Lewes").next()


g.V().has('_code','listID', 'geography').has('value', "E14000787").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000787")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000787").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Lewisham East").next()


g.V().has('_code','listID', 'geography').has('value', "E14000788").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000788")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000788").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Lewisham West and Penge").next()


g.V().has('_code','listID', 'geography').has('value', "E14000789").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000789")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000789").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Lewisham, Deptford").next()


g.V().has('_code','listID', 'geography').has('value', "E14000790").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000790")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000790").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Leyton and Wanstead").next()


g.V().has('_code','listID', 'geography').has('value', "E14000791").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000791")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000791").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Lichfield").next()


g.V().has('_code','listID', 'geography').has('value', "E14000792").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000792")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000792").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Lincoln").next()


g.V().has('_code','listID', 'geography').has('value', "E14000793").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000793")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000793").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Liverpool, Riverside").next()


g.V().has('_code','listID', 'geography').has('value', "E14000794").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000794")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000794").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Liverpool, Walton").next()


g.V().has('_code','listID', 'geography').has('value', "E14000795").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000795")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000795").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Liverpool, Wavertree").next()


g.V().has('_code','listID', 'geography').has('value', "E14000796").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000796")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000796").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Liverpool, West Derby").next()


g.V().has('_code','listID', 'geography').has('value', "E14000797").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000797")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000797").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Loughborough").next()


g.V().has('_code','listID', 'geography').has('value', "E14000798").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000798")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000798").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Louth and Horncastle").next()


g.V().has('_code','listID', 'geography').has('value', "E14000799").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000799")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000799").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Ludlow").next()


g.V().has('_code','listID', 'geography').has('value', "E14000800").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000800")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000800").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Luton North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000801").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000801")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000801").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Luton South").next()


g.V().has('_code','listID', 'geography').has('value', "E14000802").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000802")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000802").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Macclesfield").next()


g.V().has('_code','listID', 'geography').has('value', "E14000803").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000803")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000803").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Maidenhead").next()


g.V().has('_code','listID', 'geography').has('value', "E14000804").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000804")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000804").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Maidstone and The Weald").next()


g.V().has('_code','listID', 'geography').has('value', "E14000805").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000805")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000805").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Makerfield").next()


g.V().has('_code','listID', 'geography').has('value', "E14000806").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000806")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000806").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Maldon").next()


g.V().has('_code','listID', 'geography').has('value', "E14000807").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000807")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000807").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Manchester Central").next()


g.V().has('_code','listID', 'geography').has('value', "E14000808").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000808")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000808").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Manchester, Gorton").next()


g.V().has('_code','listID', 'geography').has('value', "E14000809").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000809")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000809").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Manchester, Withington").next()


g.V().has('_code','listID', 'geography').has('value', "E14000810").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000810")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000810").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Mansfield").next()


g.V().has('_code','listID', 'geography').has('value', "E14000811").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000811")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000811").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Meon Valley").next()


g.V().has('_code','listID', 'geography').has('value', "E14000812").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000812")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000812").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Meriden").next()


g.V().has('_code','listID', 'geography').has('value', "E14000813").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000813")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000813").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Mid Bedfordshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000814").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000814")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000814").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Mid Derbyshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000815").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000815")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000815").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Mid Dorset and North Poole").next()


g.V().has('_code','listID', 'geography').has('value', "E14000816").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000816")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000816").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Mid Norfolk").next()


g.V().has('_code','listID', 'geography').has('value', "E14000817").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000817")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000817").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Mid Sussex").next()


g.V().has('_code','listID', 'geography').has('value', "E14000818").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000818")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000818").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Mid Worcestershire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000819").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000819")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000819").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Middlesbrough").next()


g.V().has('_code','listID', 'geography').has('value', "E14000820").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000820")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000820").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Middlesbrough South and East Cleveland").next()


g.V().has('_code','listID', 'geography').has('value', "E14000821").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000821")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000821").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Milton Keynes North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000822").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000822")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000822").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Milton Keynes South").next()


g.V().has('_code','listID', 'geography').has('value', "E14000823").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000823")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000823").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Mitcham and Morden").next()


g.V().has('_code','listID', 'geography').has('value', "E14000824").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000824")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000824").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Mole Valley").next()


g.V().has('_code','listID', 'geography').has('value', "E14000825").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000825")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000825").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Morecambe and Lunesdale").next()


g.V().has('_code','listID', 'geography').has('value', "E14000826").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000826")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000826").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Morley and Outwood").next()


g.V().has('_code','listID', 'geography').has('value', "E14000827").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000827")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000827").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "New Forest East").next()


g.V().has('_code','listID', 'geography').has('value', "E14000828").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000828")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000828").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "New Forest West").next()


g.V().has('_code','listID', 'geography').has('value', "E14000829").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000829")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000829").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Newark").next()


g.V().has('_code','listID', 'geography').has('value', "E14000830").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000830")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000830").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Newbury").next()


g.V().has('_code','listID', 'geography').has('value', "E14000831").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000831")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000831").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Newcastle upon Tyne Central").next()


g.V().has('_code','listID', 'geography').has('value', "E14000832").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000832")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000832").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Newcastle upon Tyne East").next()


g.V().has('_code','listID', 'geography').has('value', "E14000833").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000833")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000833").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Newcastle upon Tyne North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000834").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000834")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000834").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Newcastle-under-Lyme").next()


g.V().has('_code','listID', 'geography').has('value', "E14000835").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000835")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000835").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Newton Abbot").next()


g.V().has('_code','listID', 'geography').has('value', "E14000836").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000836")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000836").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Normanton, Pontefract and Castleford").next()


g.V().has('_code','listID', 'geography').has('value', "E14000837").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000837")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000837").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North Cornwall").next()


g.V().has('_code','listID', 'geography').has('value', "E14000838").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000838")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000838").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North Devon").next()


g.V().has('_code','listID', 'geography').has('value', "E14000839").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000839")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000839").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North Dorset").next()


g.V().has('_code','listID', 'geography').has('value', "E14000840").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000840")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000840").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North Durham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000841").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000841")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000841").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North East Bedfordshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000842").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000842")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000842").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North East Cambridgeshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000843").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000843")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000843").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North East Derbyshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000844").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000844")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000844").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North East Hampshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000845").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000845")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000845").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North East Hertfordshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000846").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000846")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000846").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North East Somerset").next()


g.V().has('_code','listID', 'geography').has('value', "E14000847").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000847")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000847").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North Herefordshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000848").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000848")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000848").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North Norfolk").next()


g.V().has('_code','listID', 'geography').has('value', "E14000849").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000849")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000849").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North Shropshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000850").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000850")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000850").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North Somerset").next()


g.V().has('_code','listID', 'geography').has('value', "E14000851").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000851")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000851").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North Swindon").next()


g.V().has('_code','listID', 'geography').has('value', "E14000852").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000852")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000852").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North Thanet").next()


g.V().has('_code','listID', 'geography').has('value', "E14000853").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000853")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000853").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North Tyneside").next()


g.V().has('_code','listID', 'geography').has('value', "E14000854").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000854")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000854").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North Warwickshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000855").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000855")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000855").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North West Cambridgeshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000856").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000856")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000856").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North West Durham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000857").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000857")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000857").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North West Hampshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000858").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000858")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000858").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North West Leicestershire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000859").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000859")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000859").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North West Norfolk").next()


g.V().has('_code','listID', 'geography').has('value', "E14000860").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000860")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000860").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North Wiltshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000861").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000861")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000861").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Northampton North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000862").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000862")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000862").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Northampton South").next()


g.V().has('_code','listID', 'geography').has('value', "E14000863").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000863")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000863").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Norwich North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000864").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000864")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000864").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Norwich South").next()


g.V().has('_code','listID', 'geography').has('value', "E14000865").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000865")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000865").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Nottingham East").next()


g.V().has('_code','listID', 'geography').has('value', "E14000866").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000866")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000866").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Nottingham North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000867").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000867")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000867").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Nottingham South").next()


g.V().has('_code','listID', 'geography').has('value', "E14000868").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000868")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000868").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Nuneaton").next()


g.V().has('_code','listID', 'geography').has('value', "E14000869").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000869")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000869").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Old Bexley and Sidcup").next()


g.V().has('_code','listID', 'geography').has('value', "E14000870").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000870")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000870").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Oldham East and Saddleworth").next()


g.V().has('_code','listID', 'geography').has('value', "E14000871").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000871")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000871").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Oldham West and Royton").next()


g.V().has('_code','listID', 'geography').has('value', "E14000872").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000872")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000872").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Orpington").next()


g.V().has('_code','listID', 'geography').has('value', "E14000873").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000873")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000873").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Oxford East").next()


g.V().has('_code','listID', 'geography').has('value', "E14000874").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000874")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000874").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Oxford West and Abingdon").next()


g.V().has('_code','listID', 'geography').has('value', "E14000875").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000875")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000875").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Pendle").next()


g.V().has('_code','listID', 'geography').has('value', "E14000876").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000876")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000876").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Penistone and Stocksbridge").next()


g.V().has('_code','listID', 'geography').has('value', "E14000877").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000877")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000877").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Penrith and The Border").next()


g.V().has('_code','listID', 'geography').has('value', "E14000878").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000878")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000878").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Peterborough").next()


g.V().has('_code','listID', 'geography').has('value', "E14000879").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000879")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000879").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Plymouth, Moor View").next()


g.V().has('_code','listID', 'geography').has('value', "E14000880").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000880")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000880").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Plymouth, Sutton and Devonport").next()


g.V().has('_code','listID', 'geography').has('value', "E14000881").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000881")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000881").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Poole").next()


g.V().has('_code','listID', 'geography').has('value', "E14000882").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000882")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000882").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Poplar and Limehouse").next()


g.V().has('_code','listID', 'geography').has('value', "E14000883").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000883")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000883").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Portsmouth North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000884").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000884")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000884").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Portsmouth South").next()


g.V().has('_code','listID', 'geography').has('value', "E14000885").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000885")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000885").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Preston").next()


g.V().has('_code','listID', 'geography').has('value', "E14000886").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000886")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000886").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Pudsey").next()


g.V().has('_code','listID', 'geography').has('value', "E14000887").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000887")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000887").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Putney").next()


g.V().has('_code','listID', 'geography').has('value', "E14000888").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000888")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000888").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Rayleigh and Wickford").next()


g.V().has('_code','listID', 'geography').has('value', "E14000889").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000889")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000889").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Reading East").next()


g.V().has('_code','listID', 'geography').has('value', "E14000890").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000890")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000890").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Reading West").next()


g.V().has('_code','listID', 'geography').has('value', "E14000891").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000891")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000891").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Redcar").next()


g.V().has('_code','listID', 'geography').has('value', "E14000892").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000892")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000892").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Redditch").next()


g.V().has('_code','listID', 'geography').has('value', "E14000893").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000893")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000893").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Reigate").next()


g.V().has('_code','listID', 'geography').has('value', "E14000894").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000894")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000894").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Ribble Valley").next()


g.V().has('_code','listID', 'geography').has('value', "E14000895").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000895")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000895").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Richmond (Yorks)").next()


g.V().has('_code','listID', 'geography').has('value', "E14000896").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000896")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000896").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Richmond Park").next()


g.V().has('_code','listID', 'geography').has('value', "E14000897").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000897")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000897").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Rochdale").next()


g.V().has('_code','listID', 'geography').has('value', "E14000898").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000898")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000898").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Rochester and Strood").next()


g.V().has('_code','listID', 'geography').has('value', "E14000899").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000899")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000899").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Rochford and Southend East").next()


g.V().has('_code','listID', 'geography').has('value', "E14000900").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000900")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000900").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Romford").next()


g.V().has('_code','listID', 'geography').has('value', "E14000901").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000901")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000901").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Romsey and Southampton North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000902").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000902")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000902").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Rossendale and Darwen").next()


g.V().has('_code','listID', 'geography').has('value', "E14000903").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000903")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000903").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Rother Valley").next()


g.V().has('_code','listID', 'geography').has('value', "E14000904").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000904")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000904").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Rotherham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000905").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000905")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000905").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Rugby").next()


g.V().has('_code','listID', 'geography').has('value', "E14000906").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000906")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000906").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Ruislip, Northwood and Pinner").next()


g.V().has('_code','listID', 'geography').has('value', "E14000907").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000907")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000907").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Runnymede and Weybridge").next()


g.V().has('_code','listID', 'geography').has('value', "E14000908").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000908")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000908").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Rushcliffe").next()


g.V().has('_code','listID', 'geography').has('value', "E14000909").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000909")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000909").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Rutland and Melton").next()


g.V().has('_code','listID', 'geography').has('value', "E14000910").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000910")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000910").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Saffron Walden").next()


g.V().has('_code','listID', 'geography').has('value', "E14000911").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000911")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000911").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Salford and Eccles").next()


g.V().has('_code','listID', 'geography').has('value', "E14000912").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000912")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000912").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Salisbury").next()


g.V().has('_code','listID', 'geography').has('value', "E14000913").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000913")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000913").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Scarborough and Whitby").next()


g.V().has('_code','listID', 'geography').has('value', "E14000914").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000914")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000914").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Scunthorpe").next()


g.V().has('_code','listID', 'geography').has('value', "E14000915").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000915")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000915").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Sedgefield").next()


g.V().has('_code','listID', 'geography').has('value', "E14000916").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000916")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000916").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Sefton Central").next()


g.V().has('_code','listID', 'geography').has('value', "E14000917").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000917")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000917").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Selby and Ainsty").next()


g.V().has('_code','listID', 'geography').has('value', "E14000918").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000918")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000918").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Sevenoaks").next()


g.V().has('_code','listID', 'geography').has('value', "E14000919").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000919")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000919").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Sheffield Central").next()


g.V().has('_code','listID', 'geography').has('value', "E14000920").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000920")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000920").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Sheffield South East").next()


g.V().has('_code','listID', 'geography').has('value', "E14000921").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000921")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000921").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Sheffield, Brightside and Hillsborough").next()


g.V().has('_code','listID', 'geography').has('value', "E14000922").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000922")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000922").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Sheffield, Hallam").next()


g.V().has('_code','listID', 'geography').has('value', "E14000923").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000923")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000923").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Sheffield, Heeley").next()


g.V().has('_code','listID', 'geography').has('value', "E14000924").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000924")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000924").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Sherwood").next()


g.V().has('_code','listID', 'geography').has('value', "E14000925").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000925")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000925").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Shipley").next()


g.V().has('_code','listID', 'geography').has('value', "E14000926").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000926")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000926").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Shrewsbury and Atcham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000927").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000927")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000927").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Sittingbourne and Sheppey").next()


g.V().has('_code','listID', 'geography').has('value', "E14000928").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000928")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000928").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Skipton and Ripon").next()


g.V().has('_code','listID', 'geography').has('value', "E14000929").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000929")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000929").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Sleaford and North Hykeham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000930").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000930")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000930").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Slough").next()


g.V().has('_code','listID', 'geography').has('value', "E14000931").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000931")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000931").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Solihull").next()


g.V().has('_code','listID', 'geography').has('value', "E14000932").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000932")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000932").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Somerton and Frome").next()


g.V().has('_code','listID', 'geography').has('value', "E14000933").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000933")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000933").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South Basildon and East Thurrock").next()


g.V().has('_code','listID', 'geography').has('value', "E14000934").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000934")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000934").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South Cambridgeshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000935").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000935")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000935").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South Derbyshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000936").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000936")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000936").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South Dorset").next()


g.V().has('_code','listID', 'geography').has('value', "E14000937").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000937")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000937").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South East Cambridgeshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000938").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000938")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000938").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South East Cornwall").next()


g.V().has('_code','listID', 'geography').has('value', "E14000939").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000939")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000939").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South Holland and The Deepings").next()


g.V().has('_code','listID', 'geography').has('value', "E14000940").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000940")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000940").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South Leicestershire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000941").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000941")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000941").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South Norfolk").next()


g.V().has('_code','listID', 'geography').has('value', "E14000942").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000942")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000942").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South Northamptonshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000943").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000943")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000943").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South Ribble").next()


g.V().has('_code','listID', 'geography').has('value', "E14000944").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000944")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000944").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South Shields").next()


g.V().has('_code','listID', 'geography').has('value', "E14000945").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000945")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000945").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South Staffordshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000946").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000946")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000946").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South Suffolk").next()


g.V().has('_code','listID', 'geography').has('value', "E14000947").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000947")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000947").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South Swindon").next()


g.V().has('_code','listID', 'geography').has('value', "E14000948").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000948")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000948").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South Thanet").next()


g.V().has('_code','listID', 'geography').has('value', "E14000949").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000949")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000949").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South West Bedfordshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000950").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000950")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000950").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South West Devon").next()


g.V().has('_code','listID', 'geography').has('value', "E14000951").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000951")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000951").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South West Hertfordshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000952").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000952")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000952").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South West Norfolk").next()


g.V().has('_code','listID', 'geography').has('value', "E14000953").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000953")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000953").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South West Surrey").next()


g.V().has('_code','listID', 'geography').has('value', "E14000954").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000954")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000954").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South West Wiltshire").next()


g.V().has('_code','listID', 'geography').has('value', "E14000955").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000955")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000955").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Southampton, Itchen").next()


g.V().has('_code','listID', 'geography').has('value', "E14000956").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000956")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000956").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Southampton, Test").next()


g.V().has('_code','listID', 'geography').has('value', "E14000957").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000957")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000957").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Southend West").next()


g.V().has('_code','listID', 'geography').has('value', "E14000958").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000958")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000958").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Southport").next()


g.V().has('_code','listID', 'geography').has('value', "E14000959").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000959")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000959").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Spelthorne").next()


g.V().has('_code','listID', 'geography').has('value', "E14000960").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000960")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000960").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "St Albans").next()


g.V().has('_code','listID', 'geography').has('value', "E14000961").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000961")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000961").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "St Austell and Newquay").next()


g.V().has('_code','listID', 'geography').has('value', "E14000962").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000962")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000962").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "St Helens North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000963").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000963")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000963").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "St Helens South and Whiston").next()


g.V().has('_code','listID', 'geography').has('value', "E14000964").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000964")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000964").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "St Ives").next()


g.V().has('_code','listID', 'geography').has('value', "E14000965").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000965")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000965").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Stafford").next()


g.V().has('_code','listID', 'geography').has('value', "E14000966").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000966")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000966").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Staffordshire Moorlands").next()


g.V().has('_code','listID', 'geography').has('value', "E14000967").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000967")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000967").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Stalybridge and Hyde").next()


g.V().has('_code','listID', 'geography').has('value', "E14000968").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000968")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000968").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Stevenage").next()


g.V().has('_code','listID', 'geography').has('value', "E14000969").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000969")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000969").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Stockport").next()


g.V().has('_code','listID', 'geography').has('value', "E14000970").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000970")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000970").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Stockton North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000971").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000971")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000971").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Stockton South").next()


g.V().has('_code','listID', 'geography').has('value', "E14000972").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000972")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000972").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Stoke-on-Trent Central").next()


g.V().has('_code','listID', 'geography').has('value', "E14000973").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000973")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000973").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Stoke-on-Trent North").next()


g.V().has('_code','listID', 'geography').has('value', "E14000974").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000974")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000974").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Stoke-on-Trent South").next()


g.V().has('_code','listID', 'geography').has('value', "E14000975").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000975")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000975").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Stone").next()


g.V().has('_code','listID', 'geography').has('value', "E14000976").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000976")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000976").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Stourbridge").next()


g.V().has('_code','listID', 'geography').has('value', "E14000977").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000977")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000977").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Stratford-on-Avon").next()


g.V().has('_code','listID', 'geography').has('value', "E14000978").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000978")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000978").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Streatham").next()


g.V().has('_code','listID', 'geography').has('value', "E14000979").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000979")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000979").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Stretford and Urmston").next()


g.V().has('_code','listID', 'geography').has('value', "E14000980").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000980")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000980").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Stroud").next()


g.V().has('_code','listID', 'geography').has('value', "E14000981").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000981")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000981").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Suffolk Coastal").next()


g.V().has('_code','listID', 'geography').has('value', "E14000982").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000982")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000982").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Sunderland Central").next()


g.V().has('_code','listID', 'geography').has('value', "E14000983").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000983")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000983").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Surrey Heath").next()


g.V().has('_code','listID', 'geography').has('value', "E14000984").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000984")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000984").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Sutton and Cheam").next()


g.V().has('_code','listID', 'geography').has('value', "E14000985").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000985")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000985").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Sutton Coldfield").next()


g.V().has('_code','listID', 'geography').has('value', "E14000986").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000986")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000986").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Tamworth").next()


g.V().has('_code','listID', 'geography').has('value', "E14000987").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000987")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000987").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Tatton").next()


g.V().has('_code','listID', 'geography').has('value', "E14000988").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000988")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000988").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Taunton Deane").next()


g.V().has('_code','listID', 'geography').has('value', "E14000989").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000989")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000989").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Telford").next()


g.V().has('_code','listID', 'geography').has('value', "E14000990").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000990")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000990").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Tewkesbury").next()


g.V().has('_code','listID', 'geography').has('value', "E14000991").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000991")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000991").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "The Cotswolds").next()


g.V().has('_code','listID', 'geography').has('value', "E14000992").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000992")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000992").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "The Wrekin").next()


g.V().has('_code','listID', 'geography').has('value', "E14000993").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000993")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000993").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Thirsk and Malton").next()


g.V().has('_code','listID', 'geography').has('value', "E14000994").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000994")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000994").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Thornbury and Yate").next()


g.V().has('_code','listID', 'geography').has('value', "E14000995").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000995")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000995").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Thurrock").next()


g.V().has('_code','listID', 'geography').has('value', "E14000996").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000996")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000996").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Tiverton and Honiton").next()


g.V().has('_code','listID', 'geography').has('value', "E14000997").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000997")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000997").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Tonbridge and Malling").next()


g.V().has('_code','listID', 'geography').has('value', "E14000998").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000998")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000998").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Tooting").next()


g.V().has('_code','listID', 'geography').has('value', "E14000999").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14000999")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14000999").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Torbay").next()


g.V().has('_code','listID', 'geography').has('value', "E14001000").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001000")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001000").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Torridge and West Devon").next()


g.V().has('_code','listID', 'geography').has('value', "E14001001").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001001")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001001").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Totnes").next()


g.V().has('_code','listID', 'geography').has('value', "E14001002").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001002")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001002").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Tottenham").next()


g.V().has('_code','listID', 'geography').has('value', "E14001003").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001003")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001003").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Truro and Falmouth").next()


g.V().has('_code','listID', 'geography').has('value', "E14001004").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001004")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001004").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Tunbridge Wells").next()


g.V().has('_code','listID', 'geography').has('value', "E14001005").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001005")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001005").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Twickenham").next()


g.V().has('_code','listID', 'geography').has('value', "E14001006").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001006")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001006").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Tynemouth").next()


g.V().has('_code','listID', 'geography').has('value', "E14001007").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001007")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001007").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Uxbridge and South Ruislip").next()


g.V().has('_code','listID', 'geography').has('value', "E14001008").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001008")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001008").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Vauxhall").next()


g.V().has('_code','listID', 'geography').has('value', "E14001009").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001009")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001009").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wakefield").next()


g.V().has('_code','listID', 'geography').has('value', "E14001010").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001010")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001010").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wallasey").next()


g.V().has('_code','listID', 'geography').has('value', "E14001011").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001011")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001011").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Walsall North").next()


g.V().has('_code','listID', 'geography').has('value', "E14001012").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001012")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001012").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Walsall South").next()


g.V().has('_code','listID', 'geography').has('value', "E14001013").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001013")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001013").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Walthamstow").next()


g.V().has('_code','listID', 'geography').has('value', "E14001014").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001014")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001014").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wansbeck").next()


g.V().has('_code','listID', 'geography').has('value', "E14001015").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001015")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001015").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wantage").next()


g.V().has('_code','listID', 'geography').has('value', "E14001016").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001016")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001016").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Warley").next()


g.V().has('_code','listID', 'geography').has('value', "E14001017").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001017")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001017").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Warrington North").next()


g.V().has('_code','listID', 'geography').has('value', "E14001018").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001018")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001018").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Warrington South").next()


g.V().has('_code','listID', 'geography').has('value', "E14001019").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001019")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001019").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Warwick and Leamington").next()


g.V().has('_code','listID', 'geography').has('value', "E14001020").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001020")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001020").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Washington and Sunderland West").next()


g.V().has('_code','listID', 'geography').has('value', "E14001021").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001021")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001021").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Watford").next()


g.V().has('_code','listID', 'geography').has('value', "E14001022").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001022")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001022").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Waveney").next()


g.V().has('_code','listID', 'geography').has('value', "E14001023").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001023")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001023").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wealden").next()


g.V().has('_code','listID', 'geography').has('value', "E14001024").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001024")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001024").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Weaver Vale").next()


g.V().has('_code','listID', 'geography').has('value', "E14001025").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001025")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001025").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wellingborough").next()


g.V().has('_code','listID', 'geography').has('value', "E14001026").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001026")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001026").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wells").next()


g.V().has('_code','listID', 'geography').has('value', "E14001027").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001027")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001027").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Welwyn Hatfield").next()


g.V().has('_code','listID', 'geography').has('value', "E14001028").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001028")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001028").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wentworth and Dearne").next()


g.V().has('_code','listID', 'geography').has('value', "E14001029").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001029")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001029").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "West Bromwich East").next()


g.V().has('_code','listID', 'geography').has('value', "E14001030").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001030")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001030").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "West Bromwich West").next()


g.V().has('_code','listID', 'geography').has('value', "E14001031").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001031")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001031").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "West Dorset").next()


g.V().has('_code','listID', 'geography').has('value', "E14001032").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001032")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001032").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "West Ham").next()


g.V().has('_code','listID', 'geography').has('value', "E14001033").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001033")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001033").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "West Lancashire").next()


g.V().has('_code','listID', 'geography').has('value', "E14001034").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001034")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001034").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "West Suffolk").next()


g.V().has('_code','listID', 'geography').has('value', "E14001035").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001035")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001035").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "West Worcestershire").next()


g.V().has('_code','listID', 'geography').has('value', "E14001036").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001036")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001036").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Westminster North").next()


g.V().has('_code','listID', 'geography').has('value', "E14001037").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001037")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001037").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Westmorland and Lonsdale").next()


g.V().has('_code','listID', 'geography').has('value', "E14001038").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001038")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001038").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Weston-Super-Mare").next()


g.V().has('_code','listID', 'geography').has('value', "E14001039").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001039")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001039").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wigan").next()


g.V().has('_code','listID', 'geography').has('value', "E14001040").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001040")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001040").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wimbledon").next()


g.V().has('_code','listID', 'geography').has('value', "E14001041").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001041")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001041").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Winchester").next()


g.V().has('_code','listID', 'geography').has('value', "E14001042").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001042")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001042").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Windsor").next()


g.V().has('_code','listID', 'geography').has('value', "E14001043").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001043")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001043").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wirral South").next()


g.V().has('_code','listID', 'geography').has('value', "E14001044").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001044")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001044").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wirral West").next()


g.V().has('_code','listID', 'geography').has('value', "E14001045").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001045")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001045").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Witham").next()


g.V().has('_code','listID', 'geography').has('value', "E14001046").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001046")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001046").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Witney").next()


g.V().has('_code','listID', 'geography').has('value', "E14001047").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001047")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001047").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Woking").next()


g.V().has('_code','listID', 'geography').has('value', "E14001048").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001048")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001048").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wokingham").next()


g.V().has('_code','listID', 'geography').has('value', "E14001049").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001049")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001049").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wolverhampton North East").next()


g.V().has('_code','listID', 'geography').has('value', "E14001050").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001050")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001050").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wolverhampton South East").next()


g.V().has('_code','listID', 'geography').has('value', "E14001051").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001051")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001051").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wolverhampton South West").next()


g.V().has('_code','listID', 'geography').has('value', "E14001052").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001052")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001052").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Worcester").next()


g.V().has('_code','listID', 'geography').has('value', "E14001053").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001053")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001053").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Workington").next()


g.V().has('_code','listID', 'geography').has('value', "E14001054").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001054")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001054").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Worsley and Eccles South").next()


g.V().has('_code','listID', 'geography').has('value', "E14001055").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001055")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001055").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Worthing West").next()


g.V().has('_code','listID', 'geography').has('value', "E14001056").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001056")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001056").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wycombe").next()


g.V().has('_code','listID', 'geography').has('value', "E14001057").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001057")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001057").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wyre and Preston North").next()


g.V().has('_code','listID', 'geography').has('value', "E14001058").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001058")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001058").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wyre Forest").next()


g.V().has('_code','listID', 'geography').has('value', "E14001059").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001059")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001059").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wythenshawe and Sale East").next()


g.V().has('_code','listID', 'geography').has('value', "E14001060").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001060")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001060").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Yeovil").next()


g.V().has('_code','listID', 'geography').has('value', "E14001061").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001061")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001061").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "York Central").next()


g.V().has('_code','listID', 'geography').has('value', "E14001062").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E14001062")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E14001062").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "York Outer").next()


g.V().has('_code','listID', 'geography').has('value', "N06000001").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "N06000001")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "N06000001").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Belfast East").next()


g.V().has('_code','listID', 'geography').has('value', "N06000002").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "N06000002")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "N06000002").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Belfast North").next()


g.V().has('_code','listID', 'geography').has('value', "N06000003").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "N06000003")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "N06000003").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Belfast South").next()


g.V().has('_code','listID', 'geography').has('value', "N06000004").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "N06000004")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "N06000004").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Belfast West").next()


g.V().has('_code','listID', 'geography').has('value', "N06000005").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "N06000005")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "N06000005").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "East Antrim").next()


g.V().has('_code','listID', 'geography').has('value', "N06000006").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "N06000006")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "N06000006").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "East Londonderry").next()


g.V().has('_code','listID', 'geography').has('value', "N06000007").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "N06000007")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "N06000007").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Fermanagh and South Tyrone").next()


g.V().has('_code','listID', 'geography').has('value', "N06000008").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "N06000008")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "N06000008").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Foyle").next()


g.V().has('_code','listID', 'geography').has('value', "N06000009").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "N06000009")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "N06000009").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Lagan Valley").next()


g.V().has('_code','listID', 'geography').has('value', "N06000010").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "N06000010")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "N06000010").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Mid Ulster").next()


g.V().has('_code','listID', 'geography').has('value', "N06000011").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "N06000011")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "N06000011").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Newry and Armagh").next()


g.V().has('_code','listID', 'geography').has('value', "N06000012").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "N06000012")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "N06000012").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North Antrim").next()


g.V().has('_code','listID', 'geography').has('value', "N06000013").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "N06000013")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "N06000013").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North Down").next()


g.V().has('_code','listID', 'geography').has('value', "N06000014").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "N06000014")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "N06000014").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South Antrim").next()


g.V().has('_code','listID', 'geography').has('value', "N06000015").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "N06000015")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "N06000015").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South Down").next()


g.V().has('_code','listID', 'geography').has('value', "N06000016").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "N06000016")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "N06000016").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Strangford").next()


g.V().has('_code','listID', 'geography').has('value', "N06000017").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "N06000017")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "N06000017").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Upper Bann").next()


g.V().has('_code','listID', 'geography').has('value', "N06000018").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "N06000018")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "N06000018").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "West Tyrone").next()


g.V().has('_code','listID', 'geography').has('value', "S14000001").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000001")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000001").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Aberdeen North").next()


g.V().has('_code','listID', 'geography').has('value', "S14000002").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000002")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000002").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Aberdeen South").next()


g.V().has('_code','listID', 'geography').has('value', "S14000003").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000003")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000003").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Airdrie and Shotts").next()


g.V().has('_code','listID', 'geography').has('value', "S14000004").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000004")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000004").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Angus").next()


g.V().has('_code','listID', 'geography').has('value', "S14000005").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000005")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000005").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Argyll and Bute").next()


g.V().has('_code','listID', 'geography').has('value', "S14000006").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000006")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000006").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Ayr, Carrick and Cumnock").next()


g.V().has('_code','listID', 'geography').has('value', "S14000007").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000007")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000007").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Banff and Buchan").next()


g.V().has('_code','listID', 'geography').has('value', "S14000008").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000008")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000008").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Berwickshire, Roxburgh and Selkirk").next()


g.V().has('_code','listID', 'geography').has('value', "S14000009").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000009")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000009").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Caithness, Sutherland and Easter Ross").next()


g.V().has('_code','listID', 'geography').has('value', "S14000010").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000010")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000010").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Central Ayrshire").next()


g.V().has('_code','listID', 'geography').has('value', "S14000011").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000011")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000011").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Coatbridge, Chryston and Bellshill").next()


g.V().has('_code','listID', 'geography').has('value', "S14000012").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000012")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000012").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Cumbernauld, Kilsyth and Kirkintilloch East").next()


g.V().has('_code','listID', 'geography').has('value', "S14000013").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000013")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000013").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Dumfries and Galloway").next()


g.V().has('_code','listID', 'geography').has('value', "S14000014").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000014")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000014").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Dumfriesshire, Clydesdale and Tweeddale").next()


g.V().has('_code','listID', 'geography').has('value', "S14000015").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000015")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000015").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Dundee East").next()


g.V().has('_code','listID', 'geography').has('value', "S14000016").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000016")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000016").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Dundee West").next()


g.V().has('_code','listID', 'geography').has('value', "S14000017").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000017")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000017").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Dunfermline and West Fife").next()


g.V().has('_code','listID', 'geography').has('value', "S14000018").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000018")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000018").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "East Dunbartonshire").next()


g.V().has('_code','listID', 'geography').has('value', "S14000019").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000019")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000019").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "East Kilbride, Strathaven and Lesmahagow").next()


g.V().has('_code','listID', 'geography').has('value', "S14000020").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000020")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000020").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "East Lothian").next()


g.V().has('_code','listID', 'geography').has('value', "S14000021").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000021")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000021").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "East Renfrewshire").next()


g.V().has('_code','listID', 'geography').has('value', "S14000022").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000022")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000022").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Edinburgh East").next()


g.V().has('_code','listID', 'geography').has('value', "S14000023").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000023")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000023").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Edinburgh North and Leith").next()


g.V().has('_code','listID', 'geography').has('value', "S14000024").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000024")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000024").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Edinburgh South").next()


g.V().has('_code','listID', 'geography').has('value', "S14000025").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000025")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000025").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Edinburgh South West").next()


g.V().has('_code','listID', 'geography').has('value', "S14000026").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000026")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000026").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Edinburgh West").next()


g.V().has('_code','listID', 'geography').has('value', "S14000027").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000027")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000027").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Na h-Eileanan an Iar").next()


g.V().has('_code','listID', 'geography').has('value', "S14000028").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000028")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000028").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Falkirk").next()


g.V().has('_code','listID', 'geography').has('value', "S14000029").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000029")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000029").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Glasgow Central").next()


g.V().has('_code','listID', 'geography').has('value', "S14000030").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000030")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000030").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Glasgow East").next()


g.V().has('_code','listID', 'geography').has('value', "S14000031").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000031")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000031").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Glasgow North").next()


g.V().has('_code','listID', 'geography').has('value', "S14000032").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000032")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000032").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Glasgow North East").next()


g.V().has('_code','listID', 'geography').has('value', "S14000033").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000033")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000033").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Glasgow North West").next()


g.V().has('_code','listID', 'geography').has('value', "S14000034").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000034")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000034").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Glasgow South").next()


g.V().has('_code','listID', 'geography').has('value', "S14000035").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000035")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000035").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Glasgow South West").next()


g.V().has('_code','listID', 'geography').has('value', "S14000036").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000036")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000036").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Glenrothes").next()


g.V().has('_code','listID', 'geography').has('value', "S14000037").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000037")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000037").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Gordon").next()


g.V().has('_code','listID', 'geography').has('value', "S14000038").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000038")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000038").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Inverclyde").next()


g.V().has('_code','listID', 'geography').has('value', "S14000039").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000039")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000039").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Inverness, Nairn, Badenoch and Strathspey").next()


g.V().has('_code','listID', 'geography').has('value', "S14000040").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000040")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000040").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Kilmarnock and Loudoun").next()


g.V().has('_code','listID', 'geography').has('value', "S14000041").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000041")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000041").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Kirkcaldy and Cowdenbeath").next()


g.V().has('_code','listID', 'geography').has('value', "S14000042").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000042")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000042").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Lanark and Hamilton East").next()


g.V().has('_code','listID', 'geography').has('value', "S14000043").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000043")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000043").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Linlithgow and East Falkirk").next()


g.V().has('_code','listID', 'geography').has('value', "S14000044").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000044")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000044").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Livingston").next()


g.V().has('_code','listID', 'geography').has('value', "S14000045").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000045")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000045").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Midlothian").next()


g.V().has('_code','listID', 'geography').has('value', "S14000046").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000046")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000046").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Moray").next()


g.V().has('_code','listID', 'geography').has('value', "S14000047").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000047")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000047").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Motherwell and Wishaw").next()


g.V().has('_code','listID', 'geography').has('value', "S14000048").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000048")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000048").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North Ayrshire and Arran").next()


g.V().has('_code','listID', 'geography').has('value', "S14000049").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000049")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000049").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North East Fife").next()


g.V().has('_code','listID', 'geography').has('value', "S14000050").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000050")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000050").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Ochil and South Perthshire").next()


g.V().has('_code','listID', 'geography').has('value', "S14000051").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000051")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000051").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Orkney and Shetland").next()


g.V().has('_code','listID', 'geography').has('value', "S14000052").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000052")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000052").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Paisley and Renfrewshire North").next()


g.V().has('_code','listID', 'geography').has('value', "S14000053").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000053")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000053").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Paisley and Renfrewshire South").next()


g.V().has('_code','listID', 'geography').has('value', "S14000054").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000054")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000054").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Perth and North Perthshire").next()


g.V().has('_code','listID', 'geography').has('value', "S14000055").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000055")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000055").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Ross, Skye and Lochaber").next()


g.V().has('_code','listID', 'geography').has('value', "S14000056").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000056")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000056").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Rutherglen and Hamilton West").next()


g.V().has('_code','listID', 'geography').has('value', "S14000057").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000057")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000057").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Stirling").next()


g.V().has('_code','listID', 'geography').has('value', "S14000058").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000058")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000058").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "West Aberdeenshire and Kincardine").next()


g.V().has('_code','listID', 'geography').has('value', "S14000059").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S14000059")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S14000059").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "West Dunbartonshire").next()


g.V().has('_code','listID', 'geography').has('value', "W07000041").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000041")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000041").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Ynys Môn").next()


g.V().has('_code','listID', 'geography').has('value', "W07000042").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000042")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000042").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Delyn").next()


g.V().has('_code','listID', 'geography').has('value', "W07000043").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000043")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000043").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Alyn and Deeside").next()


g.V().has('_code','listID', 'geography').has('value', "W07000044").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000044")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000044").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wrexham").next()


g.V().has('_code','listID', 'geography').has('value', "W07000045").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000045")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000045").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Llanelli").next()


g.V().has('_code','listID', 'geography').has('value', "W07000046").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000046")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000046").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Gower").next()


g.V().has('_code','listID', 'geography').has('value', "W07000047").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000047")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000047").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Swansea West").next()


g.V().has('_code','listID', 'geography').has('value', "W07000048").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000048")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000048").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Swansea East").next()


g.V().has('_code','listID', 'geography').has('value', "W07000049").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000049")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000049").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Aberavon").next()


g.V().has('_code','listID', 'geography').has('value', "W07000050").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000050")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000050").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Cardiff Central").next()


g.V().has('_code','listID', 'geography').has('value', "W07000051").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000051")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000051").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Cardiff North").next()


g.V().has('_code','listID', 'geography').has('value', "W07000052").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000052")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000052").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Rhondda").next()


g.V().has('_code','listID', 'geography').has('value', "W07000053").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000053")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000053").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Torfaen").next()


g.V().has('_code','listID', 'geography').has('value', "W07000054").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000054")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000054").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Monmouth").next()


g.V().has('_code','listID', 'geography').has('value', "W07000055").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000055")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000055").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Newport East").next()


g.V().has('_code','listID', 'geography').has('value', "W07000056").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000056")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000056").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Newport West").next()


g.V().has('_code','listID', 'geography').has('value', "W07000057").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000057")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000057").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Arfon").next()


g.V().has('_code','listID', 'geography').has('value', "W07000058").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000058")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000058").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Aberconwy").next()


g.V().has('_code','listID', 'geography').has('value', "W07000059").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000059")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000059").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Clwyd West").next()


g.V().has('_code','listID', 'geography').has('value', "W07000060").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000060")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000060").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Vale of Clwyd").next()


g.V().has('_code','listID', 'geography').has('value', "W07000061").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000061")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000061").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Dwyfor Meirionnydd").next()


g.V().has('_code','listID', 'geography').has('value', "W07000062").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000062")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000062").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Clwyd South").next()


g.V().has('_code','listID', 'geography').has('value', "W07000063").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000063")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000063").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Montgomeryshire").next()


g.V().has('_code','listID', 'geography').has('value', "W07000064").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000064")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000064").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Ceredigion").next()


g.V().has('_code','listID', 'geography').has('value', "W07000065").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000065")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000065").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Preseli Pembrokeshire").next()


g.V().has('_code','listID', 'geography').has('value', "W07000066").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000066")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000066").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Carmarthen West and South Pembrokeshire").next()


g.V().has('_code','listID', 'geography').has('value', "W07000067").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000067")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000067").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Carmarthen East and Dinefwr").next()


g.V().has('_code','listID', 'geography').has('value', "W07000068").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000068")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000068").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Brecon and Radnorshire").next()


g.V().has('_code','listID', 'geography').has('value', "W07000069").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000069")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000069").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Neath").next()


g.V().has('_code','listID', 'geography').has('value', "W07000070").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000070")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000070").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Cynon Valley").next()


g.V().has('_code','listID', 'geography').has('value', "W07000071").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000071")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000071").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Merthyr Tydfil and Rhymney").next()


g.V().has('_code','listID', 'geography').has('value', "W07000072").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000072")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000072").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Blaenau Gwent").next()


g.V().has('_code','listID', 'geography').has('value', "W07000073").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000073")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000073").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Bridgend").next()


g.V().has('_code','listID', 'geography').has('value', "W07000074").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000074")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000074").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Ogmore").next()


g.V().has('_code','listID', 'geography').has('value', "W07000075").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000075")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000075").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Pontypridd").next()


g.V().has('_code','listID', 'geography').has('value', "W07000076").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000076")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000076").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Caerphilly").next()


g.V().has('_code','listID', 'geography').has('value', "W07000077").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000077")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000077").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Islwyn").next()


g.V().has('_code','listID', 'geography').has('value', "W07000078").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000078")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000078").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Vale of Glamorgan").next()


g.V().has('_code','listID', 'geography').has('value', "W07000079").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000079")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000079").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Cardiff West").next()


g.V().has('_code','listID', 'geography').has('value', "W07000080").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W07000080")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W07000080").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Cardiff South and Penarth").next()


g.V().has('_code','listID', 'geography').has('value', "E15000008").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E15000008")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E15000008").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South East").next()


g.V().has('_code','listID', 'geography').has('value', "E15000005").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E15000005")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E15000005").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "West Midlands").next()


g.V().has('_code','listID', 'geography').has('value', "E15000002").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E15000002")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E15000002").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North West").next()


g.V().has('_code','listID', 'geography').has('value', "E15000004").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E15000004")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E15000004").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "East Midlands").next()


g.V().has('_code','listID', 'geography').has('value', "E15000007").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E15000007")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E15000007").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "London").next()


g.V().has('_code','listID', 'geography').has('value', "E15000003").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E15000003")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E15000003").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Yorkshire and The Humber").next()


g.V().has('_code','listID', 'geography').has('value', "E15000006").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E15000006")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E15000006").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Eastern").next()


g.V().has('_code','listID', 'geography').has('value', "E15000009").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E15000009")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E15000009").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "South West").next()


g.V().has('_code','listID', 'geography').has('value', "E15000001").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E15000001")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E15000001").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "North East").next()


g.V().has('_code','listID', 'geography').has('value', "N92000002").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "N92000002")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "N92000002").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Northern Ireland").next()


g.V().has('_code','listID', 'geography').has('value', "S92000003").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "S92000003")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "S92000003").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Scotland").next()


g.V().has('_code','listID', 'geography').has('value', "W92000004").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "W92000004")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "W92000004").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Wales").next()


g.V().has('_code','listID', 'geography').has('value', "K02000001").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "K02000001")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "K02000001").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "United Kingdom").next()


g.V().has('_code','listID', 'geography').has('value', "K03000001").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "K03000001")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "K03000001").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "Great Britain").next()


g.V().has('_code','listID', 'geography').has('value', "K04000001").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "K04000001")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "K04000001").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "England and Wales").next()


g.V().has('_code','listID', 'geography').has('value', "E92000001").
  fold().coalesce(unfold(), addV('_code').
    property(single, 'listID', 'geography').property(single, 'value', "E92000001")
  ).next()
g.V().has('_code', 'listID', 'geography').has('value', "E92000001").as('code').
  V().has('_code_list', 'listID', 'parliamentary-constituencies').has('edition', "one-off").
    coalesce(__.inE('usedBy').where(outV().as('code')),
       addE('usedBy').from('code')).property('label', "England").next()

